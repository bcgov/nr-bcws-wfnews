name: Build Android

# Controls when the workflow will run
on: 
  workflow_call:
    inputs:
      build_environment:
        description: 'Build Environment'
        type: string
        required: true
      upload_to_play_store:
        description: 'Upload to Play Store'
        type: boolean
        required: true
  workflow_dispatch:
    inputs:
      build_environment:
        description: 'Build Environment'
        type: choice
        options:
          - development
          - integration
          - production
        default: 'development'
      upload_to_play_store:
        description: 'Upload to Play Store'
        type: boolean
        default: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    env:
      ANGULAR_DIRECTORY: ./client/wfnews-war/src/main/angular
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3
      
      - name: Set short git commit SHA
        id: vars
        if: always()
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=short_sha::$calculatedSha"
      
      - name: Add .npmrc file
        working-directory: ${{ env.ANGULAR_DIRECTORY }}
        env: 
          NPMRC: ${{ secrets.NPMRC }}
        run: echo -e "$NPMRC" > .npmrc
          

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.2
        with:
          files: ${{ env.ANGULAR_DIRECTORY }}/src/assets/data/appConfig.mobile.json
        env:
          APPLICATION_ACRONYM: ${{ env.APPLICATION_ACRONYM }}
          APPLICATION_ENVIRONMENT: ${{ env.APPLICATION_ENVIRONMENT }}
          BUILD_NUMBER: ${{ github.run_number }}
          LAZY_AUTHENTICATE: ${{ env.LAZY_AUTHENTICATE }}
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}

      - name: Print appConfig
        run: cat ${{ env.ANGULAR_DIRECTORY }}/src/assets/data/appConfig.mobile.json

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        working-directory: ${{ env.ANGULAR_DIRECTORY }}
        run: npm install --legacy-peer-deps

      - name: Prepare app for build
        working-directory: ${{ env.ANGULAR_DIRECTORY }}
        run: ionic capacitor sync android --configuration=mobile

      - name: Make gradlew executable
        working-directory: ${{ env.ANGULAR_DIRECTORY }}/android
        run: chmod +x ./gradlew

      - uses: sparkfabrik/android-build-action@v1.4.0
        if: ${{ inputs.upload_to_play_store == 'false' }}
        name: Build APK
        with:
          increment-build-number: false
          project-path: '${{ env.ANGULAR_DIRECTORY }}/android/'
          output-path: wfnews-release-${{ steps.vars.outputs.short_sha }}.apk

      - uses: sparkfabrik/android-build-action@v1.4.0
        if: ${{ inputs.upload_to_play_store == 'true' }}
        name: Build AAB and upload to Play Store
        env:
          PACKAGE_NAME: ${{ secrets.KEY_ALIAS }}
        with:
          build-type: "bundle"
          gradle-task: "bundleRelease"
          increment-build-number: true
          package-name: ${{ env.PACKAGE_NAME }}
          keystore-content: ${{ secrets.KEYSTORE_CONTENT }}
          keystore-password: ${{ secrets.KEYSTORE_PASSWORD }}
          keystore-alias: ${{ secrets.KEY_ALIAS }}
          json-key-data: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
          upload-to-play-store: true
          project-path: '${{ env.ANGULAR_DIRECTORY }}/android/'
          output-path: wfnews-release-${{ steps.vars.outputs.short_sha }}.aab

      - uses: actions/upload-artifact@v3
        env: 
          FILE_EXTENSION: ${{ inputs.upload_to_play_store == 'false' && 'apk' || 'aab' }}
        name: Upload Build Artifact to GitHub
        with:
          name: wfnews-release-${{ steps.vars.outputs.short_sha }}.${{ env.FILE_EXTENSION }}
          path: '${{ env.ANGULAR_DIRECTORY }}/android/wfnews-release-${{ steps.vars.outputs.short_sha }}.${{ env.FILE_EXTENSION }}'
          retention-days: 3

      - name: Post to a Slack channel
        id: slack
        if: always()
        uses: slackapi/slack-github-action@v1.24.0
        env:
          STATUS_EMOJI: ${{ job.status == 'success' && ':white_check_mark:' || ':x:' }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'wildfire-build-notifier'
          slack-message: ":android: - ${{ steps.vars.outputs.short_sha }} : ${{ env.STATUS_EMOJI }} ${{ job.status }}  \n Environment: ${{ inputs.build_environment }} \n Upload to Play Store: ${{ inputs.upload_to_play_store }}"
          