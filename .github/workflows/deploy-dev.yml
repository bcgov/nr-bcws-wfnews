name: Deploy Dev

on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - ".github/workflows/**"
      - "client/**"
      - "server/**"
      - "database/**"
      - "docker/**"
      - "terraform/**"
      - "Dockerfile"
      - "Dockerfile_client"
      - "!**/README.md"
  workflow_dispatch:
    inputs:
      IS_HOTFIX:
        description: 'Is this a hotfix?'
        required: false
        default: 'false'

jobs:
  call-lambda-zip:
    uses: ./.github/workflows/lambda-zip.yml
    secrets: inherit
    with:
      REGISTRY: ${{ vars.REGISTRY }}

  call-mvn-client:
    uses: ./.github/workflows/mvn-client.yml
    secrets: inherit
    with:
      ENVIRONMENT: DEV
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      BRANCH: ${{ vars.PATCH_BRANCH }}
      TAG: ${{ vars.HOTFIX_TAG }}

  wfnews-api-server-build:
    uses: ./.github/workflows/mvn-server.yml
    secrets: inherit
    with:
      PROJECT_NAME: wfnews-api
      ENVIRONMENT: DEV
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      BRANCH: ${{ vars.PATCH_BRANCH }}
      TAG: ${{ vars.HOTFIX_TAG }}

  wfone-notifications-api-server-build:
    uses: ./.github/workflows/mvn-server.yml
    secrets: inherit
    with:
      PROJECT_NAME: wfone-notifications-api
      ENVIRONMENT: DEV
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      BRANCH: ${{ vars.PATCH_BRANCH }}
      TAG: ${{ vars.HOTFIX_TAG }}

  liquibase-build:
    uses: ./.github/workflows/liquibase.yml
    secrets: inherit
    with:
      ENVIRONMENT: DEV

  apisix-build:
    uses: ./.github/workflows/apisix.yml
    secrets: inherit
    with:
      ENVIRONMENT: DEV

  terragrunt-deploy-dev:
    uses: ./.github/workflows/terragrunt-deploy.yml
    needs: [call-lambda-zip, call-mvn-client, wfnews-api-server-build, wfone-notifications-api-server-build, liquibase-build, apisix-build]
    with:
      DEFAULT_APPLICATION_ENVIRONMENT: DEV
      IMAGE_TAG: ${{ inputs.IS_HOTFIX == 'true' && format('hotfix-{0}', inputs.BRANCH) || format( 'pr-{0}', github.event.pull_request.number) }}
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      TARGET_ENV: dev

      MAX_RECEIVED_COUNT: 10
      VISIBILITY_TIMEOUT_SECONDS: 100
      ACCEPTED_IPS: ""
      PUSH_NOTIFICATION_AWS_USER: ""
      EVENT_BRIDGE_ARN: ""
      WFNEWS_URL: ""
      SECRET_NAME: ""
      BAN_PROHIBITION_MONITOR_KEY: ""
      ACTIVE_FIRE_MONITOR_KEY: ""
      AREA_RESTRICTIONS_MONITOR_KEY: ""
      EVACUATION_MONITOR_KEY: ""
      LAMBDA_LAYER_KEY: ""
      FUNCTION_BUCKET: "wfnews-lambdas"

      #POINTID API VARIABLES
      DATABASE_WEATHER_URL: "jdbc:oracle:thin:@localhost:1521:dev"
      DATABASE_WEATHER_USER: "proxy_wf1_weather"
      BCGW_URL: https://test.openmaps.gov.bc.ca/geo/pub
      WFGS_URL: https://wf1geop.nrs.gov.bc.ca/geoserver
      MAX_ALLOWED_RADIUS: 1000
      ASYNC_JOB_INTERVAL: 900000
      ASYNC_JOB_REF_LAT: 55.2758
      ASYNC_JOB_REF_LONG: -124.8509
      ASYNC_JOB_REF_RADIUS: 999
      WEATHER_HOST: sechelt.idir.bcgov:1001
      WEATHER_USER: PROXY_GEOVIEWER
      WFARCGIS_URL: https://services6.arcgis.com
      WFARCGIS_LAYER_AREA_RESTRICTIONS: ubm4tcTYICKBpist/ArcGIS/rest/services/test_British_Columbia_Area_Restrictions/FeatureServer/0
      WFARCGIS_LAYER_BANS_PROHIBITION_AREAS: ubm4tcTYICKBpist/ArcGIS/rest/services/test_British_Columbia_Bans_and_Prohibition_Areas/FeatureServer/0
      WFARCGIS_LAYER_DANGER_RATING: ubm4tcTYICKBpist/ArcGIS/rest/services/test_British_Columbia_Danger_Rating/FeatureServer/0
      WFARCGIS_LAYER_ACTIVE_FIRES: ubm4tcTYICKBpist/ArcGIS/rest/services/BCWS_ActiveFires_PublicView/FeatureServer/0
      WFARCGIS_LAYER_EVACUATION_ORDERS_ALERTS: ubm4tcTYICKBpist/ArcGIS/rest/services/test_Emrg_Orders_and_Alerts/FeatureServer/0
      WFARCGIS_LAYER_FIRE_CENTRE_BOUNDARIES: ubm4tcTYICKBpist/ArcGIS/rest/services/British_Columbia_Fire_Centre_Boundaries/FeatureServer/0
      WFARCGIS_QUEUESIZE: 1500
      WEBADE_OAUTH2_CLIENT_ID: WFSS_POINTID_REST
      WEBADE_OAUTH2_TOKEN_URL: https://apps.nrs.gov.bc.ca/pub/oauth2/v1/oauth/token?disableDeveloperFilter=true
      WEBADE_OAUTH2_CLIENT_SCOPES: WFSS.* WFWX.*
      FIREWEATHER_BASEURL: https://bcwsapi.nrs.gov.bc.ca/wfwx-fireweather-api/
      FIREWEATHER_QUEUESIZE: 1500
      WFNEWS_BASEURL: https://wfnews-api.dev.bcwildfireservices.com/
      WFNEWS_QUEUESIZE: 1500

    secrets:
      API_KEY: ${{ secrets.API_KEY_DEV }}
      CLOUDFRONT_HEADER: ${{ secrets.CLOUDFRONT_HEADER_DEV }}
      DATABASE_WEATHER_PWD: ${{ secrets.DATABASE_WEATHER_PWD_DEV }}
      DB_PASS: ${{ secrets.DEV_DB_PASS }}
      LICENSE_PLATE: ${{ secrets.LICENSE_PLATE }}
      SMTP_PASSWORD: ${{ secrets.DEV_SMTP_PASSWORD }}
      SNS_EMAIL_TARGETS: ${{ secrets.SNS_EMAIL_TARGETS_DEV }}
      TFC_TEAM_TOKEN: ${{ secrets.TFC_TEAM_TOKEN }}
      WEATHER_PASSWORD: ${{ secrets.WEATHER_PASSWORD_DEV }}
      WEBADE_OAUTH2_CLIENT_SECRET: ${{ secrets.WEBADE_OAUTH2_CLIENT_SECRET_DEV }}
      WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET }}
      WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET}}

  jmeter-test-dev:
    uses: ./.github/workflows/jmeter.yml
    needs: [terragrunt-deploy-dev]
    with:
      ENVIRONMENT: dev
