name: Deploy Dev

env:
  REGISTRY: ghcr.io
  WEBADE_JCRS_URL: ${{ secrets.WEBADE_JCRS_URL }}
  NPMRC: ${{ secrets.NPMRC }}
  TRIGGERS: ('client/' 'server/' '.github/workflows')
on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - ".github/workflows/**"
      - "client/**"
      - "server/**"
      - "database/**"
      - "docker/**"
      - "terraform/**"
      - "Dockerfile"
      - "Dockerfile_client"
      - "!**/README.md"

jobs:

  call-mvn-client:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/mvn-client.yml
    secrets: inherit
    with: 
      REGISTRY: ghcr.io

  call-mvn-server:
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/mvn-server.yml
    #SMTP_PASSWORD, DV_PASSWORD AND TFC_PROJECT ARE STORED AS SECRET
    with:
      REGISTRY: ghcr.io
    secrets:
      IDIR_AS_EMAIL: ${{ secrets.IDIR_AS_EMAIL }}
      IDIR_PASSWORD: ${{ secrets.IDIR_PASSWORD }}

  liquibase-build:
    uses: ./.github/workflows/liquibase.yml
    with:
      REGISTRY: ghcr.io
    secrets: inherit

  apisix-build:
    uses: ./.github/workflows/apisix.yml
    with:
      REGISTRY: ghcr.io
    secrets: inherit

  terragrunt-deploy-dev:
    uses: ./.github/workflows/terragrunt-deploy.yml
    needs: [call-mvn-client, call-mvn-server, liquibase-build, apisix-build]
    with:
      REGISTRY: ghcr.io
      #Server and Image name get PR number as appropriate inside deploy step
      CLIENT_IMAGE: nr-bcws-wfnews-client
      SERVER_IMAGE: nr-bcws-wfnews-server
      LIQUIBASE_IMAGE: nr-bcws-wfnews-liquibase
      APISIX_IMAGE: nr-bcws-wfnews-apisix

      #1024 CPU units = 1 vCPU
      CLIENT_CPU_UNITS: 1024
      CLIENT_MEMORY: 2048
      SERVER_CPU_UNITS: 1024
      SERVER_MEMORY: 2048
      DB_INSTANCE_TYPE: 'db.t3.micro'

      INSTANCE_COUNT: 2

      LOGGING_LEVEL: INFO

      TARGET_ENV: dev
      ALB_NAME: default
      VPC_NAME: Dev_vpc
      SUBNET_FILTER: App
      WEBADE_OAUTH2_UI_CLIENT_ID: WFNEWS-UI
      WEBADE_OAUTH2_REST_CLIENT_ID: WFNEWS-REST
      WEBADE-OAUTH2_TOKEN_CLIENT_URL: https://intapps.nrs.gov.bc.ca/pub/oauth2/v1/check_token?disableDeveloperFilter=true&grant_type=client_credentials
      WEBADE-OAUTH2_TOKEN_URL: https://intapps.nrs.gov.bc.ca/pub/oauth2/v1/oauth/token?disableDeveloperFilter=true
      WEBADE_OAUTH2_AUTHORIZE_URL: https://intapps.nrs.gov.bc.ca/ext/oauth2/v1/oauth/authorize
      WFDM_REST_URL: https://i1bcwsapi.nrs.gov.bc.ca/wfdm-document-management-api/
      WFIM_CLIENT_URL: https://i1bcwsapi.nrs.gov.bc.ca/wfim-incidents-api/
      WFIM_CODE_TABLES_URL: https://i1bcwsapi.nrs.gov.bc.ca/wfim-incidents-api/codeTables
      WEBADE-OAUTH2_CHECK_TOKEN_URL: https://intapps.nrs.gov.bc.ca/pub/oauth2/v1/check_token?disableDeveloperFilter=true
      WFNEWS_EMAIL_NOTIFICATIONS_ENABLED: true
      SMTP_HOST_NAME: apps.smtp.gov.bc.ca
      SMTP_FROM_EMAIL: noreply@gov.bc.ca
      SMTP_ADMIN_EMAIL: fake@mail.ignoreme
      SMTP_EMAIL_SYNC_ERROR_FREQ: 10
      SMTP_EMAIL_FREQ: 10 
      SMTP_EMAIL_ERROR_SUBJECT: WFNEWS API Error Subject [DEV]
      SMTP_EMAIL_SUBJECT: WFNEWS API Error [DEV]
      DEFAULT_APPLICATION_ENVIRONMENT: DEV
      WFNEWS_AGOL_QUERY_URL: https://services6.arcgis.com/ubm4tcTYICKBpist/ArcGIS/rest/services/BCWS_ActiveFires_PublicView/FeatureServer/0/query?where=
      WFNEWS_USERNAME: wfnewsdev
      WFNEWS_MAX_CONNECTIONS: 10
      IMAGE_TAG: pr-${{ github.event.pull_request.number }}
      AGOL_URL: https://services6.arcgis.com/ubm4tcTYICKBpist/ArcGIS/rest/services
      DRIVEBC_BASE_URL: https://dev-maps.th.gov.bc.ca/geoV05/ows
      OPENMAPS_BASE_URL: https://test.openmaps.gov.bc.ca/geo/pub/ows
      SITEMINDER_URL_PREFIX: https://logontest7.gov.bc.ca/clp-cgi/logoff.cgi?returl=
      AGOL_AREA_RESTRICTIONS: https://services6.arcgis.com/ubm4tcTYICKBpist/ArcGIS/rest/services/British_Columbia_Area_Restrictions_-_View/FeatureServer/13/
      AGOL_BANS_AND_PROHIBITIONS: https://services6.arcgis.com/ubm4tcTYICKBpist/ArcGIS/rest/services/British_Columbia_Bans_and_Prohibition_Areas_-_View/FeatureServer/14/

    secrets:
      CLOUDFRONT_HEADER: ${{ secrets.CLOUDFRONT_HEADER_DEV }}
      LICENSE_PLATE: ${{ secrets.LICENSE_PLATE }}
      DB_PASS: ${{ secrets.DEV_DB_PASS }}
      TFC_TEAM_TOKEN: ${{ secrets.TFC_TEAM_TOKEN }}
      SMTP_PASSWORD: ${{ secrets.DEV_SMTP_PASSWORD }}
      WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET }}
      WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET}}
      API_KEY: ${{ secrets.API_KEY_DEV }}
      SNS_EMAIL_TARGETS: ${{ secrets.SNS_EMAIL_TARGETS_DEV }}

  jmeter-test-dev:
    uses: ./.github/workflows/jmeter.yml
    needs: [terragrunt-deploy-dev]
    with:
      ENVIRONMENT: dev