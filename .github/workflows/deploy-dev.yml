name: Deploy Dev

on:
  pull_request_target:
    types:
      - closed
    branches:
      - 'main'
    paths:
      - ".github/workflows/**"
      - "client/**"
      - "server/**"
      - "database/**"
      - "docker/**"
      - "terraform/**"
      - "Dockerfile"
      - "Dockerfile_client"
      - "!**/README.md"
  workflow_dispatch:
    inputs:
      IS_HOTFIX:
        description: 'Is this a hotfix?'
        type: boolean
        required: false
        default: false

jobs:
  call-lambda-zip:
    uses: ./.github/workflows/lambda-zip.yml
    secrets: inherit
    with:
      REGISTRY: ${{ vars.REGISTRY }}

  call-mvn-client:
    uses: ./.github/workflows/mvn-client.yml
    secrets: inherit
    with:
      ENVIRONMENT: DEV
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      BRANCH: ${{ vars.PATCH_BRANCH }}
      TAG: ${{ vars.HOTFIX_TAG }}

  call-mvn-server:
    uses: ./.github/workflows/mvn-server.yml
    #SMTP_PASSWORD, DV_PASSWORD AND TFC_PROJECT ARE STORED AS SECRET
    with:
      ENVIRONMENT: DEV
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      BRANCH: ${{ vars.PATCH_BRANCH }}
      TAG: ${{ vars.HOTFIX_TAG }}
    secrets:
      IDIR_AS_EMAIL: ${{ secrets.IDIR_AS_EMAIL }}
      IDIR_PASSWORD: ${{ secrets.IDIR_PASSWORD }}

  liquibase-build:
    uses: ./.github/workflows/liquibase.yml
    with:
      ENVIRONMENT: DEV
    secrets: inherit

  apisix-build:
    uses: ./.github/workflows/apisix.yml
    with:
      ENVIRONMENT: DEV
    secrets: inherit

  terragrunt-deploy-dev:
    uses: ./.github/workflows/terragrunt-deploy.yml
    needs: [call-lambda-zip, call-mvn-client, call-mvn-server, liquibase-build, apisix-build]
    with:
      DEFAULT_APPLICATION_ENVIRONMENT: DEV
      IMAGE_TAG: ${{ inputs.IS_HOTFIX && format('hotfix-{0}', inputs.BRANCH) || format( 'pr-{0}', github.event.pull_request.number) }}
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      TARGET_ENV: dev

      MAX_RECEIVED_COUNT: 10
      VISIBILITY_TIMEOUT_SECONDS: 100
      ACCEPTED_IPS: ""
      PUSH_NOTIFICATION_AWS_USER: ""
      EVENT_BRIDGE_ARN: ""
      WFNEWS_URL: ""
      SECRET_NAME: ""
      BAN_PROHIBITION_MONITOR_KEY: ""
      ACTIVE_FIRE_MONITOR_KEY: ""
      AREA_RESTRICTIONS_MONITOR_KEY: ""
      EVACUATION_MONITOR_KEY: ""
      LAMBDA_LAYER_KEY: ""
      FUNCTION_BUCKET: "wfnews-lambdas"

    secrets:
      API_KEY: ${{ secrets.API_KEY_DEV }}
      CLOUDFRONT_HEADER: ${{ secrets.CLOUDFRONT_HEADER_DEV }}
      DB_PASS: ${{ secrets.DEV_DB_PASS }}
      LICENSE_PLATE: ${{ secrets.LICENSE_PLATE }}
      SMTP_PASSWORD: ${{ secrets.DEV_SMTP_PASSWORD }}
      SNS_EMAIL_TARGETS: ${{ secrets.SNS_EMAIL_TARGETS_DEV }}
      TFC_TEAM_TOKEN: ${{ secrets.TFC_TEAM_TOKEN }}
      WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET }}
      WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET: ${{ secrets.DEV_WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET}}

  jmeter-test-dev:
    uses: ./.github/workflows/jmeter.yml
    needs: [terragrunt-deploy-dev]
    with:
      ENVIRONMENT: dev
