name: Deploy Test

env:
  IMAGE_TAG: ${{ inputs.IS_HOTFIX && format('hotfix-{0}-{1}', vars.PATCH_BRANCH, vars.HOTFIX_TAG) || github.ref_name }}
  
on:
  release:
    types: [prereleased]
  workflow_dispatch:
    inputs:
      IS_HOTFIX:
        description: 'Is this a hotfix?'
        required: false
        type: boolean
        default: false
    
jobs:

  tag-images:
    runs-on: ubuntu-22.04
    environment: TEST

    outputs:
      tag-value: ${{ steps.get-release-tag.outputs.tag-value }}

    steps:
      - uses: actions/checkout@v3
        if: ${{ inputs.IS_HOTFIX == false }}
    
      - uses: actions/checkout@v3
        if: ${{ inputs.IS_HOTFIX == true }}
        with:
          ref: ${{ inputs.BRANCH }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Tag client image
        run: |
          docker pull ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.CLIENT_IMAGE }}:main
          docker tag ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.CLIENT_IMAGE }}:main ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.CLIENT_IMAGE }}:${{ env.IMAGE_TAG }}
          docker push ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.CLIENT_IMAGE }}:${{ env.IMAGE_TAG }}

      - name: Tag server image
        run: |
          docker pull ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.SERVER_IMAGE }}:main
          docker tag ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.SERVER_IMAGE }}:main ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.SERVER_IMAGE }}:${{ env.IMAGE_TAG }}
          docker push ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.SERVER_IMAGE }}:${{ env.IMAGE_TAG }}

      - name: Tag liquibase image
        run: |
          docker pull ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.LIQUIBASE_IMAGE }}:main
          docker tag ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.LIQUIBASE_IMAGE }}:main ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.LIQUIBASE_IMAGE }}:${{ env.IMAGE_TAG }}
          docker push ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.LIQUIBASE_IMAGE }}:${{ env.IMAGE_TAG }}

      - name: Tag apisix image
        run: |
          docker pull ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.APISIX_IMAGE }}:main
          docker tag ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.APISIX_IMAGE }}:main ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.APISIX_IMAGE }}:${{ env.IMAGE_TAG }}
          docker push ${{env.REGISTRY}}/${{github.repository_owner}}/${{ vars.APISIX_IMAGE }}:${{ env.IMAGE_TAG }}

      - run: echo ::set-output name=tag-value::${{ env.IMAGE_TAG }}
        id: get-release-tag
      

  terragrunt-deploy-test:
    needs: tag-images
    uses: ./.github/workflows/terragrunt-deploy.yml
    with:
      DEFAULT_APPLICATION_ENVIRONMENT: TEST
      IMAGE_TAG: ${{ needs.tag-images.outputs.tag-value }}
      IS_HOTFIX: ${{ inputs.IS_HOTFIX }}
      TARGET_ENV: test

      VISIBILITY_TIMEOUT_SECONDS: 100
      ACCEPTED_IPS: ""
      PUSH_NOTIFICATION_AWS_USER: ""
      EVENT_BRIDGE_ARN: ""
      WFNEWS_URL: ""
      SECRET_NAME: ""
      BAN_PROHIBITION_MONITOR_KEY: ""
      ACTIVE_FIRE_MONITOR_KEY: ""
      AREA_RESTRICTIONS_MONITOR_KEY: ""
      EVACUATION_MONITOR_KEY: ""
      LAMBDA_LAYER_KEY: ""
      FUNCTION_BUCKET: "wfnews-lambdas"

    secrets:
      API_KEY: ${{ secrets.API_KEY_TEST }}
      CLOUDFRONT_HEADER: ${{ secrets.CLOUDFRONT_HEADER_TEST }}
      DB_PASS: ${{ secrets.TEST_DB_PASS }}
      LICENSE_PLATE: ${{ secrets.LICENSE_PLATE }}
      SMTP_PASSWORD: ${{ secrets.TEST_SMTP_PASSWORD }}
      SNS_EMAIL_TARGETS: ${{ secrets.SNS_EMAIL_TARGETS_TEST }}
      TFC_TEAM_TOKEN: ${{ secrets.TFC_TEAM_TOKEN }}
      WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET: ${{ secrets.TEST_WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET }}
      WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET: ${{ secrets.TEST_WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET}}
