# Action for compiling and zipping the lambdas

name: Lambda Compile and Zip

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r active-fire-monitor.zip lambda/active-fire-monitor

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r area-restrictions-monitor.zip lambda/area-restrictions-monitor

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r bans-and-prohibitions-monitor.zip lambda/bans-and-prohibitions-monitor

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r evacuation-orders-monitor.zip lambda/evacuation-orders-monitor

      - name: Get timestamp
        run: |
          echo "{date}={$(date +'%Y-%m-%d-%H-%M')}" >> $GITHUB_STATE

      # - name: Make staging directory, copy files
      #   run: |
      #     mkdir staging
      #     cp active-fire-monitor.zip staging/active-fire-monitor.zip
      #     cp area-restrictions-monitor.zip staging/area-restrictions-monitor.zip
      #     cp bans-and-prohibitions-monitor.zip staging/bans-and-prohibitions-monitor.zip
      #     cp evacuation-orders-monitor.zip staging/evacuation-orders-monitor.zip
      #     cp lambda/lambda-layer/python.zip staging/python.zip

      #Requires long-lived AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY in secrets
      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     role-to-assume: ${{ secrets.AWS_S3_PUSH_ROLE }}
      #     aws-region: ca-central-1
      #     role-session-name: s3-lambda-push--${{ env.date }}

      # - name: Upload S3
      #   id: S3
      #   run: |
      #     aws s3api put-object --bucket ${{ secrets.WFNEWS_LAMBDA_BUCKET }} --key active_fire.zip --body active-fire-monitor.zip
      #     aws s3api put-object --bucket ${{ secrets.WFNEWS_LAMBDA_BUCKET }} --key area-restrictions-monitor.zip --body area-restrictions-monitor.zip
      #     aws s3api put-object --bucket ${{ secrets.WFNEWS_LAMBDA_BUCKET }} --key bans-and-prohibitions-monitor.zip --body bans-and-prohibitions-monitor.zip
      #     aws s3api put-object --bucket ${{ secrets.WFNEWS_LAMBDA_BUCKET }} --key evacuation-orders-monitor.zip --body evacuation-orders-monitor.zip
      #     aws s3api put-object --bucket ${{ secrets.WFNEWS_LAMBDA_BUCKET }} --key python.zip --body lambda/lambda-layer/python.zip
