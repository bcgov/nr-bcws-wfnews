# Action for compiling and zipping the lambdas

name: Lambda Compile and Zip

on:
  workflow_call:
    inputs:
      REGISTRY:
        required: true
        type: string
      ENVIRONMENT:
        required: true
        type: string
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r -j active-fire-monitor.zip lambda/active-fire-monitor/active_fire

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r -j area-restrictions-monitor.zip lambda/area-restrictions-monitor/area-restrictions

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r -j bans-and-prohibitions-monitor.zip lambda/bans-and-prohibitions-monitor/bans-and-prohibitions


      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r -j evacuation-orders-monitor.zip lambda/evacuation-orders-monitor/evacuation-orders

      - uses: actions/setup-node@v4
        with: 
          node-version: 14

      - name: run npm install for cache invalidator
        run: |
          cd lambda/cache-invalidator/wfnews-cache-invalidator
          npm install

      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r cache-invalidator.zip lambda/cache-invalidator/wfnews-cache-invalidator

      - name: Make staging directory, copy files
        run: |
          mkdir staging
          echo ${{hashFiles('**/active-fire-monitor.zip')}} >> staging/active-fire-monitor-hash.txt 
          echo ${{hashFiles('**/area-restrictions-monitor.zip')}} >> staging/area-restrictions-monitor-hash.txt 
          echo ${{hashFiles('**/bans-and-prohibitions-monitor.zip')}} >> staging/bans-and-prohibitions-monitor-hash.txt
          echo ${{hashFiles('**/evacuation-orders-monitor.zip')}} >> staging/evacuation-orders-monitor-hash.txt
          echo ${{hashFiles('**/wfnews-cache-invalidator.zip')}} >> staging/wfnews-cache-invalidator-hash.txt
          echo ${{hashFiles('**/python.zip')}} >> staging/python-hash
          cp active-fire-monitor.zip staging/active-fire-monitor.zip
          cp area-restrictions-monitor.zip staging/area-restrictions-monitor.zip
          cp bans-and-prohibitions-monitor.zip staging/bans-and-prohibitions-monitor.zip
          cp evacuation-orders-monitor.zip staging/evacuation-orders-monitor.zip
          cp wfnews-cache-invalidator.zip staging/wfnews-cache-invalidator.zip
          cp lambda/lambda-layer/python.zip staging/python.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_S3_PUSH_ROLE }}
          role-session-name: wfnews-push-lambda
          aws-region: ca-central-1

      #requires a wfnews-lambda-env bucket
      - name: Upload S3
        id: S3
        run: |
          export enviro=${{ inputs.ENVIRONMENT }}
          aws s3 cp ./staging s3://wfnews-lambda-$(echo ${enviro,,}) --recursive
