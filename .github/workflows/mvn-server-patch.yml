# This is a basic workflow to help you get started with Actions

name: Build Server

env:
  IMAGE_NAME: ${{ github.repository }}-server

# Controls when the workflow will run
on:
  workflow_call:
    inputs:
      REGISTRY:
        type: string
        required: true
      BRANCH:
        required: true
        type: string
      TAG:
        required: true
        type: string
    secrets:
      IDIR_AS_EMAIL:
        required: true
      IDIR_PASSWORD:
        required: true
      



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.BRANCH }}
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Build with Maven
        run: mvn --settings server/mvn_settings/settings.xml --batch-mode --update-snapshots -f server/pom.xml -Drepo.login=${{ secrets.IDIR_AS_EMAIL }} -Drepo.password=${{ secrets.IDIR_PASSWORD }} -DskipTests package
        
      - name: Copy files to neccessary folders
        run: mkdir staging && cp server/wfnews-api-rest-endpoints/target/*.war staging
      
      - uses: actions/upload-artifact@v3
        with:
         name: Package
         path: staging
         
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: staging
          key: ${{ runner.os }}-maven-${{ hashFiles('**war.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
         
  docker:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.BRANCH }}
      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: Package
          path: .
          
      - name: Update image name if PR number present
        run: echo "IMAGE_NAME = ${{env.IMAGE_NAME}}-HOTFIX" >> $GITHUB_ENV
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Extract metadata (tags, labels) for Docker (with PR)
        id: meta_pr
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ inputs.REGISTRY}}/${{ env.IMAGE_NAME }}-HOTFIX
          tags: |
            type=schedule
            type=raw,value=${{ github.base_ref }}
            type=ref,event=tag
            type=raw,value=pr-HOTFIX-${{ inputs.BRANCH }}-${{ inputs.TAG }}
          
      - name: Build and push Docker image (with PR)
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta_pr.outputs.tags }}
          labels: ${{ steps.meta_pr.outputs.labels }}
     
