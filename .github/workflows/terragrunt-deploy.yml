name: Deploy using terragrunt

on:
  workflow_call:
    inputs:
      CLIENT_IMAGE:
        type: string
        required: true
      SERVER_IMAGE:
        type: string
        required: true
      LIQUIBASE_IMAGE:
        type: string
        required: true
      TARGET_ENV:
        type: string
        required: true
      ALB_NAME:
        type: string
        required: true
      VPC_NAME:
        type: string
        required: true
      SUBNET_FILTER:
        type: string
        required: true
      REGISTRY:
        type: string
        required: true
    secrets:
      LICENSE_PLATE:
        type: string
        required: true
      DB_PASS:
        type: string
        required: true
      TFC_TEAM_TOKEN:
        type: string
        required: true


env:
  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: wfnews-dev
  REPOSITORY: ghcr.io

jobs:
  plan:
    name: Deploy
    runs-on: ubuntu-22.04
    outputs:
      pull_request_number: ${{ steps.pr.outputs.pull_request_number }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      
      - name: Terragrunt Apply (No PR)
        if: ${{ github.event.pull_request.number == ''}}
        working-directory: ${{env.TG_SRC_PATH}}/${{ inputs.TARGET_ENV }}
        env:
          TARGET_ENV: ${{ inputs.TARGET_ENV }}
          CLIENT_IMAGE: ${{inputs.registry}}/bcgov/${{ inputs.CLIENT_IMAGE }}:main
          SERVER_IMAGE: ${{inputs.registry}}/bcgov}/${{ inputs.SERVER_IMAGE }}:main
          TFC_PROJECT: ${{ secrets.LICENSE_PLATE }}
          DB_PASS: ${{ secrets.DB_PASS }}
          ALB_NAME: ${{ inputs.ALB_NAME }}
          VPC_NAME: ${{ inputs.VPC_NAME }}
          SUBNET_FILTER: ${{ inputs.SUBNET_FILTER }}
        run: terragrunt apply --terragrunt-non-interactive -auto-approve
      
      - name: Terragrunt Apply (PR)
        if: ${{ github.event.pull_request.number > 0}}
        working-directory: ${{env.TG_SRC_PATH}}/${{ inputs.TARGET_ENV }}
        env:
          TARGET_ENV: ${{ inputs.TARGET_ENV }}
          CLIENT_IMAGE: ${{inputs.registry}}/bcgov/${{ inputs.CLIENT_IMAGE }}-${{ github.event.pull_request.number }}:pr-${{ github.event.pull_request.number }}
          SERVER_IMAGE: ${{inputs.registry}}/bcgov/${{ inputs.SERVER_IMAGE }}-${{ github.event.pull_request.number }}:pr-${{ github.event.pull_request.number }}
          LIQUIBASE_IMAGE: ${{inputs.registry}}/bcgov/${{ inputs.SERVER_IMAGE }}:pr-${{ github.event.pull_request.number }}
          TFC_PROJECT: ${{ secrets.LICENSE_PLATE }}
          DB_PASS: ${{ secrets.DB_PASS }}
          ALB_NAME: ${{ inputs.ALB_NAME }}
          VPC_NAME: ${{ inputs.VPC_NAME }}
          SUBNET_FILTER: ${{ inputs.SUBNET_FILTER }}
        run: terragrunt apply --terragrunt-non-interactive -auto-approve

