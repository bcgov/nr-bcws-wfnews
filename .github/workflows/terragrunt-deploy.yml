name: Deploy using terragrunt

on:
  workflow_call:
    inputs:
      DEFAULT_APPLICATION_ENVIRONMENT:
        required: true
        type: string
      TARGET_ENV:
        required: true
        type: string
      IMAGE_TAG:
        required: true
        type: string
      IS_HOTFIX:
        required: true
        type: boolean
        default: false

    secrets:
      # AWS_ACCESS_KEY_ID:
      #   required: true
      # AWS_SECRET_ACCESS_KEY:
      #   required: true
      LICENSE_PLATE:
        required: true
      DB_PASS:
        required: true
      TFC_TEAM_TOKEN:
        required: true
      SMTP_PASSWORD:
        required: true
      WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET:
        required: true
      WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET:
        required: true
      API_KEY:
        required: true
      SNS_EMAIL_TARGETS:
        required: true
      CLOUDFRONT_HEADER:
        required: true

env:
  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: wfnews-${{ inputs.TARGET_ENV }}
  REPOSITORY: ghcr.io

jobs:
  plan:
    name: Deploy
    runs-on: ubuntu-22.04
    environment: ${{ inputs.DEFAULT_APPLICATION_ENVIRONMENT }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}
      
      - name: Terragrunt Apply
        working-directory: ${{env.TG_SRC_PATH}}/${{ inputs.TARGET_ENV }}
        env:
          # AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          agolAreaRestrictions: ${{vars.AGOL_AREA_RESTRICTIONS}}
          agolBansAndProhibitions: ${{vars.AGOL_BANS_AND_PROHIBITIONS}}
          agolUrl: ${{vars.AGOL_URL}}
          ALB_NAME: ${{ vars.ALB_NAME }}
          API_KEY: ${{ secrets.API_KEY }}
          APISIX_IMAGE: ${{vars.REGISTRY}}/${{ github.repository_owner }}/${{ vars.APISIX_IMAGE }}:${{ inputs.IMAGE_TAG }}
          CLIENT_CPU_UNITS: ${{vars.CLIENT_CPU_UNITS}}
          CLIENT_IMAGE: ${{vars.REGISTRY}}/${{ github.repository_owner }}/${{ vars.CLIENT_IMAGE }}${{ inputs.IS_HOTFIX && '-hotfix' }}:${{ inputs.IMAGE_TAG }}
          CLIENT_MEMORY: ${{vars.CLIENT_MEMORY}}
          CLOUDFRONT_HEADER: ${{ secrets.CLOUDFRONT_HEADER }}
          DB_INSTANCE_TYPE: ${{vars.DB_INSTANCE_TYPE}}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_SIZE: ${{ vars.DB_SIZE }}
          DEFAULT_APPLICATION_ENVIRONMENT: ${{inputs.DEFAULT_APPLICATION_ENVIRONMENT}}
          drivebcBaseUrl: ${{vars.DRIVEBC_BASE_URL}}
          GITHUB_RELEASE_NAME: ${{ github.event.release.name }}
          INSTANCE_COUNT: ${{vars.INSTANCE_COUNT}}
          LIQUIBASE_IMAGE: ${{vars.REGISTRY}}/${{ github.repository_owner }}/${{ vars.LIQUIBASE_IMAGE }}:${{ inputs.IMAGE_TAG }}
          LOGGING_LEVEL: ${{vars.LOGGING_LEVEL}}
          MAX_UPLOAD_SIZE: ${{ vars.MAX_UPLOAD_SIZE }}
          openmapsBaseUrl: ${{vars.OPENMAPS_BASE_URL}}
          SERVER_CPU_UNITS: ${{vars.SERVER_CPU_UNITS}}
          SERVER_IMAGE: ${{vars.REGISTRY}}/${{ github.repository_owner }}/${{ vars.SERVER_IMAGE }}${{ inputs.IS_HOTFIX && '-hotfix' }}:${{ inputs.IMAGE_TAG }}
          SERVER_MEMORY: ${{vars.SERVER_MEMORY}}
          siteMinderURLPrefix: ${{vars.SITEMINDER_URL_PREFIX}}
          SMTP_ADMIN_EMAIL: ${{vars.SMTP_ADMIN_EMAIL}}
          SMTP_EMAIL_ERROR_SUBJECT: ${{vars.SMTP_EMAIL_ERROR_SUBJECT}}
          SMTP_EMAIL_FREQ: ${{vars.SMTP_EMAIL_FREQ}}
          SMTP_EMAIL_SUBJECT: ${{vars.SMTP_EMAIL_SUBJECT}}
          SMTP_EMAIL_SYNC_ERROR_FREQ: ${{vars.SMTP_EMAIL_SYNC_ERROR_FREQ}}
          SMTP_FROM_EMAIL: ${{vars.SMTP_FROM_EMAIL}}
          SMTP_HOST_NAME: ${{vars.SMTP_HOST_NAME}}
          SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
          SNS_EMAIL_TARGETS: ${{ secrets.SNS_EMAIL_TARGETS }}
          SUBNET_FILTER: ${{ vars.SUBNET_FILTER }}
          TARGET_ENV: ${{ inputs.TARGET_ENV }}
          TFC_PROJECT: ${{ secrets.LICENSE_PLATE }}
          VPC_NAME: ${{ vars.VPC_NAME }}
          WEBADE_OAUTH2_AUTHORIZE_URL: ${{vars.WEBADE_OAUTH2_AUTHORIZE_URL}}
          WEBADE_OAUTH2_REST_CLIENT_ID: ${{vars.WEBADE_OAUTH2_REST_CLIENT_ID}}
          WEBADE_OAUTH2_UI_CLIENT_ID: ${{vars.WEBADE_OAUTH2_UI_CLIENT_ID}}
          WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET: ${{secrets.WEBADE_OAUTH2_WFNEWS_REST_CLIENT_SECRET}}
          WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET: ${{secrets.WEBADE_OAUTH2_WFNEWS_UI_CLIENT_SECRET}}
          WEBADE-OAUTH2_CHECK_TOKEN_URL: ${{vars.WEBADE_OAUTH2_CHECK_TOKEN_URL}}
          WEBADE-OAUTH2_TOKEN_CLIENT_URL: ${{vars.WEBADE_OAUTH2_TOKEN_CLIENT_URL}}
          WEBADE-OAUTH2_TOKEN_URL: ${{vars.WEBADE_OAUTH2_TOKEN_URL}}
          WFDM_REST_URL: ${{vars.WFDM_REST_URL}}
          WFIM_CLIENT_URL: ${{vars.WFIM_CLIENT_URL}}
          WFIM_CODE_TABLES_URL: ${{vars.WFIM_CODE_TABLES_URL}}
          WFNEWS_AGOL_QUERY_URL: ${{vars.WFNEWS_AGOL_QUERY_URL}}
          WFNEWS_EMAIL_NOTIFICATIONS_ENABLED: ${{vars.WFNEWS_EMAIL_NOTIFICATIONS_ENABLED}}
          WFNEWS_MAX_CONNECTIONS: ${{vars.WFNEWS_MAX_CONNECTIONS}}
          WFNEWS_USERNAME: ${{vars.WFNEWS_USERNAME}}

        run: terragrunt apply --terragrunt-non-interactive -auto-approve

