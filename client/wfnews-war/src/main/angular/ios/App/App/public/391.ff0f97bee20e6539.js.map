{"version":3,"file":"391.ff0f97bee20e6539.js","mappings":"8KACO,gBAA6BA,KAC1BC,mBAAmBC,GAAS,0BAC9B,OAAO,IAAIC,QAAQ,CAACC,EAASC,KACzBC,UAAUC,YAAYN,mBAAmBO,IACrCJ,EAAQI,IACTC,IACCJ,EAAOI,IACRC,OAAOC,OAAO,CAAEC,oBAAoB,EAAOC,QAAS,IAAOC,WAAY,GAAKZ,OANrD,GAS5Ba,cAAcb,EAASc,GAAU,0BAMnC,MAAQ,GALGV,UAAUC,YAAYQ,cAAcP,IAC3CQ,EAASR,IACVC,IACCO,EAAS,KAAMP,IAChBC,OAAOC,OAAO,CAAEC,oBAAoB,EAAOC,QAAS,IAAOC,WAAY,GAAKZ,OAL5C,GAQjCe,WAAWf,GAAS,0BACtBgB,OAAOZ,UAAUC,YAAYU,WAAWE,SAASjB,EAAQkB,GAAI,MADvC,GAGpBC,mBAAmB,qCACrB,GAAyB,oBAAdf,YAA8BA,UAAUgB,YAC/C,MAAMC,EAAKC,YAAY,iDAE3B,MAAMC,QAAmBP,OAAOZ,UAAUgB,YAAYI,MAAM,CACxDC,KAAM,gBAEV,MAAO,CAAEC,SAAUH,EAAWI,MAAOC,eAAgBL,EAAWI,QAP3C,GASnBE,qBAAqB,qCACvB,MAAMR,EAAKS,cAAc,4BADF,IAI/B,MAAMC,EAAc,IAAIC","names":["WebPlugin","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","clearWatch","window","parseInt","id","checkPermissions","permissions","e","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","unimplemented","Geolocation","GeolocationWeb"],"sourceRoot":"webpack:///","sources":["./node_modules/@capacitor/geolocation/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n    async getCurrentPosition(options) {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                resolve(pos);\n            }, err => {\n                reject(err);\n            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        });\n    }\n    async watchPosition(options, callback) {\n        const id = navigator.geolocation.watchPosition(pos => {\n            callback(pos);\n        }, err => {\n            callback(null, err);\n        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        return `${id}`;\n    }\n    async clearWatch(options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        const permission = await window.navigator.permissions.query({\n            name: 'geolocation',\n        });\n        return { location: permission.state, coarseLocation: permission.state };\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };\n"]}