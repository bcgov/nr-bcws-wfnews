{"version":3,"file":"node_modules_capacitor_geolocation_dist_esm_web_js.js","mappings":";;;;;;;;;;;;;;;;;AAA4C;AACrC,MAAMC,cAAc,SAASD,sDAAS,CAAC;EACpCE,kBAAkB,CAACC,OAAO,EAAE;IAAA;MAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACpCC,SAAS,CAACC,WAAW,CAACN,kBAAkB,CAACO,GAAG,IAAI;UAC5CJ,OAAO,CAACI,GAAG,CAAC;QAChB,CAAC,EAAEC,GAAG,IAAI;UACNJ,MAAM,CAACI,GAAG,CAAC;QACf,CAAC,EAAEC,MAAM,CAACC,MAAM,CAAC;UAAEC,kBAAkB,EAAE,KAAK;UAAEC,OAAO,EAAE,KAAK;UAAEC,UAAU,EAAE;QAAE,CAAC,EAAEZ,OAAO,CAAC,CAAC;MAC5F,CAAC,CAAC;IAAC;EACP;EACMa,aAAa,CAACb,OAAO,EAAEc,QAAQ,EAAE;IAAA;MACnC,MAAMC,EAAE,GAAGX,SAAS,CAACC,WAAW,CAACQ,aAAa,CAACP,GAAG,IAAI;QAClDQ,QAAQ,CAACR,GAAG,CAAC;MACjB,CAAC,EAAEC,GAAG,IAAI;QACNO,QAAQ,CAAC,IAAI,EAAEP,GAAG,CAAC;MACvB,CAAC,EAAEC,MAAM,CAACC,MAAM,CAAC;QAAEC,kBAAkB,EAAE,KAAK;QAAEC,OAAO,EAAE,KAAK;QAAEC,UAAU,EAAE;MAAE,CAAC,EAAEZ,OAAO,CAAC,CAAC;MACxF,OAAQ,GAAEe,EAAG,EAAC;IAAC;EACnB;EACMC,UAAU,CAAChB,OAAO,EAAE;IAAA;MACtBiB,MAAM,CAACb,SAAS,CAACC,WAAW,CAACW,UAAU,CAACE,QAAQ,CAAClB,OAAO,CAACe,EAAE,EAAE,EAAE,CAAC,CAAC;IAAC;EACtE;EACMI,gBAAgB,GAAG;IAAA;IAAA;MACrB,IAAI,OAAOf,SAAS,KAAK,WAAW,IAAI,CAACA,SAAS,CAACgB,WAAW,EAAE;QAC5D,MAAM,KAAI,CAACC,WAAW,CAAC,+CAA+C,CAAC;MAC3E;MACA,MAAMC,UAAU,SAASL,MAAM,CAACb,SAAS,CAACgB,WAAW,CAACG,KAAK,CAAC;QACxDC,IAAI,EAAE;MACV,CAAC,CAAC;MACF,OAAO;QAAEC,QAAQ,EAAEH,UAAU,CAACI,KAAK;QAAEC,cAAc,EAAEL,UAAU,CAACI;MAAM,CAAC;IAAC;EAC5E;EACME,kBAAkB,GAAG;IAAA;IAAA;MACvB,MAAM,MAAI,CAACC,aAAa,CAAC,yBAAyB,CAAC;IAAC;EACxD;AACJ;AACA,MAAMC,WAAW,GAAG,IAAIhC,cAAc,EAAE","sources":["./node_modules/@capacitor/geolocation/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class GeolocationWeb extends WebPlugin {\n    async getCurrentPosition(options) {\n        return new Promise((resolve, reject) => {\n            navigator.geolocation.getCurrentPosition(pos => {\n                resolve(pos);\n            }, err => {\n                reject(err);\n            }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        });\n    }\n    async watchPosition(options, callback) {\n        const id = navigator.geolocation.watchPosition(pos => {\n            callback(pos);\n        }, err => {\n            callback(null, err);\n        }, Object.assign({ enableHighAccuracy: false, timeout: 10000, maximumAge: 0 }, options));\n        return `${id}`;\n    }\n    async clearWatch(options) {\n        window.navigator.geolocation.clearWatch(parseInt(options.id, 10));\n    }\n    async checkPermissions() {\n        if (typeof navigator === 'undefined' || !navigator.permissions) {\n            throw this.unavailable('Permissions API not available in this browser');\n        }\n        const permission = await window.navigator.permissions.query({\n            name: 'geolocation',\n        });\n        return { location: permission.state, coarseLocation: permission.state };\n    }\n    async requestPermissions() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\nconst Geolocation = new GeolocationWeb();\nexport { Geolocation };\n"],"names":["WebPlugin","GeolocationWeb","getCurrentPosition","options","Promise","resolve","reject","navigator","geolocation","pos","err","Object","assign","enableHighAccuracy","timeout","maximumAge","watchPosition","callback","id","clearWatch","window","parseInt","checkPermissions","permissions","unavailable","permission","query","name","location","state","coarseLocation","requestPermissions","unimplemented","Geolocation"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}