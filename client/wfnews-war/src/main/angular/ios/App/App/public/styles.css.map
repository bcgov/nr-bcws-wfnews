{"version":3,"file":"styles.css","mappings":";;;AAAA,mDAAmD,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,uBAAuB,cAAc,CAAC,YAAY,CAAC,6BAA6B,YAAY,CAAC,4BAA0G,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,kBAAkB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,YAAY,CAA+E,YAAY,CAAC,cAAc,CAAC,eAAe,CAAC,sBAAsB,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,uCAAuC,CAAuK,iDAAiD,CAAC,SAAS,CAAC,mDAAmD,SAAS,CAAC,6CAA6C,mDAAmD,UAAU,CAAC,CAAC,2BAA2B,2BAA2B,CAAC,iGAAiG,SAAS,CAAC,6CAA6C,iBAAiB,CAAC,YAAY,CAA+E,YAAY,CAAqK,qBAAqB,CAAC,aAAa,CAAC,cAAc,CAAC,wBAAwB,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,sBAAsB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,aAAa,CAAC,aAAa,CAAkO,yGAAyG,CAAwB,iBAAiB,CAAC,aAAa,CAAC,eAAe,CAAC,qBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,sCAA+F,qBAAqB,CAAC,kBAAkB,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,CAAC,sBAAsB,uCAAuC,CAAC,iCAAiC,kBAAkB,CAAC,iBAA+F,YAAY,CAAqK,qBAAqB,CAAC,UAAU,CAAC,yBAAuG,YAAY,CAAiG,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,0DAAqI,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,0FAA0F,cAAc,CAAC,gGAAgG,gCAAgC,CAAC,sBAAoG,YAAY,CAAqK,qBAAqB,CAA4E,aAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,aAAa,CAA4E,aAAa,CAAC,iCAA+G,YAAY,CAAiG,kBAAkB,CAAC,wDAAmH,sBAAsB,CAAC,mFAAmF,oBAAoB,CAAC,uBAAuB,UAAU,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,+CAA+C,oBAAoB,CAAC,mEAAmE,cAAc,CAAC,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,8EAA8E,iBAAiB,CAAC,UAAU,CAAC,mBAAmB,CAAC,oFAAoF,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,0BAA0B,CAAC,6CAA6C,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,uCAAuC,CAAC,uCAAuC,CAAC,qDAAqD,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAA+E,YAAY,CAAiG,kBAAkB,CAAkG,sBAAsB,CAA0D,qBAAqB,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,4BAA4B,CAA0B,mBAAmB,CAAC,aAAa,CAAC,cAAc,CAAC,iDAAiD,UAAU,CAAC,uFAAuF,2BAA2B,CAAC,sDAAsD,2BAA2B,CAAC,wBAAwB,CAAC,iFAAgM,gDAAgD,CAAC,sDAAsD,cAAc,CAAC,wHAAwH,oBAAoB,CAAC,kHAAkH,UAAU,CAAC,sHAAsH,2BAA2B,CAAC,gQAAgQ,gCAAgC,CAAC,sDAAsD,6BAA6B,CAAC,sFAAuH,4BAA4B,CAAqC,+BAA+B,CAAC,oFAAsH,6BAA6B,CAAsC,gCAAgC,CAAC,cAA4F,YAAY,CAAkG,sBAAsB,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,iBAAiB,CAA2G,mBAAmB,CAAqK,qBAAqB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,sBAAiG,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,UAAU,CAAC,aAAa,CAAC,0CAA0C,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,+BAA+B,CAAwB,iBAAiB,CAAC,mBAAmB,CAAC,eAAe,CAAC,YAAY,CAAC,sBAAsB,oBAAoB,CAAqD,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,yDAAyD,UAAU,CAAC,oBAAoB,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAwB,iBAAiB,CAAmG,0BAA0B,CAAC,6BAA6B,CAAC,6BAA6B,OAAO,CAAC,4BAA4B,UAAU,CAAC,uBAAuB,wBAAwB,CAAC,qBAAqB,CAAsB,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,uCAAuC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,4BAA4B,CAAC,aAAa,CAAC,aAAa,CAAC,sDAAsD,iBAAiB,CAA2G,mBAAmB,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,6DAA6D,YAAY,CAAC,cAAc,CAAwB,iBAAiB,CAAsI,sCAAsC,CAAC,mEAAmE,gCAAgC,CAAC,2DAAyI,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAiL,6BAA8G,CAAC,4DAA4D,SAAS,CAAwB,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,uCAAuC,oBAAoB,CAAC,cAAc,CAAC,iCAAiC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,iDAAiD,iBAAiB,CAAC,YAAY,CAA4N,sGAAsG,CAAC,gKAAgK,UAAU,CAAC,mFAAmF,cAAc,CAAC,yBAAyB,eAAe,CAAC,aAAa,CAAC,0CAA0C,eAAe,CAAC,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,uCAAuC,eAAe,CAAC,eAAe,CAAC,uCAAuC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,sCAAsC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,0BAAwG,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,iCAAiC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAsB,eAAe,CAAC,gEAAgE,WAAW,CAAC,UAAU,CAAsI,sCAAsC,CAAC,sEAAsE,+BAA+B,CAAC,uBAAuB,cAAc,CAAC,cAAc,CAAC,uCAAuC,CAAC,+CAA+C,SAAS,CAAC,+EAA6J,YAAY,CAA4G,6BAA6B,CAAC,cAAc,CAAC,cAAc,CAAC,0DAA0D,oCAAoC,CAAC,qDAAqD,aAAa,CAAC,oDAAoD,WAAW,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,qBAAmG,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,aAAa,CAAC,8CAA8C,6BAA6B,CAAwB,iBAAiB,CAA8G,8BAA8B,CAAC,6EAA6E,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,sKAAsK,kBAAkB,CAAC,UAAU,CAAC,8DAA8D,iBAAiB,CAAC,cAAc,CAAC,eAAe,oBAAoB,CAAC,gBAAgB,SAAS,CAAC,cAAc,CAAC,wCAAwC,SAAS,CAAC,8CAA8C,gCAAgC,CAAC,mEAAwF,eAAe,CAAC,uBAAuB,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CCsN/sgB;EACE,gBA1MU;EA2MV,eA5MQ;EA6MR;ACpNJ,CDuNE;EAEE;ACrNJ,CDwNE;EACE;ACrNJ,CC+KE;;;;;EC5GE;EAcF;EDoGE;AD3KJ,CC8KE;;;;;ECrHE;EAcF;ED6GE;AD1KJ,CC6KE;;;;;EC9HE;EAcF;EDsHE;ADzKJ,CC4KE;;;;;ECvIE;EAcF;ED+HE;ADxKJ,CC8KE;;;ECnJE;ED8JA;ADlLJ,CCqLE;;;ECjKE;ED4KA;ADzLJ,CC4LE;;;;EC/KE;EAcF;AFnBF,CC2LE;;;;;ECtLE;EAcF;AFVF,CCyLI;;;;;EACE;ADnLN,CCuLE;;;;EClME;EAcF;AFKF,CCsLE;;ECzME;EAcF;ED8LE;ADlLJ,CCqLE;;EC/ME;EAcF;EDoME;ADjLJ,CCoLE;;ECrNE;EAcF;ED0ME;ADhLJ,CCmLE;;EC3NE;EAcF;EDgNE;AD/KJ,CG1GE;ED2DE;EAcF;AFsCF,CIoCE;;EAGI;EACA;EACA;AJlCN,CKtCE;EACE;ALyCJ,CMhHE;EACE;ANmHJ,CMhHE;EAEI;EACA;ANkHN,CM9GE;EACE;ANiHJ,CM9GE;;EAEE;ANiHJ,CO3DE;EACE;AP8DJ,CO1DE;EACE;AP6DJ,CQ3EE;EACE;EACA;AR8EJ,CQ5EI;;EAEE,eA7FkB;AR2KxB,CS5IE;EACE;AT+IJ,CS5IE;EACE;EACA;AT+IJ,CS5IE;EACE;AT+IJ,CUGE;EACE;AVAJ,CUGE;EACE,eAzLsB;AVyL1B,CUGE;;EAGI;EACA;AVDN,CUKE;EAEI,eArM6B;EAsM7B;AVHN,CW5LE;ET0DE;EAcF;AFyHF,CY5JE;EAEI;EACA;EACA;AZ8JN,CY1JE;EVaE;EAcF;AFoIF,Ca7DE;EX5FE,kBAeU;EAdV,gBAeY;EAdZ,kBAeY;EAdZ,iDAeY;EAGd;AF4IF,CajEE;EACE,yBAPuB;Ab2E3B,Ca9DI;;EACE,eAvB2B;EAwB3B,kBAxCU;Ab0GhB,Ca9DI;;EACE;EACA;AbiEN,Ca/DM;;EACE;EACA,kBAlDQ;AboHhB,Ca7DE;EACE;EAEA;Ab+DJ,Ca3DI;;EAzEF;EAEA;AbwIF,CazDI;EAjFF;EAEA;Ab4IF,CatDE;EACE;EACA,sBApEiB;Ab6HrB,CatDE;EACE;AbyDJ,CatDE;EAGE,iBAhEuB;AbuH3B,CapDE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;AboDJ,Cc/LI;EACE,sBAJqB;AdsM3B,Cc/LI;EACE;AdiMN,Cc7LM;;EAxDJ;EAEA;AdwPF,Cc3LM;EA/DJ;EAEA;Ad4PF,CcvLM;EAvEJ;EAEA;AdgQF,CcpLI;EACE;AdsLN,CcnLI;EAGE,cAzCqB;Ad4N3B,CchLI;EACE,0BAjDmB;EAqDnB;Ad+KN,CczKE;EAGM;;IA3FN;EduQA;EcrKM;IAlGN;Ed0QA;EchKM;IA1GN;Ed6QA;AACF,Ce3PI;EACE;Af6PN,Ce1PI;EACE;EACA,kBAT2B;AfqQjC,CexPM;;EAnCJ;EAEA;Af8RF,CepPM;EA5CJ;EAEA;AfkSF,CgB7OI;EACE;AhBgPN,CgB7OI;EACE;EACA,mBAT8B;AhBwPpC,CgB3OM;;EA1CJ;EAEA;AhBwRF,CgBvOM;EAnDJ;EAEA;AhB4RF,CiBhWE;;EAGE;AjBkWJ,CkBtWE;;EARA;EACA;EACA;EAQE;EACA;AlB2WJ,CkBxWI;;EACE,eDJwB;AjB+W9B,CmBhTE;EACE;AnBmTJ,CoBjVE;EAEI;EACA;EACA;ApBmVN,CqB1VE;;EAGI;EACA;ArB4VN,CsBpUE;EACE;AtBuUJ,CuBzUE;EACE;AvB4UJ,CuBzUE;EACE;AvB4UJ,CwB1UE;EACE;AxB6UJ,CyB9OE;EAEI;EACA;EACA;AzBgPN,C0B/SE;EACE;A1BkTJ,C0B/SE;EAEI;EACA;A1BiTN,C0B7SE;EACE;A1BgTJ,C0B7SE;EACE;A1BgTJ,C0B7SE;EAEI;EACA;A1B+SN,C2BtSE;EACE;A3BySJ,C2BtSE;EAEI;EACA;EACA;A3BwSN,C4B1XE;;;;;;;E1BOE;EAcF;E0BbE;A5B8XJ,C6BrbE;EACE;EACA,eArBQ;EAsBR,gBArBe;EAsBf,mBAtBe;A7B8cnB,C6BrbE;EACE,eAvBgB;EAwBhB,gBAvBuB;EAwBvB,mBAxBuB;A7Bgd3B,C8BzaE;EACE,iDAHY;A9B+ahB,C8BzaE;EACE,iDAPY;A9BmbhB,C8BvaI;EACE;A9B0aN,CkB7dE;EARA;EACA;EACA;EAQE;EACA;AlBieJ,CkB9dI;EACE,eY6C0B;A9BmbhC,C8BhbI;EACE;A9BkbN,CkB1eE;EARA;EACA;EACA;EAQE;EACA;AlB8eJ,CkB3eI;EACE,eYkD0B;A9B2bhC,C8BxbI;EACE;EACA;EACA;A9B0bN,C8BpbI;EACE;A9BubN,CkB7fE;EARA;EACA;EACA;EAQE;EACA;AlBigBJ,CkB9fI;EACE,eYgE0B;A9BgchC,C8B7bI;EACE;A9B+bN,CkB1gBE;EARA;EACA;EACA;EAQE;EACA;AlB8gBJ,CkB3gBI;EACE,eYqE0B;A9BwchC,C8BrcI;EACE,iDA1CU;EA2CV;EACA;A9BucN,C+BhfE;EAEI;EACA;A/BkfN,CgCphBE;E9B2DE;EAcF;AFgdF,CiCjhBE;EAEI;EACA;AjCmhBN,CiC/gBE;EACE;EAEE;EACA;EACA;AjCihBN,CkCjiBE;EACE;AlCoiBJ,CkCjiBE;;EAEE;EACA;AlCoiBJ,CmC/jBE;EACE;EAIA;AnC+jBJ,CmCxjBI;EACE;AnC0jBN,CmCtjBE;EACE;AnCyjBJ,CmCtjBE;EACE;EACA;EACA;EAEA;EACA;AnCwjBJ,CoCtiBI;EDdE;AnCujBN,CoCxlBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;EAMA;ApC+kBJ,CoC7kBI;EACE;EACA;ApC+kBN,CqC/lBE;EAEE;EAGA;EACA;EACA;EACA;ArC+lBJ,CqC3lBE;EACE;EACA,aA3BwB;ArCynB5B,CqC5lBI;EAGE;ArC4lBN,CqCplBE;EACE;EACA;EACA,aA1Cc;ArCioBlB,CqCnlBE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;ArCilBJ,CqC9kBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;ArC+kBJ,CqC7kBI;EACE;ArC+kBN,CqC1kBM;EAGE;ArC0kBR,CqCrkBE;EACE,+BAtFqB;ArC8pBzB,CqCrkBE;EAEE;EACA;EACA;ArCukBJ,CqCjkBI;EACE;EACA;ArCmkBN,CqC7jBE;EACE;EACA,aAjHc;EAsHd;EAIA;EAGA;EACA;ArCujBJ,CqCnjBE;EACE;EAKA;EAKA;ArC8iBJ,CsC3rBE;EACE;AtC8rBJ,CsCxrBE;EAyCA;EACA;EAxCE;EACA;AtC4rBJ,CsCnrBE;EA6BA;EACA;EA5BE;AtCurBJ,CsC7qBE;EAA0C;AtCirB5C,CsChrBE;EAAwC;AtCmrB1C,CsCjrBE;EAEE;AtCkrBJ,CsC/qBE;EAEE;AtCirBJ,CuCnoBE;EACE;AvCsoBJ,CwCnsBE;EACE;AxCssBJ,CyC3tBE;EAII;AzC2tBN,C+B7tBE;EACE;A/BguBJ,C+B9tBI;EAEE;A/B+tBN,C+B3tBI;EACE;A/B6tBN,C+B1tBI;EACE;EACA;A/B4tBN,C+BztBI;EACE;A/B2tBN,C+BvtBE;EACE;A/B0tBJ,C+BvtBE;EACE;A/B0tBJ,C+BvtBE;EACE;A/B0tBJ,CgC9vBE;EACE;AhCiwBJ,CgC9vBE;EACE;AhCiwBJ,C0C5vBE;EACE;A1C+vBJ,C0C7vBI;EACE;A1C+vBN,C0C3vBE;EACE,cAZe;A1C0wBnB,C0C3vBE;;EAEE;A1C8vBJ,C0CtvBE;;;;EAIE;A1CyvBJ,C0CtvBE;;EAEE;A1CyvBJ,C0CpvBI;;EACE,mBAxCa;A1CgyBnB,C2CjyBE;EAIE;EACA;A3CiyBJ,C2C1xBI;ECkIF;A5C4pBF,C2C9xBI;ECkIF;A5CgqBF,C2ClyBI;ECkIF;A5CoqBF,C2CtyBI;ECkIF;A5CwqBF,C2C1yBI;ECkIF;A5C4qBF,C2C9yBI;ECkIF;A5CgrBF,C2ClzBI;ECkIF;A5CorBF,C2CtzBI;ECkIF;A5CwrBF,C2C1zBI;ECkIF;A5C4rBF,C2C9zBI;ECkIF;A5CgsBF,C2Cl0BI;ECkIF;A5CosBF,C2Ct0BI;ECkIF;A5CwsBF,C2C10BI;ECkIF;A5C4sBF,C2C90BI;ECkIF;A5CgtBF,C2Cl1BI;ECkIF;A5CotBF,C2Ct1BI;ECkIF;A5CwtBF,C2C11BI;ECkIF;A5C4tBF,C2C91BI;ECkIF;A5CguBF,C2Cl2BI;ECkIF;A5CouBF,C2Ct2BI;ECkIF;A5CwuBF,C2C12BI;ECkIF;A5C4uBF,C2C92BI;ECkIF;A5CgvBF,C2Cl3BI;ECkIF;A5CovBF,C2Ct3BI;ECkIF;A5CwvBF,C2C13BI;ECkIF;A5C4vBF,C2Cv3BI;EACE;A3C03BN,C6Cp5BE;EAEE;EACA;A7Cs5BJ,C4C1vBE;EAXA;A5CwwBF,C6Cl5BI;EACE;A7Co5BN,C6Cl5BM;EACE;A7Co5BR,CDv0BE;EACE;AC00BJ,CDn0BE;EACE;ACs0BJ,CDl0BI;EACE;ACq0BN,CDj0BE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ACo0BJ,CDj0BE;;EAEE;ACo0BJ,CD/zBE;EAEE;ACi0BJ,CDt7BE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ACo8Bb,CDr7BI;EACE;ACu7BN,CDl7BI;EACE;ACo7BN,CD/6BI;EACE;ACi7BN,CD56BI;EACE;EACA;AC86BN,CDz6BI;EACE;AC26BN,CDt6BI;EACE;EACA;ACw6BN,CDl6BM;EACE;ACo6BR,CD/5BM;EACE;EACA;ACi6BR,CD55BM;EACE;AC85BR,CDz5BM;EACE;EACA;AC25BR,CD99BE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;AC6+Bf,CD79BI;EACE;AC+9BN,CD19BI;EACE;AC49BN,CDv9BI;EACE;ACy9BN,CDp9BI;EACE;EACA;ACs9BN,CDj9BI;EACE;ACm9BN,CD98BI;EACE;EACA;ACg9BN,CD18BM;EACE;AC48BR,CDv8BM;EACE;EACA;ACy8BR,CDp8BM;EACE;ACs8BR,CDj8BM;EACE;EACA;ACm8BR,CDtgCE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ACmhCb,CDrgCI;EACE;ACugCN,CDlgCI;EACE;ACogCN,CD//BI;EACE;ACigCN,CD5/BI;EACE;EACA;AC8/BN,CDz/BI;EACE;AC2/BN,CDt/BI;EACE;EACA;ACw/BN,CDl/BM;EACE;ACo/BR,CD/+BM;EACE;EACA;ACi/BR,CD5+BM;EACE;AC8+BR,CDz+BM;EACE;EACA;AC2+BR,CDj6BE;EACE;EACA;ACo6BJ,CoCxhCI;ErCuHE;EACA;ACo6BN,CD/5BI;EACE;EACA;ACk6BN,CD75BI;EACE;EACA;ACg6BN,CD35BI;EAWI;EAMF;AC+4BN,CGllCE;EyCkJA;EzChJE;EACA;AHqlCJ,CIngCE;EAKE;EACA;AJkgCJ,CIliCE;EACE;AJoiCJ,CIliCE;EACE;AJoiCJ,CIliCE;EACE;AJoiCJ,CIhiCI;EAEE;AJiiCN,CIpmCE;EACE;AJsmCJ,CInmCE;EACE;AJqmCJ,CIlmCE;EACE;AJomCJ,CIjmCE;EACE;AJmmCJ,CIlhCI;EACE,YAxGY;EAyGZ;AJohCN,CIhhCE;EACE;AJmhCJ,CI9gCE;EACE;AJihCJ,CI9gCE;EAEE;EACA;AJghCJ,CI3kCE;EACE;AJ6kCJ,CI3kCE;EACE;AJ6kCJ,CI3kCE;EACE;AJ6kCJ,CIzkCI;EAEE;AJ0kCN,CIvlCE;EACE;AJylCJ,CIvlCE;EACE;AJylCJ,CIvlCE;EACE;AJylCJ,CIrlCI;EAEE;AJslCN,CIxnCE;EAXA,0CADmB;AJuoCrB,CIvnCE;EAfA,oCADmB;AJ0oCrB,CItnCE;EAnBA,0CADmB;AJ6oCrB,C4C1gCE;EAXA;A5CyhCF,C4C9gCE;EAXA;A5C6hCF,C4ClhCE;EAXA;A5CgiCF,C4CrhCE;EAXA;A5CmiCF,C4CxhCE;EAXA;A5CuiCF,C4C5hCE;EAXA;A5C0iCF,C4C/hCE;EAXA;A5C6iCF,C4CliCE;;EAXA;A5CkjCF,CKhrCI;;EACE;ALorCN,CKhrCE;EACE;ALmrCJ,CKjrCI;EACE;ALmrCN,CK/qCE;EACE;EACA;ALkrCJ,CKhrCI;EACE;ALkrCN,CK9qCE;EACE;ALirCJ,CK9qCE;EACE;EACA;ALirCJ,CK7qCI;EACE;EACA;EACA;ALgrCN,CK5qCE;EACE;EACA;AL+qCJ,CK7qCI;EACE;AL+qCN,CK3qCE;EACE;EACA;AL8qCJ,CK5qCI;EACE;AL8qCN,CK3qCI;EACE;AL6qCN,CKzqCE;;EAEE;AL4qCJ,CK1pCI;EACE,iBALc;ALkqCpB,CMlwCE;EAEE;EACA;ANowCJ,C4C3mCE;EAXA;A5CynCF,C4C9mCE;EAXA;A5C4nCF,CMlwCE;EACE;ANqwCJ,COnwCE;EACE;APswCJ,COnwCE;EACE,aAdoB;APoxCxB,COnwCE;EAGE;APowCJ,COjwCE;EACE,yBAxBoB;AP4xCxB,COhwCI;EACE;APmwCN,COhwCI;EACE;APkwCN,CO/vCI;EACE;APiwCN,CO1vCM;EACE,yBAtCW;APmyCnB,COxvCM;EACE,qBA5CW;APsyCnB,COtvCI;EACE;APwvCN,COlvCE;EACE;APqvCJ,COhvCI;;EACE;APovCN,COjvCI;;EACE;APovCN,COjvCI;;EACE;APovCN,CQ5xCE;EA5CA,yBAyCwB;EAxCxB,0BAyCwB;ARmyC1B,CQ10CE;EACE,0BAsCsB;EArCtB;AR40CJ,CQjyCM;EoCmGJ;A5CisCF,CQhyCM;EACE;ARkyCR,CQ9xCI;EACE;ARgyCN,CQ7xCI;EACE;AR+xCN,CQ1xCI;EAnEF,yBAyBE;EAxBF,YAuBwB;AR00C1B,CQ/1CE;EACE,YAoBsB;EAnBtB;ARi2CJ,CQ30CE;EAVA,0CADmB;ARy1CrB,CQlyCI;EAvEF,yBAyBE;EAxBF,YAuBwB;ARq1C1B,CQ12CE;EACE,YAoBsB;EAnBtB;AR42CJ,CQt1CE;EAVA,0CADmB;ARo2CrB,CQzyCI;EA3EF,yBAyBE;EAxBF,0BAuBwB;ARg2C1B,CQr3CE;EACE,0BAoBsB;EAnBtB;ARu3CJ,CQj2CE;EAVA,oCADmB;AR+2CrB,CS/3CE;EACE;ATk4CJ,CS/3CE;;;;EAIE;ATk4CJ,CS/3CE;;EAEE;ATk4CJ,CS/3CE;EACE;ATk4CJ,CS/3CE;EACE;ATk4CJ,CUn1CE;EACE;AVs1CJ,CUj1CE;;;EAGE;AVo1CJ,CUj1CE;EACE;AVo1CJ,CUj1CE;;EAEE;AVo1CJ,CUj1CE;;EAEE;EACA;AVo1CJ,CUh4CE;EAiDI,0BA/Ba;AVk3CnB,CU/0CE;EACE,0BApCe;AVs3CnB,CU/0CE;EAOI;AV40CN,CU54CE;EA2EI;AVq0CN,CUh5CE;EAoFM;AVg0CR,CU9uCE;EACE,iCA9MA;AV+7CJ,CU9uCE;;EAEE,kCAViB;AV2vCrB,CU9uCE;;EAEE;AVivCJ,CU9uCE;;EAEE;AVivCJ,CU9uCE;;EAEE,mBAxBc;AVywClB,CU9uCE;;EAEE,mBA5BuB;AV6wC3B,CUt9CE;EACE;EACA;AVy9CJ,CUt9CE;EAII;AVs9CN,CU78CE;EACE;AVg9CJ,CU97CE;;EASI;AV07CN,CU58CE;EASA;IASI;EV+7CJ;AACF,CUv2CE;EkCCA;ElCCE;EACA;AVy2CJ,CUxyCE;EACE,oCA9MA;AVw/CJ,CUvyCE;;EAEE,kCAViB;AVmzCrB,CUtyCE;;EAEE;AVwyCJ,CUryCE;;EAEE;AVuyCJ,CUpyCE;;EAEE,mBAxBc;AV8zClB,CUnyCE;;EAEE,mBA5BuB;AVi0C3B,CU1gDE;EACE;EACA;AV4gDJ,CUzgDE;EAII;AVwgDN,CU//CE;EACE;AVigDJ,CU/+CE;;EASI;AV0+CN,CU5/CE;EASA;IASI;EV8+CJ;AACF,CUl1CE;EACE,kCA9MA;AVkiDJ,CUj1CE;;EAEE,kCAViB;AV61CrB,CUh1CE;;EAEE;AVk1CJ,CU/0CE;;EAEE;AVi1CJ,CU90CE;;EAEE,mBAxBc;AVw2ClB,CU70CE;;EAEE,mBA5BuB;AV22C3B,CUpjDE;EACE;EACA;AVsjDJ,CUnjDE;EAII;AVkjDN,CUziDE;EACE;AV2iDJ,CUzhDE;;EASI;AVohDN,CUtiDE;EASA;IASI;EVwhDJ;AACF,CUl7CE;EkCbA;A5Cm8CF,CUl7CE;EACE;AVq7CJ,CUn7CI;EACE;AVq7CN,CUl7CI;EACE;AVo7CN,CUh7CE;EACE;AVm7CJ,CWlmDE;EiCiJA;EjC/IE;EACA;AXqmDJ,C8C7mDE;EACE;A9CgnDJ,C8C7mDE;EACE;A9CgnDJ,CY9mDE;EAEE;EACA;AZgnDJ,C4Cz9CE;EAXA;A5Cu+CF,CYhnDE;EACE;AZmnDJ,C+CnoDM;EnCoBF;AZmnDJ,CY9mDE;EACE;IAEE;EZgnDJ;AACF,CY7mDE;EACE;AZ+mDJ,CY5mDE;;EAEE;AZ+mDJ,CY5mDE;EACE;AZ+mDJ,CY7mDI;;EAEE;AZ+mDN,CYllDI;EACE,YALe;AZ0lDrB,CYnlDM;EACE,YAVY;AZ+lDpB,CavoDE;EACE,yBAZA;AbspDJ,CavoDE;EACE,yBAhBA;Ab0pDJ,CavoDE;EACE,cAnBoB;Ab6pDxB,CaxoDI;EACE,cAhBqB;Ab0pD3B,CavoDI;EACE,cAnBmB;Ab4pDzB,CaroDE;EACE,cA9BqB;AbsqDzB,CaroDE;EACE,qCA9BA;AbsqDJ,CapoDI;EACE,yBAhCsB;AbuqD5B,CaroDM;EACE,yBArCmB;Ab4qD3B,CapoDM;EACE,yBAxCiB;Ab8qDzB,CahoDI;EACE,cA9CsB;AbirD5B,CahoDI;EACE,cApDqB;AbsrD3B,Ca/nDI;EACE,cAvDmB;AbwrDzB,CaznDI;EACE,cAhEmB;Ab4rDzB,Ca1nDM;;EAEE,cApEiB;AbgsDzB,CaxnDI;;EAEE,yBA1EmB;AbosDzB,CatnDE;EACE,cA/EqB;AbwsDzB,CcntDI;EACE,0BANU;Ad4tDhB,CcntDI;EACE,0BAVU;Ad+tDhB,CcltDI;EACE,qCAZF;AdguDJ,CcjtDI;EkCzBF;EACA;EACA;AhD6uDF,CiDvuDI;EACE,qCAJF;AjD8uDJ,CiDvuDI;EDZF;EACA;EACA;AhDsvDF,CexuDI;EACE,qCATF;AfovDJ,CexuDI;EACE,qCAXF;AfqvDJ,CevuDI;EACE,qCAbF;AfsvDJ,CeruDM;EACE,0BAjBiB;AfwvDzB,CepuDM;EACE;AfsuDR,CgBlvDI;EACE,0BAXF;AhBgwDJ,CgBlvDI;EACE,0BAbF;AhBiwDJ,CgBhvDM;EACE,cAjBkB;AhBmwD1B,CgB/uDM;EACE,cApBiB;AhBqwDzB,CgB9uDM;EACE,cAvBe;AhBuwDvB,CgB1uDM;EACE,cA9Be;AhB0wDvB,CgBvuDM;EACE,0BA3CiB;AhBoxDzB,CgBtuDM;EACE,0BAtCJ;AhB8wDJ,CkD5xDI;EACE;AlD+xDN,CkD5xDI;EACE;AlD8xDN,CkD3xDI;EACE;AlD6xDN,CmBjyDE;EACE;AnBoyDJ,CmBjyDE;;EAEE;AnBoyDJ,CmBjyDE;EACE;AnBoyDJ,CmDxzDE;EhCuBI;AnBoyDN,CmD3zDE;EhCuBI;AnBoyDN,CmDvzDE;EhCmBI;AnBuyDN,CmDtzDE;EhCeI;AnB0yDN,CmDnzDE;EhCSI;AnB6yDN,CmBxxDE;EACE;AnB2xDJ,CmBxxDE;;EAEE;AnB2xDJ,CmBxxDE;EACE;AnB2xDJ,C8B30DI;EACE;A9B80DN,C8B30DI;EACE;A9B60DN,C8B10DI;EACE;A9B40DN,C8Bz0DI;EACE;EACA;A9B20DN,C8Bp0DI;;;;;EACE;A9B20DN,C8Bt0DI;EACE;A9By0DN,CoBt2DE;EAEE;ApBw2DJ,C4C9sDE;EAXA;A5C4tDF,CoBx2DE;EACE;EACA;ApB22DJ,CoBx2DM;;;EAGE;ApB02DR,CoBr2DE;;EAEE;ApBw2DJ,CoBj2DI;;;;EACE;ApBu2DN,CqBn4DE;EACE;ArBs4DJ,CqBn4DE;;EAEE;ArBs4DJ,CqBn4DE;;EAEE;EACA;ArBs4DJ,CqBn4DE;;EAEE;ArBs4DJ,CqBl4DI;;;;EAIE;ArBq4DN,CqB92DI;EACE,gBALK;ArBs3DX,CoDv5DE;EACE;ApD05DJ,CoDv5DE;EACE;ApD05DJ,CoDv5DE;EACE;ApD05DJ,CoDt5DI;EACE;ApDy5DN,CoDt5DI;EACE;ApDw5DN,CoDr5DI;EACE;ApDu5DN,CoDl5DI;EACE;ApDq5DN,CoDl5DI;EACE;ApDo5DN,CoDj5DI;EACE;ApDm5DN,CqDp8DI;EACE;ArDu8DN,CqDp8DI;EACE;ArDs8DN,CqDn8DI;EACE;ArDq8DN,CsB97DE;EACE;AtBi8DJ,CsBt9DE;EACE;AtBy9DJ,CsBt9DE;;EAIE;AtBs9DJ,CsB99DE;EACE;AtBg+DJ,CsB79DE;;EAIE;AtB69DJ,CsBr+DE;EACE;AtBu+DJ,CsBp+DE;;EAIE;AtBo+DJ,CsBn8DM;;EAEE;AtBq8DR,CsBl8DM;;EAEE;AtBo8DR,CsBj8DM;EACE;AtBm8DR,CsB77DI;EACE;AtB+7DN,CuBh/DE;EACE;AvBm/DJ,CuBh/DE;EACE;AvBm/DJ,CuBh/DE;EACE;AvBm/DJ,CuBh/DE;EACE;AvBm/DJ,CuBh/DE;EACE;AvBm/DJ,C4C52DE;EAXA;A5C03DF,CuBn/DI;EACE;AvBq/DN,CuB/+DM;EACE;AvBk/DR,CuB/+DM;EACE;AvBi/DR,CuB9+DM;EACE;AvBg/DR,CuB5+DI;EACE;AvB8+DN,CuB3+DI;EACE;AvB6+DN,CsDvhEE;EACE,yBALmC;EAMnC;AtD0hEJ,CsDvhEE;EACE,uBAXwB;EAYxB;AtD0hEJ,CsDxhEI;EACE,uBAb2B;AtDuiEjC,CsDvhEI;EV6HF;A5C65DF,CsDnhEE;EACE,2CAvBmB;AtD6iEvB,CsDphEI;EACE,0CA1BiB;EA2BjB;AtDshEN,CsDlhEE;EACE,0CAhCmB;EAiCnB;AtDqhEJ,CsDnhEI;EACE;EACA,2CArCiB;AtD0jEvB,CsDjhEE;EAQI;AtD6gEN,CwBtkEI;EACE;AxBykEN,CwBtkEI;EAGE;AxBskEN,CwBnkEI;EAGE;AxBmkEN,CwBhlEI;EACE;AxBklEN,CwB/kEI;EAGE;AxB+kEN,CwB5kEI;EAGE;AxB4kEN,CwBzlEI;EACE;AxB2lEN,CwBxlEI;EAGE;AxBwlEN,CwBrlEI;EAGE;AxBqlEN,CwBhjEI;EAGE,uBAhBqB;AxBgkE3B,CwB5iEE;EoB2FA;EpBzFE;AxB+iEJ,CwB5iEE;EACE,qCA3BoB;AxB0kExB,CyBrkEE;EACE,qCAbqB;AzBqlEzB,CyBpnEE;;;EAGE;AzBunEJ,CyBpnEE;EACE;AzBsnEJ,CyBnnEE;EAGE,uCADQ;AzBonEZ,CyBhoEE;;;EAGE;AzBkoEJ,CyB/nEE;EACE;AzBioEJ,CyB9nEE;EAGE,0CADQ;AzB+nEZ,CyB3oEE;;;EAGE;AzB6oEJ,CyB1oEE;EACE;AzB4oEJ,CyBzoEE;EAGE,wCADQ;AzB0oEZ,CyBvlEI;;EACE,qCAhC2B;AzB2nEjC,CyBtlEI;;;EAGE,qCAvCwB;AzBgoE9B,CyBrlEM;EACE,qCA5CsB;AzBmoE9B,CyBjlEI;EAGE,qCADQ;AzBmlEd,CyBxkEM;;EAEE,qCA/DJ;AzByoEJ,CyBtkEQ;;EAEE,qCAnEN;AzB2oEJ,CyBlkEM;EACE,iCAhFiB;EAiFjB;AzBokER,CyB/jEQ;EACE,iCAtFuB;AzBupEjC,CyB9jEQ;EACE,iCAzFoB;AzBypE9B,CyB1jEE;EACE,gCAzFA;AzBspEJ,CyBpjEE;EACE;EAIA;AzBojEJ,CyB1iEE;EACE;AzB6iEJ,C0B7rEI;EAIE;A1B6rEN,C0B1rEI;EACE;A1B4rEN,C0BtrEI;EACE;IACE;E1BwrEN;AACF,C0BrrEI;;EAIE;A1BqrEN,C0BlrEI;EAGE;EACA;A1BkrEN,C0B/qEI;;;EAGE;EACA;A1BirEN,C0B7qEM;EACE;A1B+qER,C0B5qEM;;;EAGE;EACA;A1B8qER,C0BzqEM;EACE;A1B2qER,C0BxqEM;;;EAGE;EACA;A1B0qER,C0BtqEI;EACE;EACA;A1BwqEN,C0BrqEI;EACE;A1BuqEN,C0BpqEI;EACE;A1BsqEN,C0BlqEE;EACE;A1BqqEJ,C0BlqEE;EACE;A1BqqEJ,C0BlqEE;;;EAGE;A1BqqEJ,C0B5nEI;EACE,YANK;A1BqoEX,C0B5nEI;;EAEE;A1B+nEN,C0B1nEI;EACE;EACA;A1B6nEN,C0BxnEM;EACE;A1B2nER,C0BtnEI;EACE;A1BynEN,CuD9xEE;EAYI;AvDsxEN,C2B9xEE;;EAEE,4CAJc;A3BqyElB,C2B7xEI;;EAEE,yCAVY;EAWZ;A3BgyEN,C2B5xEE;EACE;A3B+xEJ,C2B7xEI;EACE;A3B+xEN,C2B3xEE;EACE;A3B8xEJ,C2B3xEE;EACE;A3B8xEJ,C2B1xEE;;EAEE;EACA;A3B6xEJ,C2B/uEM;;;;;EACE;A3BsvER,C2BjwEE;EACE;A3BmwEJ,C2BpwEE;EACE;A3BswEJ,C2B7vEM;;;;;EACE;A3BmwER,C2B9wEE;EACE;A3BgxEJ,C2BjxEE;EACE;A3BmxEJ,C2B1wEM;;;;;EACE;A3BgxER,C2B3xEE;EACE;A3B6xEJ,C2B9xEE;EACE;A3BgyEJ,C2BvxEM;;;;;EACE;A3B6xER,C2BlxEE;EACE;A3BoxEJ,C2BhxEE;EACE;A3BkxEJ,C2BhxEI;EACE;A3BkxEN,C2B7wEE;;;;;;;EAIE;A3BkxEJ,C2B/wEE;;;EAGE;EACA;A3BixEJ,C2B5wEE;;;;;EAIE;EACA;A3B+wEJ,C2B9zEM;;;;;EACE;A3Bo0ER,C2BzzEE;EACE;A3B2zEJ,C2BvzEE;EACE;A3ByzEJ,C2BvzEI;EACE;A3ByzEN,C2BpzEE;;;;;;;EAIE;A3ByzEJ,C2BtzEE;;;EAGE;EACA;A3BwzEJ,C2BnzEE;;;;;EAIE;EACA;A3BszEJ,C2Br2EM;;;;;EACE;A3B22ER,C2Bh2EE;EACE;A3Bk2EJ,C2B91EE;EACE;A3Bg2EJ,C2B91EI;EACE;A3Bg2EN,C2B31EE;;;;;;;EAIE;A3Bg2EJ,C2B71EE;;;EAGE;EACA;A3B+1EJ,C2B11EE;;;;;EAIE;EACA;A3B61EJ,C4Bv7EE;EACE;EACA;A5B07EJ,C4Bx7EI;EApCF;EACA;A5B+9EF,C4Bx7EI;EAxCF;EACA;A5Bm+EF,C4Bx7EI;EA5CF;EACA;A5Bu+EF,C4Bn+EE;;;EAGE;A5Bq+EJ,C4Bl+EE;;;;;EAKE;A5Bo+EJ,C4Bj+EE;EACE;A5Bm+EJ,C4BhgFE;EACE,gBA6Ee;A5Bs7EnB,C4BjgFE;EACE,YA0Ee;A5B07EnB,C4B96EI;EA1FF;IACE,gBA+Ec;E5B67EhB;;E4B1gFA;IACE,YA4Ec;E5Bi8EhB;AACF,C6BzgFE;EACE;A7B2gFJ,CkClhFE;EACE;AlCqhFJ,CkClhFE;;EAEE;AlCqhFJ,CkC7/EI;EACE,gBALK;AlCqgFX,CiC/hFE;EAGE;EACA;EW6IF;A5Co5EF,CiC5hFE;EACE;AjC+hFJ,CwDrjFA;;EAAA,CAqEA;;EAAA,CArEA;;EAAA,CAqEA;;EAAA,CClEA;EACI;AzDikFJ,CyD7jFA;EACI,0BD6FwB;EC5FxB;EACA;EACA;EACA;AzDgkFJ,CyD7jFA;;EAEE,yBDDY;ECEZ,cDDa;AxDikFf,CyD9jFE;;EACE,yBD2Ca;AxDshFjB,CyD7jFA;EACI,yBDoCuB;ECnCvB,sBDPY;ECQZ;EACA;EACA,YD2CoB;EC1CpB;EACA;EACA;EACA;EACA;AzDgkFJ,CyD9jFI;EAGI;EACA;EACH;EACG;EACA;EACA;EACA;AzD8jFR,CyDtkFQ;EAAM;AzDykFd,CyD9jFI;EACI;EAEA;EACA;EACA;AzD+jFR,CyD7jFQ;EACI;EACA,cDzCG;EC0CH;EACA;EACA;AzD+jFZ,CyD3jFI;EACI;EACA;EACA;EACA;AzD6jFR,CyD3jFQ;EACI;EACA;EACA;AzD6jFZ,CyD3jFY;EACI;EACA;AzD6jFhB,CyD1jFY;EACI;EACA;AzD4jFhB,CyDvjFI;;EAEI;EACA;AzDyjFR,CyDtjFI;EACI;EACA;EACA;AzDwjFR,CyDpjFA;EACI,YD5BiB;AxDmlFrB,CyDtjFI;EACI;EACA;EACA;AzDwjFR,CyDtjFI;EACI,gBDnCa;ECoCb;EACA;EACA;AzDwjFR,CyDtjFQ;EACI;EACA;EACA;AzDwjFZ,CyDrjFQ;EACI;AzDujFZ,CyDnjFI;;EAEI,gBDrDa;ECsDb;EACA;EACA;EACA,cD7HW;AxDkrFnB,CyDljFI;EACI;AzDojFR,CyDhjFA;EACI;EACA;EACA;AzDmjFJ,CyDjjFI;;EAEI;EACA;AzDmjFR,CyDhjFI;EACI;EACA;EACA;AzDkjFR,CyDhjFQ;EACI;EACA;AzDkjFZ,CyD/iFQ;EACI;EACA;EACA;AzDijFZ,CyD/iFY;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AzDijFhB,CyD/iFgB;EACI;EACA;EACA;EACA;AzDijFpB,CyD1iFA;EACI;AzD6iFJ,CyD3iFI;EACI;EACA;AzD6iFR,CyD3iFQ;;EAEI;EACA;EACA;AzD6iFZ,CyD3iFY;;EACI;AzD8iFhB,CyDziFI;EACI;EACA;AzD2iFR,CyDziFQ;;EAEI;EACA;EACA;AzD2iFZ,CyDziFY;;EACI;AzD4iFhB,CyDviFI;EACI;EACA;AzDyiFR,CyDviFQ;;EAEI;EACA;EACA;AzDyiFZ,CyDviFY;;EACI;AzD0iFhB,CyDriFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AzDuiFR,CyDriFQ;EACI;EACA;AzDuiFZ,CyDriFY;EACI;EACA;AzDuiFhB,CyDliFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AzDoiFR,CyDliFQ;EACI;EACA;AzDoiFZ,CyDliFY;EACI,cDtQD;ECuQC,aDvQD;ECwQC;EACA;AzDoiFhB,CyD/hFI;EACI;AzDiiFR,CyD9hFI;;EAEI;EACA;EACA;EACA;EACA;AzDgiFR,CyD7hFI;EACI,cD/RK;AxD8zFb,CyD5hFI;EACI,cDlSO;AxDg0Ff,CyD3hFI;EACI;AzD6hFR,CyD3hFI;EACI;IACI;EzD6hFV;EyD3hFM;IACI;EzD6hFV;EyD3hFM;IACI;EzD6hFV;AACF,CyDzhFQ;EACI,cD/TO;ECgUP,aDhUO;AxD21FnB,CyDthFQ;EACI,cDpUQ;ECqUR,aDrUQ;AxD61FpB,CyDnhFQ;EACI,cDzUI;EC0UJ,aD1UI;AxD+1FhB,CyDhhFQ;EACI,cD7UG;EC8UH,aD9UG;AxDg2Ff,CyD7gFQ;EACI,cDnVC;ECoVD,aDpVC;AxDm2Fb,CyD1gFQ;EACI,cDzVG;EC0VH,aD1VG;AxDs2Ff,CyDvgFQ;EACI,cDhWG;ECiWH,aDjWG;AxD02Ff,CyDpgFQ;EACI,cD9WQ;EC+WR,aD/WQ;AxDq3FpB,CyDjgFQ;EACI,cD9WG;EC+WH,aD/WG;AxDk3Ff,CyD9/EQ;EACI,cD5XQ;EC6XR,aD7XQ;AxD63FpB,CyD3/EQ;EACI,cD5XG;EC6XH,aD7XG;AxD03Ff,CyDx/EQ;EACI,cD1YQ;EC2YR,aD3YQ;AxDq4FpB,CyDr/EQ;EACI,cDnZO;ECoZP,aDpZO;AxD24FnB,CyDl/EQ;EACI,cDhZE;ECiZF,aDjZE;AxDq4Fd,CyD/+EQ;EACI,cDzZC;EC0ZD,aD1ZC;AxD24Fb,CyD5+EQ;EACI,cDpaI;ECqaJ,aDraI;AxDm5FhB,CyDz+EQ;EACI,cDxaG;ECyaH,aDzaG;AxDo5Ff,CyDt+EQ;EACI,cDpbQ;ECqbR,aDrbQ;AxD65FpB,CyDl9EA;EACI;EACA;AzDq9EJ,CyDp9EI;EACI;AzDs9ER,CyDl9EA;EACI;EACA;EACA;EACA;AzDq9EJ,CyDj9EI;EACI;EACA;AzDo9ER,CyDh9EA;EACI;EACA,6CDvZuB;AxD02F3B,CyDh9EA;EACI;AzDm9EJ,CyDh9EA;;EAEI;AzDm9EJ,CyDh9EA;EACI;EACA;EACA;EACA;EACA;AzDm9EJ,CyDh9EA;EACI;IACI,YD9ZuB;ExDi3F7B;EyDj9EM;IACI;EzDm9EV;EyDh9EM;IACI;IACA;EzDk9EV;EyD/8EM;IACI;IACA;IACA;EzDi9EV;EyD98EM;;IAEI;EzDg9EV;EyD78EM;IACI;EzD+8EV;;EyD38EE;IACI,8BDzboB;ExDu4F1B;AACF,CyD38EA;EACI;EACA;AzD68EJ,CyD18EA;EACI;EACA;AzD68EJ,CyD18EA;EACI;EACA;EACA;EACA;EACA;EACA;AzD68EJ,CyD18EA;EACI;EACA;AzD68EJ,CyD18EA;EACI;EACA;EACA;EACA;EACA;AzD68EJ,CyD38EA;EACI;EACA;EACA;EACA;EACA;AzD88EJ,CyD58EA;EACI;AzD+8EJ,CyD58EA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AzD+8EJ,CyD78EA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AzDg9EJ,CyD98EA;EACI;EACA;AzDi9EJ,CyD98EA;EACI;EACA;AzDi9EJ,CyD98EA;EACI;AzDi9EJ,CyD98EA;EACC;AzDi9ED,CyD98EA;EACC;EACG;EACH;EACA;EACA;AzDi9ED,CyD98EA;EACC;AzDi9ED,CyD98EA;EACI;AzDi9EJ,C0D9kGI;EAEI;EACA;EACA;EAEA;EACA;A1D+kGR,C0D7kGQ;EACI;EACA;A1D+kGZ,C0D7kGY;EACI;A1D+kGhB,C0D3kGQ;EACI;A1D6kGZ,CwDlmGA;;EAAA,CAqEA;;EAAA,CGnEA;EACC;EACA;EACA;EACA;A3DymGD,C2DvmGE;EACE,cHMS;EGLT;EACA;A3DymGJ,C4DpnGA;EACE;A5DunGF,CwDxnGA;;EAAA,CAqEA;;EAAA,CKnEA;EACE;EACA;EACA;A7D+nGF,C6D7nGE;EACE,cLUW;EKTX,yBLDiB;EKEjB;EACA,eLiEuB;EKhEvB;A7D+nGJ,C6D7nGI;EACE;EACA;EACA;A7D+nGN,C6D7nGM;EACE;EACA;A7D+nGR,C6D3nGI;EACE;A7D6nGN,C6D1nGI;EACE;A7D4nGN,C6DznGI;EACE;EACA;EACA;EACA;EACA;A7D2nGN,C6DvnGE;EACE;EACA;EACA;EACA;EACA,cLjCW;EKkCX,yBLtCkB;EKuClB;EACA,YLyBiB;AxDgmGrB,C6DtnGE;EACE,cL/Ce;EKgDf,yBLrCW;EKsCX;EACA,YLkBiB;AxDsmGrB,C6DtnGI;EACE;A7DwnGN,C6DpnGE;;;;EAIE;EACA;EACA;A7DsnGJ,C6DpnGI;;;;EACE;EACA;EACA;EACA;EACA;EACA;EACA;A7DynGN,C6DrnGE;EACE,sCLEwB;AxDqnG5B,C6DpnGE;EACE,sCLDqC;AxDunGzC,C6DnnGE;EACE;A7DqnGJ,C6DlnGE;EACE,6DLNwD;AxD0nG5D,C6DjnGE;EACE;EACA;EACA;EACA;EACA,yBL9FkB;EK+FlB,YL9BiB;EK+BjB;A7DmnGJ,C6DhnGM;EACE;A7DknGR,C6DhnGQ;EACE;A7DknGV,C6D7mGI;EACE;A7D+mGN,CwDtuGA;;EAAA,CAqEA;;EAAA,CMnEA;EACE;EACA;EACA;EACA;EACA;A9D6uGF,C8D3uGE;EACE;A9D6uGJ,C8D1uGE;EACE;EACA;EACA;A9D4uGJ,C8D1uGI;EACE;EACA;A9D4uGN,C8DxuGE;EACE;EACA,yBNRW;EMSX,cNlBgB;EMmBhB;EACA;EACA;EACA;KAAA;UAAA;A9D0uGJ,C8DvuGE;EACE;A9DyuGJ,C8DxuGI;EACE;A9D0uGN,C8DxuGM;EACE;A9D0uGR,C8DvuGM;EACE;A9DyuGR,C8DtuGM;EACE;EACA;A9DwuGR,C8DpuGI;EACE;EACA;EACA;EACA;A9DsuGN,C8DnuGE;EAGE;A9DmuGJ,C8DhuGE;EACE;EACA;A9DkuGJ,CwDtyGA;;EAAA,CAqEA;;EAAA,COlEE;EACE,qCPDW;AxD6yGf,C+DzyGE;EACI;EACA;A/D2yGN,C+DvyGI;EAIE;EACA;A/DsyGN,C+DnyGI;EACE;EACA;EACA,YPmDe;EOlDf;EACA;A/DqyGN,C+DnyGM;EAEE;A/DoyGR,C+DjyGM;EACE,cPnBK;AxDszGb,C+D/xGI;EACE;EACA;EACA,ePoC8B;AxD6vGpC,C+D/xGM;;EAEE;EACA;EACA;EACA;A/DiyGR,C+D7xGI;EACI;A/D+xGR,C+DzxGI;EACE;A/D2xGN,C+DvxGM;;EAEE;A/DyxGR,C+DrxGI;EACE;EACA;EACA;EACA;A/DuxGN,C+DrxGM;EACE;EACA;A/DuxGR,C+DnxGI;EACE,yBPzEgB;AxD81GtB,CwDx2GA;;EAAA,CAqEA;;EAAA,CQjEA;EACE;EACA;EACA;EACA,cRMa;EQLb;EACA;EACA;EACA;KAAA;UAAA;AhE62GF,CgE32GE;EACE;AhE62GJ,CgE12GE;EAEE;EACA;EACA;EACA;AhE22GJ,CgEz2GI;EACE;EACA;AhE22GN,CgEv2GE;EACE,yBRvBgB;AxDg4GpB,CgEv2GI;EACE;AhEy2GN,CgEt2GI;EACE;AhEw2GN,CgEp2GE;EACE;EACA,yBR3BW;EQ4BX;EACA;AhEs2GJ,CgEp2GI;EACE,yBRzCc;AxD+4GpB,CgEn2GI;EACE,cRpCS;EQqCT,yBRxCO;AxD64Gb,CgEl2GI;EACE;AhEo2GN,CwD/5GA;;EAAA,CAqEA;;EAAA,CSnEA;EACE,0BT0FoC;ESzFpC;EACA;EACA;EACA;EACA;AjEs6GF,CiE55GE;EACE;EACA;AjE85GJ,CkE/6GY;EACI;AlEk7GhB,CkE/6GY;EACI;AlEi7GhB,CkEx6GY;EACI;AlE26GhB,CkEv6GQ;EACI;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;AlEw6GZ,CkEt6GY;EACI;AlEw6GhB,CkEl6GA;EACE;EACA;EACA;AlEq6GF,CmEj9GA;EACI;EACA;EAIA;EACA;EACA;AnEi9GJ,CmE98GA;EACI;EACA;EACA;EACA;EACA;EACA;EAAA;EACA;EACA;EAEA;EACA;EACA;AnE+8GJ,CoEt+GA;EACI;ApEy+GJ,CoEp+GA;;EAEI,qCCGS;EDFT,kBCHoB;EDIpB,WCEY;EDDZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA,aC0Cc;EDzCd;EACA;ApEu+GJ,CoEr+GI;;EACI;EACA;ApEw+GR,CoEr+GI;;EACI,WCfc;ArEu/GtB,CoEt+GI;;EACI;ApEy+GR,CoEr+GA;EACI;ApEw+GJ,CoEt+GI;EACI;ApEw+GR,CoEp+GA;EACI;ApEu+GJ,CoEr+GI;EACI;ApEu+GR,CsE98GI;EFpBA;IACI;EpEugHN;EoEpgHE;IACI;EpEsgHN;EoEngHE;IACI;EpEqgHN;AACF,CsE3/GI;EFNA;IACI;EpEqiHN;EoEliHE;IACI;EpEoiHN;EoEjiHE;IACI;EpEmiHN;AACF,CoE9hHQ;EE5DJ,4BF6D2B;EACnB;ApEkiHZ,CoE7hHQ;EEnEJ,2BFoE2B;EACnB;ApEiiHZ,CoE3hHA;EACI,aCpCa;EDqCb;EACA;EACA;EACA;ApE8hHJ,CoE7hHI;EACI,6ECtGQ;ArEqoHhB,CoE5hHI;EACI,WC/FQ;EDgGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EEyGJ,6BFxGI;EACA;EACA;EACA;ApEgiHR,CoE/hHQ;EACI;ApEiiHZ,CoE/hHQ;EACI,WClHU;ArEmpHtB,CoE5hHQ;EACI;ApE8hHZ,CoE3hHI;EACI;ApE6hHR,CoE5hHQ;EACI;ApE8hHZ,CoEzhHQ;EACI;ApE2hHZ,CoErhHA;EACI,WCzGgB;ED0GhB;EACA;EACA;EACA,aC9Fa;ED+Fb;EEkEA,oCFjEA;ApE0hHJ,CoExhHI;EACI;EACA;EACA;ApE0hHR,CoEvhHI;EACI;EACA;ApEyhHR,CoEvhHI;EACI;ApEyhHR,CoExhHQ;EACI;ApE0hHZ,CoEvhHI;EACI,+ECvIS;ArEgqHjB,CoEvhHI;EACI;EACA;EACA;EACA;ApEyhHR,CoErhHA;EACI;EACA;ApEwhHJ,CoEphHA;EACI,WCtLY;EDuLZ;EACA,eCnLmB;EDoLnB;EACA;EACA;EACA;ApEuhHJ,CoEnhHI;;;;EAII;EE2FJ,yHF1FI;ApEyhHR,CoE5gHgB;;EAEI;EEThB,iCFUmC;EACnB;EEyEhB,gHFxEgB;ApEshHpB,CoEhhHoB;;EAEI;EEpBpB,2BFqBuC;ApEshH3C,CoE7gHI;EACI;EACA;EACA;ApEghHR,CoE3gHQ;EACI;EACA;ApE8gHZ,CuE1wHA;EACI;EACA;EACA;AvE6wHJ,CuExwHA;EACI;EACA;AvE2wHJ,CuE1wHI;EACI;AvE4wHR,CuEzwHA;EACI;AvE4wHJ,CuE1wHA;EACI;AvE6wHJ,CuEzwHA;;;;;EAKI;EACA;ED2QA,wGC1QA;AvE+wHJ,CuExwHI;;;;EAII;AvE2wHR,CuExwHQ;EACI;AvE0wHZ,CuEtwHQ;EACI;ED6GR;AtE6pHJ,CuEtwHQ;EACI;EDwGR;AtEkqHJ,CuEtwHQ;EACI;EDmGR;AtEuqHJ,CuErwHY;EACI;ED6FZ;AtE4qHJ,CuElwHA;EACI;EACA;EACA;EACA;EACA;EACA,aFxBW;EEyBX;EACA;EACA;EACA;EACA;EDwIA,iCCtIA;AvEswHJ,CuEpwHI;EDUA,sBCTwB;AvEwwH5B,CuErwHI;EACI;AvEuwHR,CuEpwHI;EACI;AvEswHR,CuEhwHY;EDoIR,uCCjIY;EDsIZ,8CCrIgD;AvEkwHpD,CuE1vHY;EDwHR,kCCrHY;EACA;AvE2vHhB,CuEpvHQ;ED4LJ;EACA;EACA;AtE6jHJ,CuErvHQ;ED4LJ;EAGA;EACA;EACA;AtE4jHJ,CuExvHI;EACI;EACA;EACA;EACA;EACA;AvE0vHR,CuEvvHI;EACI;EACA;EACA;EACA;EACA;EDsEJ,sBCrEI;EACA;AvE2vHR,CuExvHI;EAKI;AvEsvHR,CuE1vHQ;EACI;AvE4vHZ,CuEtvHQ;;;EAGI;AvEwvHZ,CuEpvHQ;EACI;AvEsvHZ,CuElvHI;;EAEI;EACA;EACA;EACA;EACA;AvEovHR,CuElvHQ;;EACI;EACA;EACA;EACA;AvEqvHZ,CuEjvHI;EACI;EACA;EACA;EACA;EACA;EAEA;EACA;AvEkvHR,CuE9uHQ;EACI;AvEgvHZ,CuE7uHQ;EACI,aFjJE;ArEg4Hd,CuE3uHI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AvE6uHR,CuExuHQ;;EAEI;AvE0uHZ,CuEruHQ;EACI,aFhNuB;EEiNvB;AvEuuHZ,CuEluHQ;EACI;EACA;EACA;AvEouHZ,CuE9tHY;EDxFR;EC0FY;AvEiuHhB,CuE/tHY;EACI;EACA;AvEiuHhB,CuE3tHA;EACI;EACA;EACA;EACA;EACA;EACA,aFzMc;EE0Md,sBFrQa;EEsQb;EACA;EDhDA,oCCiDA;AvEguHJ,CuE/tHI;EACI,UFlRW;ArEm/HnB,CuEztHQ;;;EDiBJ,sCCdQ;AvE+tHZ,CuE1tHQ;EDhNJ,mCCiNqC;ED/MrC,2BC+MqC;AvE8tHzC,CuExtHQ;EACI;AvE0tHZ,CuExtHY;EACI;AvE0tHhB,CuEttHY;EDNR,gCCSY;AvEytHhB,CuEntHY;EDfR,mECgBY;AvEwtHhB,CuEntHY;EDrBR,uDCsBY;AvEwtHhB,CuE/sHY;EACI;AvEitHhB,CuE/sHgB;ED3KZ;AtE83HJ,CuE/sHgB;ED/KZ;AtEk4HJ,CuE/sHgB;EDnLZ;ECqLgB;AvEktHpB,CuE9sHgB;EDhDZ,6ECmDgB;AvEitHpB,CuEvsHA;EACI;AvE0sHJ,CuEzsHI;EACI;AvE2sHR,CuEtsHQ;EDlIJ,kCCmIQ;AvEysHZ,CuErsHgB;EDvIZ,kCCwIgB;EACA;AvEwsHpB,CuE9rHI;;EAEI;AvEisHR,CuE/rHI;EACI;AvEisHR,CuE/rHI;EACI;AvEisHR,CuE9rHQ;EACI;AvEgsHZ,CuE1rHA;EDjPI;ECmPA;ED1GA,uCC2GA;EACA,aFxVgB;EEyVhB;EACA;EACA;EACA;AvEisHJ,CA3kIA;EACG,yBwDCa;ExDAb,cwDDY;ExDEZ;EACA;EACA;EACA;AA8kIH,CA3kIA;EACE;EACA;AA8kIF,CA7kIE;EACE;AA+kIJ,CA7kII;EACE;AA+kIN,CA5kII;EACE;EACA;EACA;AA8kIN,CA5kIM;;EAEE;AA8kIR,CA3kIM;EACE;AA6kIR,CAzkII;EACE;EACA;AA2kIN,CAtkIA;EACE;AAykIF,CAvkIE;EACE;EACA;EACA;AAykIJ,CAtkIE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AAwkIJ,CApkIA;EACE,oEwD2BiB;AxD4iInB,CArkIE;EACE;EACA,ewDwBQ;AxD+iIZ,CAlkIA;EACE,oEwDiBiB;AxDojInB,CA/iIA;EACE;EACA,cwDnGa;ExDoGb;AAkjIF,CAjjIE;EACE,oEwDVe;ExDWf;AAmjIJ,CAjjIE;EACE;AAmjIJ,CA/iIA;EACE;EACA,cwD5Ga;ExD6Gb;AAkjIF,CAjjIE;EACE,oEwDvBe;ExDwBf;AAmjIJ,CAjjIE;EACE,cwDnHW;AxDsqIf,CA/iIA;EACE,yBwDzEe;ExD0Ef,cwDzHa;ExD0Hb;EACA;AAkjIF,CAjjIE;EACE,oEwDrCe;ExDsCf;AAmjIJ,CAjjIE;EACE,cwDjIW;AxDorIf,CAjjIE;EACE;EACA;AAmjIJ,CA9iIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAijIF,CA9iIA;EACE,yBwDxKiB;ExDyKjB,cwD7Ja;ExD8Jb;EACA;AAijIF,CAhjIE;EACE,oEwDzEe;ExD0Ef;AAkjIJ,CAhjIE;EACE,cwDrKW;AxDutIf,CAhjIE;EACE;EACA;AAkjIJ,CA7iIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,cwDlMiB;ExDmMjB;EACA;EACA;EACA;EACA;EACA;AAgjIF,CAliIE;EACE;AAqiIJ,CAjiIA;EACE,yBwD/Mc;ExDgNd,cwDjNa;ExDkNb,oEwD1HiB;ExD2HjB;EACA;EAAA;EACA;AAoiIF,CAzhIA;EAEE;;;IAGE;EA2hIF;;EAzhIA;IACE;EA4hIF;;EAzhIA;;IAEE;EA4hIF;;EAzhIA;;;;;;;;;IASE;EA4hIF;;EAzhIA;;;;IAIE;EA4hIF;;EAzhIA;IACE;EA4hIF;AACF,CArhIA;EACE;AAuhIF,CAphIA;EACE;AAuhIF,CAnhIE;EACE;EACA;EACA;AAshIJ,CAphIE;;EAEE;EACA;AAshIJ,CAnhIE;EACE;EACA;AAqhIJ,CAnhII;EACE;AAqhIN,CAnhIM;EACE;AAqhIR,CA/gIA;EACE;AAkhIF,CAhhIE;EACE;EACA,oEwD3Ne;ExD4Nf,ewD3NQ;ExD4NR;AAkhIJ,CA/gIE;EACE;EACA;EACA,oEwDnOe;ExDoOf,ewDnOQ;ExDoOR;EACA;EACA,yBwD3TkB;AxD40ItB,CA5gIE;EAEE;AA8gIJ,CA3gIE;;EAEE;AA6gIJ,CA3gII;;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oEwD7Pa;AxD2wInB,CA5gIM;;EACE;EACA;AA+gIR,CA5gIM;;EACE;EACA;EACA;EACA;EACA;EACA;AA+gIR,CA5gIM;;EACE;AA+gIR,CA5gIM;;EACE;EACA;AA+gIR,CA1gII;;EACE,oEwDzRa;AxDsyInB,CA5gIM;;EACE;AA+gIR,CA3gII;;EACE;EACA,ewDhSM;ExDiSN,oEwDlSa;AxDgzInB,CA5gIM;;EACE;EACA;AA+gIR,CA7gIQ;;EACE;AAghIV,CA5gIM;;EACE;EACA;AA+gIR,CA5gIM;;EACE;AA+gIR,CA5gIM;;EACE;AA+gIR,CA5gIM;;EACE;AA+gIR,CA5gIM;;EACE;AA+gIR,CA1gIM;;EACE;EACA;AA6gIR,CAzgII;;EACE;EACA;EACA,yBwDjagB;AxD66ItB,CAtgIE;EACE;AAwgIJ,CApgIA;EACE;EACA;AAugIF,CApgIA;EACE;EACA;EACA;EACA;EACA;AAugIF,CApgIA;EACE;EACA;EACA;AAugIF,CApgIA;EACE;EACA;EACA;AAugIF,CApgIA;EACE;EACA;AAugIF,CArgIE;EACE;EACA;EACA;EACA;EACA;EACA;AAugIJ,CArgIE;EACE;EACA;EACA;EACA;AAugIJ,CArgIE;EACE;AAugIJ,CAngIA;EACE;EACA;AAsgIF,CAngIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAsgIF,CAngIA;EACE;EACA;AAsgIF,CAngIA;EACE;EACA;EACA;EACA;EACA;AAsgIF,CAngIA;EACE;EACA;AAsgIF,CAlgIE;EACE;EACA;EACA;EACA;AAqgIJ,CAngIE;EACE;EACA;EACA;AAqgIJ,CAngIE;EACE;EACA;AAqgIJ,CApgII;EACE;AAsgIN,CAjgIA;EACE;AAogIF,CAjgIA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAogIF,CAjgIA;EACE;EACA;AAogIF,CAjgIA;EACE;EACA;EACA;EAGA;AAogIF,CAjgIA;EACE;EACA;AAogIF,CAjgIA;EACE;EACA;EACA;AAogIF,CAjgIA;EACE;AAogIF,CA//HA;EAEI;IACE;EAigIJ;EA9/HE;IACE;EAggIJ;EA9/HE;IAEE;EA+/HJ;AACF,CAz/HA;EACE;AA2/HF,CAx/HA;EACE;EACA;EACA;AA2/HF,C;;;;AwEnnJA,oBAAoB;;AAEpB;;;;;;;;;;CAUC,kBAAkB;CAClB,OAAO;CACP,MAAM;CACN;;AACD;CACC,gBAAgB;CAChB;;AACD;;;CAGC,yBAAyB;IACtB,sBAAsB;SACjB,iBAAiB;GACvB,uBAAuB;CACzB;;AACD,mFAAmF;;AACnF;CACC,0CAA0C;CAC1C;;AACD,qEAAqE;;AACrE;CACC,aAAa;CACb,cAAc;CACd,6BAA6B;CAC7B;;AACD;;CAEC,cAAc;CACd;;AACD,gGAAgG;;AAChG,qFAAqF;;AACrF;;;;;CAKC,0BAA0B;CAC1B,2BAA2B;CAC3B;;AAED;CAEC,yBAAyB;CACzB;;AACD;CAEC,qDAAqD;CACrD,kBAAkB;CAClB,wBAAwB;AACzB;;AACA;CAEC,kBAAkB;AACnB;;AACA;CACC,wCAAwC;AACzC;;AACA;CACC,oDAAoD;AACrD;;AACA;CACC,eAAe;CACf,kBAAkB;CAClB;;AACD;CACC,mBAAmB;CACnB;;AACD;CACC,QAAQ;CACR,SAAS;CAEJ,sBAAsB;CAC3B,YAAY;CACZ;;AACD,uEAAuE;;AACvE;CACC,sBAAsB;CACtB;;AAED,wBAAwB,YAAY,EAAE;;AAEtC,wBAAwB,YAAY,EAAE;;AACtC,wBAAwB,YAAY,EAAE;;AACtC,wBAAwB,YAAY,EAAE;;AACtC,wBAAwB,YAAY,EAAE;;AACtC,0BAA0B,YAAY,EAAE;;AACxC,wBAAwB,YAAY,EAAE;;AAEtC,2BAA2B,YAAY,EAAE;;AACzC,2BAA2B,YAAY,EAAE;;AAEzC;CACC,UAAU;CACV,WAAW;CACX;;AACD;CACC,2BAA2B;CAC3B,qBAAqB;CACrB,kBAAkB;CAClB;;AAGD,wBAAwB;;AAExB;CACC,kBAAkB;CAClB,YAAY;CACZ,8BAA8B,EAAE,8BAA8B;CAC9D,oBAAoB;CACpB;;AACD;;CAEC,kBAAkB;CAClB,aAAa;CACb,oBAAoB;CACpB;;AACD;CACC,MAAM;CACN;;AACD;CACC,QAAQ;CACR;;AACD;CACC,SAAS;CACT;;AACD;CACC,OAAO;CACP;;AACD;CACC,WAAW;CACX,WAAW;CACX;;AACD;CACC,YAAY;CACZ;;AACD;CACC,gBAAgB;CAChB;;AACD;CACC,mBAAmB;CACnB;;AACD;CACC,iBAAiB;CACjB;;AACD;CACC,kBAAkB;CAClB;;AAGD,6BAA6B;;AAE7B;CACC,oBAAoB;CACpB;;AACD;CACC,UAAU;CAIF,+BAA+B;CACvC;;AACD;CACC,UAAU;CACV;;AACD;CAGS,qBAAqB;CAC7B;;AACD;CACC,sBAAsB;CACtB;;AACD;CAIS,4DAA4D;CACpE;;AACD;;CAKS,gBAAgB;CACxB;;AAED;CACC,kBAAkB;CAClB;;AAGD,YAAY;;AAEZ;CACC,eAAe;CACf;;AACD;CAEC,oBAAoB;CACpB;;AACD;;CAEC,iBAAiB;CACjB;;AACD;;CAEC,YAAY;CACZ;;AACD;;;CAGC,YAAY;CAEZ,wBAAwB;CACxB;;AAED,oCAAoC;;AACpC;;;;;CAKC,oBAAoB;CACpB;;AAED;;;CAGC,8BAA8B,EAAE,8BAA8B;CAC9D,oBAAoB;CACpB;;AAED,kBAAkB;;AAElB;CACC,gBAAgB;CAChB,UAAU;CACV;;AACD;CACC,cAAc;CACd;;AACD;CACC,yBAAyB;CACzB;;AACD;CACC,uBAAuB;CACvB,iCAAiC;CACjC;;AAGD,uBAAuB;;AACvB;CACC,6DAA6D;CAC7D;;AAGD,2BAA2B;;AAE3B;CACC,sCAAsC;CACtC,kBAAkB;CAClB;;AACD;;CAEC,sBAAsB;CACtB,6BAA6B;CAC7B,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB,cAAc;CACd,kBAAkB;CAClB,qBAAqB;CACrB,YAAY;CACZ;;AACD;;CAEC,4BAA4B;CAC5B,4BAA4B;CAC5B,cAAc;CACd;;AACD;CACC,yBAAyB;CACzB;;AACD;CACC,2BAA2B;CAC3B,4BAA4B;CAC5B;;AACD;CACC,8BAA8B;CAC9B,+BAA+B;CAC/B,mBAAmB;CACnB;;AACD;CACC,eAAe;CACf,yBAAyB;CACzB,WAAW;CACX;;AAED;CACC,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB;;AACD;CACC,2BAA2B;CAC3B,4BAA4B;CAC5B;;AACD;CACC,8BAA8B;CAC9B,+BAA+B;CAC/B;;AAED,iBAAiB;;AAEjB;;CAEC,mDAAmD;CACnD,gBAAgB;CAChB;;AAED;CACC,eAAe;CACf;;AAGD,mBAAmB;;AAEnB;CACC,qCAAqC;CACrC,gBAAgB;CAChB,kBAAkB;CAClB;;AACD;CACC,mCAAwC;CACxC,WAAW;CACX,YAAY;CACZ;;AACD;CACC,sCAA2C;CAC3C,0BAA0B;CAC1B;;AACD;CACC,WAAW;CACX,YAAY;CACZ;;AACD;;CAEC,aAAa;CACb;;AACD;CACC,cAAc;CACd,kBAAkB;CAClB;;AACD;CACC,yBAAyB;CACzB,WAAW;CACX,gBAAgB;CAChB;;AACD;CACC,kBAAkB;CAClB,kBAAkB;CAClB,kBAAkB;CAClB;;AACD;CACC,eAAe;CACf,kBAAkB;CAClB,QAAQ;CACR;;AACD;CACC,cAAc;CACd;;AACD;CACC,SAAS;CACT,0BAA0B;CAC1B,0BAA0B;CAC1B;;AAED,sBAAsB;;AACtB;CACC,wCAA6C;CAC7C;;AAGD,mCAAmC;;AAEnC;CACC,gBAAgB;CAChB,oCAAoC;CACpC,SAAS;CACT;;AACD;;CAEC,cAAc;CACd,WAAW;CACX;;AACD;CACC,qBAAqB;CACrB;;AACD;CACC,0BAA0B;CAC1B;;AACD;;CAEC,eAAe;CACf;;AACD;CACC,gBAAgB;CAChB;;AACD;CACC,kBAAkB;CAClB;;AACD;CACC,sBAAsB;CACtB,gBAAgB;CAChB,gBAAgB;CAChB,oBAAoB;CACpB,eAAe;CACf,mBAAmB;CACnB,gBAAgB;CAEX,sBAAsB;;CAE3B,gBAAgB;CAChB,oCAAoC;CACpC;;AACD;CACC,0BAA0B;CAC1B,mBAAmB;CACnB,gBAAgB;CAChB;;AACD;CACC,6BAA6B;CAC7B;;AAED;;;CAGC,gBAAgB;CAChB;;AACD;;CAEC,iCAAiC;CACjC,4BAA4B;CAC5B;;AAGD,UAAU;;AAEV;CACC,kBAAkB;CAClB,kBAAkB;CAClB,mBAAmB;CACnB;;AACD;CACC,YAAY;CACZ,gBAAgB;CAChB,mBAAmB;CACnB;;AACD;CACC,iBAAiB;CACjB,gBAAgB;CAChB;;AACD;CACC,cAAc;CACd;;AACD;CACC,WAAW;CACX,YAAY;CACZ,kBAAkB;CAClB,SAAS;CACT,kBAAkB;CAClB,gBAAgB;CAChB,oBAAoB;CACpB;;AACD;CACC,WAAW;CACX,YAAY;CACZ,YAAY;;CAEZ,oBAAoB;CAMZ,wBAAwB;CAChC;;AACD;;CAEC,iBAAiB;CACjB,WAAW;CACX,sCAAsC;CACtC;;AACD;CACC,kBAAkB;CAClB,MAAM;CACN,QAAQ;CACR,oBAAoB;CACpB,YAAY;CACZ,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,2CAA2C;CAC3C,cAAc;CACd,qBAAqB;CACrB,iBAAiB;CACjB,uBAAuB;CACvB;;AACD;CACC,WAAW;CACX;;AACD;CACC,cAAc;CACd,6BAA6B;CAC7B,0BAA0B;CAC1B;;AAED;CACC,OAAO;CACP;;AACD;CACC,WAAW;CACX,cAAc;;CAEd,uHAAuH;CACvH,iHAAiH;CACjH;;AACD;CACC,gBAAgB;CAChB;;AAED;;;;CAIC,sBAAsB;CACtB;;AAGD,aAAa;;AAEb;CACC,gBAAgB;CAChB,sBAAsB;CACtB;;AAGD,YAAY;;AACZ,mDAAmD;;AACnD;CACC,kBAAkB;CAClB,YAAY;CACZ,sBAAsB;CACtB,sBAAsB;CACtB,kBAAkB;CAClB,WAAW;CACX,mBAAmB;CACnB,yBAAyB;CACzB,sBAAsB;CAEtB,iBAAiB;CACjB,oBAAoB;CACpB,qCAAqC;CACrC;;AACD;CACC,eAAe;CACf,oBAAoB;CACpB;;AACD;;;;CAIC,kBAAkB;CAClB,oBAAoB;CACpB,6BAA6B;CAC7B,uBAAuB;CACvB,WAAW;CACX;;AAED,eAAe;;AAEf;CACC,eAAe;AAChB;;AACA;CACC,gBAAgB;AACjB;;AACA;;CAEC,SAAS;CACT,iBAAiB;CACjB;;AACD;CACC,SAAS;CACT,oBAAoB;CACpB,sBAAsB;CACtB;;AACD;CACC,MAAM;CACN,iBAAiB;CACjB,iBAAiB;CACjB,yBAAyB;CACzB;;AACD;CACC,iBAAiB;AAClB;;AACA;CACC,gBAAgB;AACjB;;AACA;;CAEC,QAAQ;CACR,gBAAgB;CAChB;;AACD;CACC,QAAQ;CACR,mBAAmB;CACnB,uBAAuB;CACvB;;AACD;CACC,OAAO;CACP,kBAAkB;CAClB,wBAAwB;CACxB","sources":["./node_modules/ng-pick-datetime/assets/style/picker.min.css","./node_modules/@angular/material/badge/_badge-theme.scss","./src/styles/main.scss","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@angular/material/form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/input/_input-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_focus-indicators.scss","./node_modules/@angular/material/core/_core.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/styles/_variables.scss","./src/styles/_base.scss","./src/styles/component/_list.scss","./src/styles/component/_message-dialog.scss","./src/styles/component/_comments-table.scss","./src/styles/component/_side-panel.scss","./src/styles/component/_search-bar.scss","./src/styles/component/_filters.scss","./src/styles/component/_sort.scss","./src/styles/component/_unauthorized-page.scss","./src/styles/_smk.scss","./node_modules/lightgallery/scss/_lg-fonts.scss","./node_modules/lightgallery/scss/_lg-theme-default.scss","./node_modules/lightgallery/scss/_lg-variables.scss","./node_modules/lightgallery/scss/_lg-mixins.scss","./node_modules/lightgallery/scss/lightgallery-core.scss","./node_modules/leaflet/dist/leaflet.css"],"sourcesContent":[".cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;z-index:1000;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);-o-transition:opacity .4s cubic-bezier(.25,.8,.25,1);-moz-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.288)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.owl-dialog-container{position:relative;pointer-events:auto;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;padding:1.5em;-webkit-box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);-moz-box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);-moz-border-radius:2px;border-radius:2px;overflow:auto;background:#fff;color:rgba(0,0,0,.87);width:100%;height:100%;outline:0}.owl-dt-container,.owl-dt-container *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.owl-dt-container{display:block;font-size:16px;font-size:1rem;background:#fff;pointer-events:auto;z-index:1000}.owl-dt-container-row{border-bottom:1px solid rgba(0,0,0,.12)}.owl-dt-container-row:last-child{border-bottom:none}.owl-dt-calendar{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.owl-dt-calendar-control{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;font-size:1em;width:100%;padding:.5em;color:#000}.owl-dt-calendar-control .owl-dt-calendar-control-content{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.owl-dt-calendar-control .owl-dt-calendar-control-content .owl-dt-calendar-control-button{padding:0 .8em}.owl-dt-calendar-control .owl-dt-calendar-control-content .owl-dt-calendar-control-button:hover{background-color:rgba(0,0,0,.12)}.owl-dt-calendar-main{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5em .5em;outline:0}.owl-dt-calendar-view{display:block;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.owl-dt-calendar-multi-year-view{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.owl-dt-calendar-multi-year-view .owl-dt-calendar-table{width:-webkit-calc(100% - 3em);width:-moz-calc(100% - 3em);width:calc(100% - 3em)}.owl-dt-calendar-multi-year-view .owl-dt-calendar-table .owl-dt-calendar-header th{padding-bottom:.25em}.owl-dt-calendar-table{width:100%;border-collapse:collapse;border-spacing:0}.owl-dt-calendar-table .owl-dt-calendar-header{color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-weekdays th{font-size:.7em;font-weight:400;text-align:center;padding-bottom:1em}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-calendar-table-divider{position:relative;height:1px;padding-bottom:.5em}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-calendar-table-divider:after{content:'';position:absolute;top:0;left:-.5em;right:-.5em;height:1px;background:rgba(0,0,0,.12)}.owl-dt-calendar-table .owl-dt-calendar-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;color:rgba(0,0,0,.85);-webkit-appearance:none;-webkit-tap-highlight-color:transparent;-webkit-tap-highlight-color:transparent}.owl-dt-calendar-table .owl-dt-calendar-cell-content{position:absolute;top:5%;left:5%;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;width:90%;height:90%;font-size:.8em;line-height:1;border:1px solid transparent;-moz-border-radius:999px;border-radius:999px;color:inherit;cursor:pointer}.owl-dt-calendar-table .owl-dt-calendar-cell-out{opacity:.2}.owl-dt-calendar-table .owl-dt-calendar-cell-today:not(.owl-dt-calendar-cell-selected){border-color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-cell-selected{color:rgba(255,255,255,.85);background-color:#3f51b5}.owl-dt-calendar-table .owl-dt-calendar-cell-selected.owl-dt-calendar-cell-today{-webkit-box-shadow:inset 0 0 0 1px rgba(255,255,255,.85);-moz-box-shadow:inset 0 0 0 1px rgba(255,255,255,.85);box-shadow:inset 0 0 0 1px rgba(255,255,255,.85)}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled{cursor:default}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected){color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-content.owl-dt-calendar-cell-selected{opacity:.4}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-today:not(.owl-dt-calendar-cell-selected){border-color:rgba(0,0,0,.2)}.owl-dt-calendar-table .owl-dt-calendar-cell-active:focus>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected),.owl-dt-calendar-table :not(.owl-dt-calendar-cell-disabled):hover>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected){background-color:rgba(0,0,0,.04)}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range{background:rgba(63,81,181,.2)}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range.owl-dt-calendar-cell-range-from{-moz-border-radius-topleft:999px;border-top-left-radius:999px;-moz-border-radius-bottomleft:999px;border-bottom-left-radius:999px}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range.owl-dt-calendar-cell-range-to{-moz-border-radius-topright:999px;border-top-right-radius:999px;-moz-border-radius-bottomright:999px;border-bottom-right-radius:999px}.owl-dt-timer{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;height:7em;padding:.5em;outline:0}.owl-dt-timer-box{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:25%;height:100%}.owl-dt-timer-content{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:100%;margin:.2em 0}.owl-dt-timer-content .owl-dt-timer-input{display:block;width:2em;text-align:center;border:1px solid rgba(0,0,0,.5);-moz-border-radius:3px;border-radius:3px;outline:medium none;font-size:1.2em;padding:.2em}.owl-dt-timer-divider{display:inline-block;-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end;position:absolute;width:.6em;height:100%;left:-.3em}.owl-dt-timer-divider:after,.owl-dt-timer-divider:before{content:'';display:inline-block;width:.35em;height:.35em;position:absolute;left:50%;-moz-border-radius:50%;border-radius:50%;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);background-color:currentColor}.owl-dt-timer-divider:before{top:35%}.owl-dt-timer-divider:after{bottom:35%}.owl-dt-control-button{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;margin:0;padding:0;background-color:transparent;font-size:1em;color:inherit}.owl-dt-control-button .owl-dt-control-button-content{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;outline:0}.owl-dt-control-period-button .owl-dt-control-button-content{height:1.5em;padding:0 .5em;-moz-border-radius:3px;border-radius:3px;-webkit-transition:background-color .1s linear;-o-transition:background-color .1s linear;-moz-transition:background-color .1s linear;transition:background-color .1s linear}.owl-dt-control-period-button:hover>.owl-dt-control-button-content{background-color:rgba(0,0,0,.12)}.owl-dt-control-period-button .owl-dt-control-button-arrow{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:1em;height:1em;margin:.1em;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;-o-transition:transform .2s ease;-moz-transition:transform .2s ease,-moz-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease,-moz-transform .2s ease}.owl-dt-control-arrow-button .owl-dt-control-button-content{padding:0;-moz-border-radius:50%;border-radius:50%;width:1.5em;height:1.5em}.owl-dt-control-arrow-button[disabled]{color:rgba(0,0,0,.4);cursor:default}.owl-dt-control-arrow-button svg{width:50%;height:50%;fill:currentColor}.owl-dt-inline-container,.owl-dt-popup-container{position:relative;width:18.5em;-webkit-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);-moz-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.owl-dt-inline-container .owl-dt-calendar,.owl-dt-inline-container .owl-dt-timer,.owl-dt-popup-container .owl-dt-calendar,.owl-dt-popup-container .owl-dt-timer{width:100%}.owl-dt-inline-container .owl-dt-calendar,.owl-dt-popup-container .owl-dt-calendar{height:20.25em}.owl-dt-dialog-container{max-height:95vh;margin:-1.5em}.owl-dt-dialog-container .owl-dt-calendar{min-width:250px;min-height:330px;max-width:750px;max-height:750px}.owl-dt-dialog-container .owl-dt-timer{min-width:250px;max-width:750px}@media all and (orientation:landscape){.owl-dt-dialog-container .owl-dt-calendar{width:58vh;height:62vh}.owl-dt-dialog-container .owl-dt-timer{width:58vh}}@media all and (orientation:portrait){.owl-dt-dialog-container .owl-dt-calendar{width:80vw;height:80vw}.owl-dt-dialog-container .owl-dt-timer{width:80vw}}.owl-dt-container-buttons{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;height:2em;color:#3f51b5}.owl-dt-container-control-button{font-size:1em;width:50%;height:100%;-moz-border-radius:0;border-radius:0}.owl-dt-container-control-button .owl-dt-control-button-content{height:100%;width:100%;-webkit-transition:background-color .1s linear;-o-transition:background-color .1s linear;-moz-transition:background-color .1s linear;transition:background-color .1s linear}.owl-dt-container-control-button:hover .owl-dt-control-button-content{background-color:rgba(0,0,0,.1)}.owl-dt-container-info{padding:0 .5em;cursor:pointer;-webkit-tap-highlight-color:transparent}.owl-dt-container-info .owl-dt-container-range{outline:0}.owl-dt-container-info .owl-dt-container-range .owl-dt-container-range-content{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:.5em 0;font-size:.8em}.owl-dt-container-info .owl-dt-container-range:last-child{border-top:1px solid rgba(0,0,0,.12)}.owl-dt-container-info .owl-dt-container-info-active{color:#3f51b5}.owl-dt-container-disabled,.owl-dt-trigger-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none;cursor:default!important}.owl-dt-timer-hour12{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;color:#3f51b5}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box{border:1px solid currentColor;-moz-border-radius:2px;border-radius:2px;-webkit-transition:background .2s ease;-o-transition:background .2s ease;-moz-transition:background .2s ease;transition:background .2s ease}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box .owl-dt-control-button-content{width:100%;height:100%;padding:.5em}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box:focus .owl-dt-control-button-content,.owl-dt-timer-hour12 .owl-dt-timer-hour12-box:hover .owl-dt-control-button-content{background:#3f51b5;color:#fff}.owl-dt-calendar-only-current-month .owl-dt-calendar-cell-out{visibility:hidden;cursor:default}.owl-dt-inline{display:inline-block}.owl-dt-control{outline:0;cursor:pointer}.owl-dt-control .owl-dt-control-content{outline:0}.owl-dt-control:focus>.owl-dt-control-content{background-color:rgba(0,0,0,.12)}.owl-dt-control:not(:-moz-focusring):focus>.owl-dt-control-content{-moz-box-shadow:none;box-shadow:none}.owl-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../../cdk/a11y';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include a11y.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@import \"~ng-pick-datetime/assets/style/picker.min.css\";\r\n@import 'material';\r\n@import 'variables';\r\n@import 'base';\r\n@import 'component/landing-page';\r\n@import 'component/list';\r\n@import 'component/message-dialog';\r\n@import 'component/comments-table';\r\n@import 'component/side-panel';\r\n@import 'component/search-bar';\r\n@import 'component/filters';\r\n@import 'component/sort';\r\n@import 'component/unauthorized-page';\r\n@import 'smk';\r\n@import '~lightgallery/scss/lightgallery';\r\n\r\n\r\n.snackbar-error{\r\n   background-color: $colour-errors;\r\n   color: $colour-white;\r\n   font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n   font-size: 14px;\r\n   max-width: 80vw !important;\r\n   word-break: break-word;\r\n }\r\n\r\n.columns-menu{\r\n  display: flex;\r\n  flex: 0 0 auto;\r\n  div.mat-form-field-wrapper {\r\n    padding-bottom: 0;\r\n\r\n    div.mat-form-field-underline {\r\n      display: none;\r\n    }\r\n\r\n    div.mat-form-field-infix {\r\n      width: 50px;\r\n      border-top: 0;\r\n      padding: 0;\r\n\r\n      mat-select,\r\n      input{\r\n        width: 100%;\r\n      }\r\n\r\n      .mat-select-arrow-wrapper{\r\n        visibility: hidden;\r\n      }\r\n    }\r\n\r\n    span {\r\n      font-size: small;\r\n      top: -.35rem;\r\n    }\r\n  }\r\n}\r\n\r\n.display-columns-selector.mat-select-panel{\r\n  max-height: unset;\r\n\r\n  .mat-option{\r\n    height: 22px;\r\n    font-size: small;\r\n    padding: 10px;\r\n  }\r\n\r\n  button{\r\n    margin: 10px;\r\n    padding: 10px;\r\n    font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n    font-size: 14px;\r\n    border-radius: 5px;\r\n    border: solid 1px darkgrey;\r\n    background-color: lightgray;\r\n  }\r\n}\r\n\r\n#core-interface-container {\r\n  font-family: $font-family-main;\r\n\r\n  .mat-paginator-container {\r\n    justify-content: center;\r\n    font-size: $font-size;\r\n  }\r\n\r\n}\r\n\r\n.owl-dt-popup-container{\r\n  font-family: $font-family-main;\r\n}\r\n\r\n//.mat-snack-bar-container{\r\n//  position: relative;\r\n//  top: 60px;\r\n//}\r\n\r\n// .snackbar-error {\r\n//   background-color: rgba(246, 189, 189, 1);\r\n//   color: $colour-black;\r\n//   position: inherit;\r\n\r\n//   .mat-simple-snackbar{\r\n//     font-family: $font-family-main;\r\n//     font-size: 13px;\r\n//   }\r\n//   .mat-simple-snackbar-action{\r\n//     color: $colour-errors;\r\n//   }\r\n// }\r\n\r\n.snackbar-warning {\r\n  background-color: rgba(244, 230, 195, 1);\r\n  color: $colour-black;\r\n  position: inherit;\r\n  .mat-simple-snackbar{\r\n    font-family: $font-family-main;\r\n    font-size: 13px;\r\n  }\r\n  .mat-simple-snackbar-action{\r\n    color: #f1780e;\r\n  }\r\n}\r\n\r\n.snackbar-success {\r\n  background-color: #2e703e;\r\n  color: $colour-white;\r\n  position: inherit;\r\n  .mat-simple-snackbar{\r\n    font-family: $font-family-main;\r\n    font-size: 13px;\r\n  }\r\n  .mat-button-wrapper{\r\n    color:$colour-white;\r\n  }\r\n}\r\n\r\n.snackbar-success-v2 {\r\n  background-color: $colour-success;\r\n  color: $colour-white;\r\n  position: inherit;\r\n  padding: 18px 16px!important;\r\n  .mat-simple-snackbar{\r\n    font-family: $font-family-main;\r\n    font-size: 13px;\r\n  }\r\n  .mat-button-wrapper{\r\n    color:$colour-white;\r\n  }\r\n  .mat-simple-snackbar-action{\r\n    border: 1px solid white;\r\n    border-radius: 5px;\r\n  }\r\n}\r\n\r\n\r\n.snackbar-success-v2:before {\r\n  content: '';\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 60px;\r\n  background-color: white;\r\n  top: 0;\r\n  left: -55px;\r\n  color: #2E7940;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z' fill='%232e7940'/%3E%3C/svg%3E\");\r\n  background-size: 24px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  border-top-left-radius: 4px;\r\n  border-bottom-left-radius: 4px;\r\n}\r\n\r\n.snackbar-info {\r\n  background-color: $colour-info-grey;\r\n  color: $colour-white;\r\n  position: inherit;\r\n  padding: 18px 16px!important;\r\n  .mat-simple-snackbar{\r\n    font-family: $font-family-main;\r\n    font-size: 13px;\r\n  }\r\n  .mat-button-wrapper{\r\n    color:$colour-white;\r\n  }\r\n  .mat-simple-snackbar-action{\r\n    border: 1px solid white;\r\n    border-radius: 5px;\r\n  }\r\n}\r\n\r\n\r\n.snackbar-info:before {\r\n  content: '';\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 60px;\r\n  background-color: white;\r\n  top: 0;\r\n  left: -55px;\r\n  color: $colour-info-grey;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='%2337464F'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z'/%3E%3C/svg%3E\");\r\n  background-size: 24px;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  border-top-left-radius: 4px;\r\n  border-bottom-left-radius: 4px;\r\n}\r\n\r\n.full-snack-bar-online{\r\n  //width: 100%;\r\n  //background-color: rgba(149, 206, 170, 1);\r\n  //color: $colour-black;\r\n  //max-width: calc(var(--vw, 1vw) * 80) !important;\r\n  //word-break: break-word;\r\n  //\r\n  //.mat-simple-snackbar{\r\n  //  font-family: $font-family-main;\r\n  //  font-size: 13px;\r\n  //}\r\n  .mat-simple-snackbar-action{\r\n    color: #acdbac;\r\n  }\r\n}\r\n\r\n.full-snack-bar-offline{\r\n  background-color: $colour-errors;\r\n  color: $colour-white;\r\n  font-family: $font-family-main;\r\n  font-size: 13px;\r\n  max-width: calc(var(--vw, 1vw) * 80) !important;\r\n  word-break: break-word;\r\n}\r\n\r\n//.mat-tab-body{\r\n//  position: relative !important;\r\n//  overflow-x: hidden !important;\r\n//  overflow-y: auto !important;\r\n//  z-index: 1 !important;\r\n//  flex-grow: 1 !important;\r\n//}\r\n\r\n@media print {\r\n\r\n  mat-table,\r\n  tr,\r\n  mat-sidenav-content{\r\n    width: 750px !important;\r\n  }\r\n  mat-table{\r\n    display: block;\r\n  }\r\n\r\n  .mat-table .mat-cell,\r\n  .mat-table .mat-header-cell{\r\n    padding: 0 !important;\r\n  }\r\n\r\n  .nav-menu-button fa-icon,\r\n  mat-tab-header,\r\n  .review-item-header .header-icons,\r\n  td.select-cell,\r\n  .bottom-toolbar,\r\n  wf1-search-bar,\r\n  wf1-filters,\r\n  wf1-public-application-header,\r\n  wf1-application-header{\r\n    display: none !important;\r\n  }\r\n\r\n  #core-interface-container .mat-header-cell,\r\n  .review-item .mat-expansion-panel-content .fixed-table-layout td,\r\n  mat-expansion-panel .review-item-header .review-item-status,\r\n  mat-expansion-panel .review-item-header mat-panel-description.mat-expansion-panel-header-description{\r\n    font-size: 10px !important;\r\n  }\r\n\r\n  .cdk-overlay-pane{\r\n    display: none;\r\n  }\r\n\r\n  //mat-expansion-panel{\r\n  //  page-break-inside: avoid;\r\n  //}\r\n}\r\n\r\n.float-right{\r\n  float: right;\r\n}\r\n\r\n.padding-right{\r\n  padding-right: 16px;\r\n}\r\n\r\n.wfone-base-container .table-wrapper .options-bar-header{\r\n  >div.label{\r\n    padding-bottom: 10px;\r\n    padding-top: 10px;\r\n    padding-left: 0;\r\n  }\r\n  select,\r\n  input {\r\n    border-radius: 5px;\r\n    border: solid 1px grey;\r\n  }\r\n\r\n  >div{\r\n    padding: 0 10px;\r\n    display: inline-block;\r\n\r\n    .select{\r\n      width: auto;\r\n\r\n      .select-value{\r\n        min-width: 150px;\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n.display-columns-selector.select-panel{\r\n  max-height: unset;\r\n\r\n  .option{\r\n    height: 30px;\r\n    font-family: $font-family-main;\r\n    font-size: $font-size;\r\n    padding: 10px;\r\n  }\r\n\r\n  button{\r\n    margin: 10px;\r\n    padding: 10px;\r\n    font-family: $font-family-main;\r\n    font-size: $font-size;\r\n    border-radius: 5px;\r\n    border: solid 1px grey;\r\n    background-color: $colour-lighter-grey;\r\n  }\r\n}\r\n\r\n.mat-accordion {\r\n  &>wfone-base-expansion-panel .mat-expansion-panel-spacing:last-child,\r\n  &>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing {\r\n    margin-bottom: var(--wf1-gutter-space) !important;\r\n  }\r\n\r\n  mat-expansion-panel:not(.mat-expanded),\r\n  mat-expansion-panel.mat-expansion-panel-spacing {\r\n    margin: var(--wf1-gutter-space) var(--wf1-gutter-space);\r\n\r\n    .mat-expansion-panel-header {\r\n      padding-left: var(--wf1-gutter-space);\r\n      padding-right: var(--wf1-gutter-space);\r\n      height: unset !important;\r\n      min-height: 50px !important;\r\n      border-bottom: 1px solid $colour-light-grey;\r\n      border-bottom-left-radius: 0;\r\n      border-bottom-right-radius: 0;\r\n      font-family: $font-family-main;\r\n\r\n      .expansion-header{\r\n        align-items: center;\r\n        padding: 5px 0;\r\n      }\r\n\r\n      mat-panel-description{\r\n        flex-grow: unset;\r\n        margin-right: 5px;\r\n        margin-left: -5px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n      }\r\n\r\n      &[aria-disabled=true]{\r\n        color: unset;\r\n      }\r\n\r\n      h1{\r\n        padding: 0;\r\n        margin: 0;\r\n      }\r\n\r\n    }\r\n\r\n    .mat-expansion-panel-content{\r\n      font-family: $font-family-main;\r\n      .mat-expansion-panel-body{\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .wf1-expansion-panel-body {\r\n      padding: 0 var(--wf1-gutter-space) var(--wf1-gutter-space);\r\n      font-size: $font-size;\r\n      font-family: $font-family-main;\r\n\r\n      .expansion-header-sub{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n\r\n        h3{\r\n          margin-bottom: 0;\r\n        }\r\n      }\r\n\r\n      .table-wrapper{\r\n        margin: var(--wf1-gutter-space) 0;\r\n        width: 100%;\r\n      }\r\n\r\n      .summary-card{\r\n        margin: var(--wf1-gutter-space) 0 0 0;\r\n      }\r\n\r\n      mat-card.mat-card.wf1-vendor-portal-header-bar {\r\n        padding: 0;\r\n      }\r\n\r\n      mat-expansion-panel.mat-expansion-panel-spacing{\r\n        margin: var(--wf1-gutter-space) 0 0 0;\r\n      }\r\n\r\n      .card-wrapper{\r\n        margin: 0;\r\n      }\r\n    }\r\n\r\n    .mat-tab-body{\r\n      .table-wrapper{\r\n        margin: var(--wf1-gutter-space);\r\n        width: calc(100% - 2*var(--wf1-gutter-space));\r\n      }\r\n    }\r\n\r\n    .mat-action-row {\r\n      border-bottom: 1px solid $colour-lighter-grey;\r\n      padding: var(--wf1-gutter-space);\r\n      background-color: $colour-lighter-grey;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  .mat-expansion-panel-spacing:last-child, .mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing {\r\n    margin-bottom: var(--wf1-gutter-space);\r\n  }\r\n}\r\n\r\n.smk-popup {\r\n  font-family: 'BCSans', 'Noto Sans', Verdana, Arial, sans-serif;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.popup-header {\r\n  border-bottom: 1px solid #1a5a96;\r\n  color: #1a5a96;\r\n  font-weight: 700;\r\n  font-size: 14px;\r\n  padding: 5px;\r\n}\r\n\r\n.popup-title {\r\n  color: black;\r\n  font-size: 16px;\r\n  padding: 5px;\r\n}\r\n\r\n.title-label {\r\n  position: absolute;\r\n  margin-top: 2px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.popup-attributes {\r\n  display: flex;\r\n  padding-left: 5px;\r\n\r\n  .label {\r\n    margin-right: auto;\r\n    font-size: 11px;\r\n    color: #71757C;\r\n    letter-spacing: 1.5px;\r\n    text-transform: uppercase;\r\n    width: 40%;\r\n  }\r\n  .attribute {\r\n    margin-left: auto;\r\n    font-size: 14px;\r\n    color: black;\r\n    width: 60%;\r\n  }\r\n  .attribute-red {\r\n    color: #B60000;\r\n  }\r\n}\r\n\r\n.popup-button-container {\r\n  margin-top: 10px;\r\n  margin-left: 5px;\r\n}\r\n\r\n.popup-button {\r\n  padding-left: 6px;\r\n  padding-right: 6px;\r\n  border: 1px solid #1e5d98;\r\n  border-radius: 5px;\r\n  color: #1e5d98;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  transition: 0.3s;\r\n}\r\n\r\n.popup-button:hover {\r\n  border: 1px solid #1e5d98;\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.smk-position {\r\n  white-space: nowrap;\r\n  display: inline-block;\r\n  font-weight: 700;\r\n  margin: 0 5px;\r\n  font-size: 14px;\r\n}\r\n\r\n.mat-dialog-container {\r\n  padding: 0px 0px 24px 0px !important;\r\n  overflow: hidden !important;\r\n}\r\n\r\n.dialog-container {\r\n  h1 {\r\n    background-color: #003366;\r\n    color: white;\r\n    padding: 10px;\r\n    font-size: 20px;\r\n  }\r\n  .dialog-content {\r\n    color: black;\r\n    background-color: white;\r\n    padding: 0px 32px 0px 32px;\r\n  }\r\n  .dialog-actions {\r\n    background-color: #eeeeee;\r\n    flex-flow: row-reverse;\r\n    button {\r\n      margin-right: 7px;\r\n    }\r\n  }\r\n}\r\n\r\n.lg-fullscreen:after {\r\n  content: \"\\e20c\";\r\n}\r\n\r\n.property-list {\r\n  z-index: 2000;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 350px;\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  outline: 0;\r\n  min-height: inherit;\r\n  max-height: inherit;\r\n  background: #fff;\r\n  color: rgba(0,0,0,.87);\r\n}\r\n\r\n.lg-toolbar .lg-icon {\r\n  color: #fff!important;\r\n  font-size: 36px !important;\r\n}\r\n\r\n.lg-outer .lg-thumb-item.active, .lg-outer .lg-thumb-item:hover {\r\n  border-color:white !important;\r\n  border-radius: 4px !important;\r\n  border: 2px solid #fff !important;\r\n  -webkit-transition: border-color 0.25s ease;\r\n  -o-transition: border-color 0.25s ease;\r\n  transition: border-color 0.25s ease;\r\n}\r\n\r\n.lg-outer .lg-thumb-item {\r\n  border-radius: 0 !important;\r\n  border: 0 !important;\r\n}\r\n\r\n.property-list h2 {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.property-list h2 .close-button {\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n\r\n@media (min-width: 768px)and (max-width: 1023px) {\r\n  wf-menu-bar{\r\n    .nav-items .nav-item{\r\n      border: none!important;\r\n    }\r\n\r\n    .nav-items .nav-item span{\r\n      min-width: calc(25vw - 1px)!important\r\n    }\r\n    .nav-items .nav-item:not(:last-child){\r\n\r\n      border-right: 1px solid var(--wf-menu-bar-divider-color)!important;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nwf-admin-incident-desktop{\r\n  height: auto!important;\r\n}\r\n\r\n.preview-warning {\r\n  font-size: 10px;\r\n  color:red;\r\n  font-weight: 400;\r\n}","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n@function define-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, disabled);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../typography/typography-utils';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use '../../../cdk/a11y';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include a11y.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use '../style/layout-common';\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include layout-common.fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n\n    .cdk-high-contrast-active & {\n      display: none;\n    }\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // Stepper headers have the focus indicator as a descendant,\n  // because `::before` is used for other styling.\n  .mat-step-header:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n","@use '../../cdk/overlay';\n@use '../../cdk/a11y';\n@use '../../cdk/text-field';\n\n// Core styles that can be used to apply material design treatments to any element.\n@use './ripple/ripple';\n@use './focus-indicators/focus-indicators';\n@use './typography/all-typography';\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin core($typography-config: null) {\n  @include all-typography.all-component-typographies($typography-config);\n  @include ripple.ripple();\n  @include a11y.a11y-visually-hidden();\n  @include overlay.overlay();\n  @include text-field.text-field-autosize();\n  @include text-field.text-field-autofill();\n\n  @include focus-indicators.private-strong-focus-indicators-positioning();\n  @include _mdc-core();\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mdc-core() {\n  @include _mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n    &::after {\n      color: theming.get-color-from-palette($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: theming.get-color-from-palette(map.get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include ripple-theme.theme($theme);\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'variables';\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(meta.type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: $opacity) {\n  @if meta.type-of($zValue) != number or not math.is-unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map.get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map.get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation(\n    $zValue,\n    $color: $color,\n    $opacity: $opacity) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin standard-typography($config-or-theme) {}\n\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin private-color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","/**\r\n Colour Variables\r\n */\r\n$opacity-grey: rgba(0, 0, 0, 0.13);\r\n$opacity-dark-grey: rgba(0, 0, 0, 0.54);\r\n$background-color: $opacity-grey;\r\n$colour-info-grey: #37464F;\r\n$colour-dark-grey: #003366;\r\n$colour-medium-grey: #d7d7d7;\r\n$colour-light-grey: #a7a9ac;\r\n$colour-toolbar-grey: #bdbdbd;\r\n$colour-yellow: #e69f00;\r\n$colour-light-yellow: #f9ca81;\r\n$colour-lighter-yellow: #f9f9cd;\r\n$colour-black: #000000;\r\n$colour-red: #ff4545;\r\n$colour-green: #009e73;\r\n$colour-blue: #003366;\r\n$colour-white: #ffffff;\r\n$colour-errors: #f44336;\r\n$colour-warnings: orange;\r\n$colour-orange: #F59A23;\r\n$colour-lighter-grey: #f3f5f6;\r\n$opacity-light-grey: rgba(0, 0, 0, 0.06);\r\n$colour-light-orange: #FFD3A0;\r\n\r\n\r\n\r\n\r\n$colour-toolbar-background: rgb(192, 198, 202);\r\n\r\n$colour-incident-default: $colour-dark-grey;\r\n$colour-incident-out: $colour-light-grey;\r\n$colour-incident-being-held: $colour-yellow;\r\n$colour-incident-not-set: $colour-black;\r\n$colour-incident-out-of-control: $colour-red;\r\n$colour-incident-under-control: $colour-green;\r\n$colour-incident-interface: $colour-red;\r\n$colour-incident-non-interface: $colour-green;\r\n\r\n$colour-incident-with-status-active: $colour-green;\r\n$colour-incident-with-status-completed: $colour-light-grey;\r\n\r\n$colour-incident-agency-assist-active: $colour-green;\r\n$colour-incident-agency-assist-completed: $colour-light-grey;\r\n\r\n$colour-incident-field-activity-active: $colour-green;\r\n$colour-incident-field-activity-completed: $colour-light-grey;\r\n\r\n$colour-rof-default: $colour-dark-grey;\r\n$colour-rof-draft: $colour-light-grey;\r\n$colour-rof-general: $colour-blue;\r\n$colour-rof-interface: $colour-red;\r\n$colour-rof-campfire: $colour-yellow;\r\n$colour-rof-cigarette: $colour-black;\r\n\r\n$colour-sidebar-title: $colour-white;\r\n$colour-sidebar-title-background: $colour-medium-grey;\r\n$colour-sidebar-toolbar: $colour-black;\r\n$colour-sidebar-toolbar-background: $colour-toolbar-grey;\r\n$colour-sidebar-filter: $colour-dark-grey;\r\n$colour-sidebar-filter-background: $colour-white;\r\n\r\n$colour-header-background: #003366;\r\n\r\n$colour-success: #2E7940;\r\n$colour-button-primary: $colour-blue;\r\n\r\n\r\n/**\r\n Spacing Variables\r\n */\r\n\r\n// Standard measurements\r\n$wf1-app-header-height: 72px;\r\n$wf1-toolbar-height: 3rem;\r\n$wf1-sidebar-title-height: 2.75rem;\r\n$wf1-filter-toolbar-content-height: 12.5rem;\r\n$wf1-filter-toolbar-total-height: $wf1-toolbar-height + $wf1-filter-toolbar-content-height;\r\n\r\n// Side panel related measurements for sidebar interfaces\r\n$wf1-total-app-header-height: calc( #{ $wf1-app-header-height } + #{ $wf1-toolbar-height } );\r\n$wf1-header-plus-toolbar-total-height: $wf1-sidebar-title-height + $wf1-toolbar-height;\r\n$wf1-header-plus-toolbar-and-filter-total-height: $wf1-header-plus-toolbar-total-height + $wf1-toolbar-height;\r\n$wf1-header-plus-toolbar-and-filter-content-total-height: $wf1-header-plus-toolbar-total-height + $wf1-toolbar-height + $wf1-filter-toolbar-content-height;\r\n$wf1-app-map-panel-height: calc(100vh - #{$wf1-total-app-header-height});\r\n$wf1-app-side-panel-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-sidebar-title-height } );\r\n$wf1-app-side-panel-with-toolbar-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-header-plus-toolbar-total-height } );\r\n// TODO: Fix filter styling issue that requires .1rem to be added to below variables to hide vertical scrollbar.\r\n$wf1-app-side-panel-with-toolbar-and-filter-height: calc( 100vh - #{ $wf1-total-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-total-height } + .1rem );\r\n$wf1-app-side-panel-with-toolbar-and-filter-content-height: calc( 100vh - #{ $wf1-total-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-content-total-height } + .1rem);\r\n\r\n// Main panel related measurements for full screen interfaces. (No top-level toolbar)\r\n$wf1-app-main-panel-container-height: calc(100vh - $wf1-app-header-height);\r\n$wf1-app-main-panel-tab-panel-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-toolbar-height } - 1.1rem);\r\n// TODO: Fix filter styling issue that requires .1rem to be added to below variables to hide vertical scrollbar.\r\n// $wf1-app-main-panel-table-height: calc(100vh - #{$wf1-total-app-header-height + $wf1-toolbar-height});\r\n// $wf1-app-main-panel-table-with-filter-content-height: calc(100vh - #{$wf1-total-app-header-height + $wf1-toolbar-height + $wf1-filter-toolbar-content-height + .1rem});\r\n\r\n// Other measurements\r\n$wf1-app-header-mobile-height: 4rem;\r\n$wf1-app-map-mobile-height: calc(100vh - (7rem));\r\n$wf1-loading-screen-height: calc(100vh - (6rem));\r\n$max-component-width: 65rem;\r\n\r\n// Tables measurements\r\n$font-family-main: 'BCSans', 'Noto Sans', 'Verdana', 'Arial', 'sans-serif';\r\n$font-size: 15px;\r\n$colour-button-primary: $colour-blue;\r\n$colour-intermediate-action: $colour-success;\r\n$colour-table-background-odd: $colour-lighter-grey;\r\n$font-family-emphasis: 'BCSans', 'Noto Sans', 'Verdana', 'Arial', 'sans-serif';\r\n$font-size-small: 12px;\r\n$wf1-border-radius: 5px;\r\n$font-weight-emphasis: 400;\r\n$font-weight: 200;\r\n$colour-table-background-even: $colour-white;\r\n$colour-table-background-hover: $colour-medium-grey;\r\n\r\n\r\n","@import \"@angular/material/theming\";\r\n@import \"./variables\";\r\n\r\nbody {\r\n    margin: 0;\r\n    // min-height: 100vh;\r\n}\r\n\r\n.wf1-loading-screen {\r\n    height: $wf1-loading-screen-height;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\nbutton.mat-fab.mat-primary,\r\nbutton.mat-raised-button.mat-primary {\r\n  background-color: $colour-button-primary;\r\n  color: $colour-white;\r\n\r\n  &:not([disabled]).intermediate-action{\r\n    background-color: $colour-intermediate-action;\r\n  }\r\n}\r\n\r\nmat-toolbar.wf1-application-header.mat-primary {\r\n    background-color: $colour-header-background;\r\n    border-bottom: $colour-orange;\r\n    border-bottom-style: solid;\r\n    border-bottom-width: 2px;\r\n    height: $wf1-app-header-height;\r\n    padding-left: 2rem;\r\n    padding-right: 2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .bc-logo-div {\r\n        img { display: none; }\r\n\r\n        flex-shrink: 0;\r\n        background-image: url( '../assets/images/logo/bcwfservice-logo.png' );\r\n    \tbackground-size: auto 70px;\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        height: 70px;\r\n        width: 185px;\r\n    }\r\n\r\n    .app-logo-and-title-div {\r\n        flex-grow: 1;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: flex-end;\r\n\r\n        .mat-title {\r\n            font-size: 1.4rem;\r\n            color: $colour-white;\r\n            white-space: nowrap;\r\n            margin-left: 0.4rem;\r\n            margin-bottom: 0.575rem;\r\n        }\r\n    }\r\n\r\n    .system-and-user-info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        margin-right: 20px;\r\n\r\n        & > div {\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            align-items: center;\r\n\r\n            .header-caption-label {\r\n                width: 4rem;\r\n                align-self: flex-end;\r\n            }\r\n\r\n            .header-caption-text {\r\n                min-width: 8rem;\r\n                align-self: flex-start;\r\n            }\r\n        }\r\n    }\r\n\r\n    .header-caption-label,\r\n    .header-caption-text {\r\n        font-size: 0.75rem;\r\n        margin-bottom: 0.4rem;\r\n    }\r\n\r\n    .header-caption-label {\r\n        text-align: right;\r\n        color: #9db1bb;\r\n        margin-right: 0.5rem;\r\n    }\r\n}\r\n\r\nmat-toolbar.wf1-application-toolbar {\r\n    height: $wf1-toolbar-height;\r\n    .right-text {\r\n        margin-left: auto;\r\n        font-size: 0.75rem;\r\n        font-weight: normal;\r\n    }\r\n    .wf1-menu-button {\r\n        max-height: $wf1-toolbar-height;\r\n        min-width: 2rem;\r\n        min-height: 2rem;\r\n        padding: 0.5rem;\r\n\r\n        .mat-icon {\r\n            width: 2rem;\r\n            height: 2rem;\r\n            font-size: 2rem;\r\n        }\r\n\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    mat-button-toggle.mat-button-toggle,\r\n    mat-button-toggle.mat-button-toggle-checked {\r\n        max-height: $wf1-toolbar-height;\r\n        min-width: 2rem;\r\n        padding: 0;\r\n        box-shadow: none;\r\n        color: $colour-dark-grey;\r\n    }\r\n\r\n    .wf1-toolbar-spacer {\r\n        flex: 1 1 auto;\r\n    }\r\n}\r\n\r\n#core-interface-container {\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    mat-toolbar.wf1-application-header,\r\n    mat-toolbar.wf1-application-toolbar {\r\n        flex: 0 0 auto;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    mat-sidenav-container {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        align-items: stretch;\r\n\r\n        mat-sidenav {\r\n            width: 440px;\r\n            overflow-x: hidden;\r\n        }\r\n\r\n        mat-sidenav-content {\r\n            position: relative;\r\n            height: unset;\r\n            flex-grow: 1;\r\n\r\n            #side-nav-toggle {\r\n                width: 16px;\r\n                height: 40px;\r\n                background: #ff0000;\r\n                color: #ffffff;\r\n                position: absolute;\r\n                top: 1rem;\r\n                left: 0;\r\n                border-top-right-radius: 6px;\r\n                border-bottom-right-radius: 6px;\r\n                z-index: 500;\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                cursor: pointer;\r\n\r\n                mat-icon {\r\n                    font-size: 18px;\r\n                    line-height: 18px;\r\n                    height: 18px;\r\n                    width: 12px;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.wf1-application-icon {\r\n    position: relative;\r\n\r\n    &.wf1-icon-size-toolbar {\r\n        width: 2rem;\r\n        height: 2rem;\r\n\r\n        .wf1-cancelled-icon,\r\n        .wf1-assigned-to-incident-icon {\r\n            position: absolute;\r\n            top: -0.2rem;\r\n            left: -0.25rem;\r\n\r\n            .mat-icon {\r\n                font-size: 2.5rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.wf1-icon-size-list-small {\r\n        width: 2rem;\r\n        height: 2rem;\r\n\r\n        .wf1-cancelled-icon,\r\n        .wf1-assigned-to-incident-icon {\r\n            position: absolute;\r\n            top: -0.3rem;\r\n            left: -0.3rem;\r\n\r\n            .mat-icon {\r\n                font-size: 2.7rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    &.wf1-icon-size-list-large {\r\n        width: 3rem;\r\n        height: 3rem;\r\n\r\n        .wf1-cancelled-icon,\r\n        .wf1-assigned-to-incident-icon {\r\n            position: absolute;\r\n            top: -0.5rem;\r\n            left: -0.5rem;\r\n\r\n            .mat-icon {\r\n                font-size: 4rem;\r\n            }\r\n        }\r\n    }\r\n\r\n    .wf1-main-icon {\r\n        position: absolute;\r\n        top: 0;\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        z-index: 10;\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        .mat-icon {\r\n            width: 100%;\r\n            height: 100%;\r\n\r\n            svg {\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .wf1-halo-icon {\r\n        position: absolute;\r\n        top: 0;\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        z-index: 5;\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        .mat-icon {\r\n            width: 100%;\r\n            height: 100%;\r\n\r\n            svg {\r\n                color: $colour-white;\r\n                fill: $colour-white;\r\n                width: 100%;\r\n                height: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .wf1-icon-contained {\r\n        transform: scale(0.75);\r\n    }\r\n\r\n    .wf1-cancelled-icon,\r\n    .wf1-assigned-to-incident-icon {\r\n        display: block;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        z-index: 15;\r\n        width: 100%;\r\n    }\r\n\r\n    .wf1-cancelled-icon {\r\n        color: $colour-red;\r\n    }\r\n\r\n    .wf1-assigned-to-incident-icon {\r\n        color: $colour-green;\r\n    }\r\n\r\n    .wf1-icon-blink {\r\n        animation: blink-animation 1s infinite ease-in-out;\r\n    }\r\n    @keyframes blink-animation {\r\n        25% {\r\n            opacity: 1;\r\n        }\r\n        50% {\r\n            opacity: 0;\r\n        }\r\n        75% {\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-default {\r\n        svg {\r\n            color: $colour-incident-default;\r\n            fill: $colour-incident-default;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-out {\r\n        svg {\r\n            color: $colour-incident-out;\r\n            fill: $colour-incident-out;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-being-held {\r\n        svg {\r\n            color: $colour-incident-being-held;\r\n            fill: $colour-incident-being-held;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-not-set {\r\n        svg {\r\n            color: $colour-incident-not-set;\r\n            fill: $colour-incident-not-set;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-out-of-control {\r\n        svg {\r\n            color: $colour-incident-out-of-control;\r\n            fill: $colour-incident-out-of-control;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-icon-under-control {\r\n        svg {\r\n            color: $colour-incident-under-control;\r\n            fill: $colour-incident-under-control;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-with-status-icon-active {\r\n        svg {\r\n            color: $colour-incident-with-status-active;\r\n            fill: $colour-incident-with-status-active;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-with-status-icon-completed {\r\n        svg {\r\n            color: $colour-incident-with-status-completed;\r\n            fill: $colour-incident-with-status-completed;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-agency-assist-icon-active {\r\n        svg {\r\n            color: $colour-incident-agency-assist-active;\r\n            fill: $colour-incident-agency-assist-active;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-agency-assist-icon-completed {\r\n        svg {\r\n            color: $colour-incident-agency-assist-completed;\r\n            fill: $colour-incident-agency-assist-completed;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-field-activity-icon-active {\r\n        svg {\r\n            color: $colour-incident-field-activity-active;\r\n            fill: $colour-incident-field-activity-active;\r\n        }\r\n    }\r\n\r\n    .wf1-incident-field-activity-icon-completed {\r\n        svg {\r\n            color: $colour-incident-field-activity-completed;\r\n            fill: $colour-incident-field-activity-completed;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-default {\r\n        svg {\r\n            color: $colour-rof-default;\r\n            fill: $colour-rof-default;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-general {\r\n        svg {\r\n            color: $colour-rof-general;\r\n            fill: $colour-rof-general;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-interface {\r\n        svg {\r\n            color: $colour-rof-interface;\r\n            fill: $colour-rof-interface;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-campfire {\r\n        svg {\r\n            color: $colour-rof-campfire;\r\n            fill: $colour-rof-campfire;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-cigarette {\r\n        svg {\r\n            color: $colour-rof-cigarette;\r\n            fill: $colour-rof-cigarette;\r\n        }\r\n    }\r\n\r\n    .wf1-rof-icon-draft {\r\n        svg {\r\n            color: $colour-rof-draft;\r\n            fill: $colour-rof-draft;\r\n        }\r\n    }\r\n}\r\n//\r\n//mat-list-item.list-item {\r\n//  .list-item-icon-section {\r\n//    wf1-application-icon,\r\n//    .wf1-application-icon,\r\n//    .wf1-main-icon,\r\n//    .list-item-icon .mat-icon {\r\n//      width: 3rem;\r\n//      height: 3rem;\r\n//\r\n//      svg {\r\n//        width: 3rem;\r\n//        height: 3rem;\r\n//      }\r\n//    }\r\n//  }\r\n//}\r\n\r\nwf1-list-container mat-list.mat-list {\r\n    padding-top: 0;\r\n    height: 100%;\r\n    cdk-virtual-scroll-viewport {\r\n        height: 100%;\r\n    }\r\n}\r\n\r\nwf1-list-container wf1-spinner {\r\n    height: 75vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\nmat-list-item.list-item {\r\n    .mat-list-item-content {\r\n        align-items: center;\r\n        padding: 0 !important;\r\n    }\r\n}\r\n\r\n#map {\r\n    width: 100%;\r\n    min-height: $wf1-app-map-panel-height;\r\n}\r\n\r\n.wf1-layer-tree ul {\r\n    padding-left: 20px;\r\n}\r\n\r\n.wf1-layer-tree ul,\r\n.wf1-layer-tree li {\r\n    list-style-type: none;\r\n}\r\n\r\niframe#login-iframe {\r\n    z-index: 10000;\r\n    position: absolute;\r\n    width: 800px !important;\r\n    right: calc(50% - 350px) !important;\r\n    background-color: white;\r\n}\r\n\r\n@media screen and (max-width: 900px) {\r\n    mat-toolbar.wf1-application-header {\r\n        height: $wf1-app-header-mobile-height;\r\n\r\n        img[alt=\"BC Gov\"] {\r\n            width: 6rem;\r\n        }\r\n\r\n        img[alt=\"Wildfire ONE\"] {\r\n            width: 8.5rem;\r\n            padding-bottom: 0.2rem;\r\n        }\r\n\r\n        #header-title {\r\n            font-size: 0.9rem;\r\n            margin-left: 0.25rem;\r\n            margin-bottom: 0.25rem;\r\n        }\r\n\r\n        .header-caption-label,\r\n        .header-caption-text {\r\n            margin-bottom: 0.2rem;\r\n        }\r\n\r\n        .header-caption-label {\r\n            margin-right: 0.5rem;\r\n        }\r\n    }\r\n\r\n    #map {\r\n        min-height: $wf1-app-map-mobile-height;\r\n    }\r\n}\r\n\r\n.details {\r\n    transition: all .2s linear;\r\n    width: 600px;\r\n}\r\n\r\n.details.close {\r\n    width: 0px;\r\n    min-width: 0px!important;\r\n}\r\n\r\n.location-results{\r\n    position: absolute!important;\r\n    width: auto!important;\r\n    top: 15px;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 11px 4px #00000033!important;\r\n    max-height: none!important;\r\n}\r\n\r\n.location-mat-option  {\r\n    line-height: 2.5 !important;\r\n    height: auto!important;\r\n}\r\n\r\n.location-option {\r\n    font-size: 12px;\r\n    line-height: 1.3;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 3px 0 5px 0;\r\n}\r\n.location-option .mat-icon{\r\n    color: #9e9e9e;\r\n    font-size: 14px;\r\n    margin-right: 10px!important;\r\n    height: 14px;\r\n    width: 14px;\r\n}\r\n.location-option .address{\r\n    font-size: 15px;\r\n}\r\n\r\n.search-location {\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    min-width: 260px;\r\n    height: 38px;\r\n    transition: 0.5s;\r\n}\r\n.search-location-close-container{\r\n    border:1px solid black;\r\n    border-left: none;\r\n    border-radius: 5px;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    height: calc(100% + 2px);\r\n    display: flex;\r\n    align-items: center;\r\n    color: black;\r\n}\r\n.search-location-close-container mat-icon{\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n\r\n}\r\n.search-location-close{\r\n    border-left: 1px solid #dddddd;\r\n    cursor: pointer;\r\n}\r\n\r\n.smk-toolbar {\r\n    box-shadow: none !important;\r\n}\r\n\r\n.signpost {\r\n\tposition: relative;\r\n}\r\n\r\n.signpost:before {\r\n\tcontent: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z' fill='%234f4f52'/%3E%3C/svg%3E\");\r\n    position: absolute;\r\n\twidth: calc(100% - 10px);\r\n\theight:100%;\r\n\ttop:0;\r\n}\r\n\r\n.item.active .signpost:before {\r\n\tcontent: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z' fill='%231A5A96'/%3E%3C/svg%3E\");\r\n}\r\n\r\n.smk-highlight.material-icons.smk-command.smk-icon {\r\n    display: none;\r\n}\r\n",".wf1-list-container {\r\n    \r\n    &__header {\r\n\r\n        display:flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        position: relative;\r\n        min-height: 52px;\r\n\r\n        &__actions {\r\n            position: absolute;\r\n            right: 0;\r\n\r\n            &--left {\r\n                left: 0;\r\n            }\r\n        }\r\n        \r\n        &__title {\r\n            font-size: 1.15rem;\r\n        }\r\n    }\r\n\r\n}","@import '../variables';\r\n\r\n.error-dialog {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\r\n  h1 {\r\n    color: $colour-red;\r\n    font-size: large;\r\n    text-align: center;\r\n  }\r\n}\r\n",".comment-table-row {\r\n  width: 100%;\r\n}","@import '../variables';\r\n\r\n.side-panel-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  .side-panel-title-section {\r\n    color: $colour-sidebar-title;\r\n    background-color: $colour-sidebar-title-background;\r\n    box-sizing: border-box;\r\n    height: $wf1-sidebar-title-height;\r\n    position: relative;\r\n\r\n    .side-panel-link-button {\r\n      position: absolute;\r\n      top: .25rem;\r\n      padding-bottom: 0.5rem;\r\n\r\n      .mat-button {\r\n        min-width: 2rem;\r\n        padding: 0;\r\n      }\r\n    }\r\n\r\n    .side-panel-link-button-right {\r\n      right: .25rem;\r\n    }\r\n\r\n    .side-panel-link-button-left {\r\n      left: .25rem;\r\n    }\r\n\r\n    .side-panel-title {\r\n      width: 100%;\r\n      padding-top: 0.5rem;\r\n      padding-bottom: 0.5rem;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n    }\r\n  }\r\n\r\n  .side-panel-toolbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: .4rem 1rem;\r\n    color: $colour-sidebar-toolbar;\r\n    background-color: $colour-sidebar-toolbar-background;\r\n    box-sizing: border-box;\r\n    height: $wf1-toolbar-height;\r\n  }\r\n\r\n  .side-panel-filter {\r\n    color: $colour-sidebar-filter;\r\n    background-color: $colour-sidebar-filter-background;\r\n    box-sizing: border-box;\r\n    height: $wf1-toolbar-height;\r\n\r\n    .mat-tab-group .mat-tab-header {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .side-panel-content,\r\n  .side-panel-with-toolbar-content,\r\n  .side-panel-with-toolbar-and-filter-content,\r\n  .side-panel-with-toolbar-and-filter-and-filter-content {\r\n    box-sizing: border-box;\r\n    overflow-y: hidden;\r\n    position: relative;\r\n\r\n    .interior-panel {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      overflow-x: hidden;\r\n      overflow-y: auto;\r\n    }\r\n  }\r\n\r\n  .side-panel-content {\r\n    height: $wf1-app-side-panel-height;\r\n  }\r\n\r\n  .side-panel-with-toolbar-content {\r\n    height: $wf1-app-side-panel-with-toolbar-height;\r\n  }\r\n\r\n  .side-panel-with-toolbar-and-filter-content {\r\n    height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-total-height } - .1rem );\r\n  }\r\n\r\n  .side-panel-with-toolbar-and-filter-and-filter-content {\r\n    height: $wf1-app-side-panel-with-toolbar-and-filter-content-height;\r\n  }\r\n\r\n  .location-toolbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: .4rem 1rem;\r\n    background-color: $colour-toolbar-grey;\r\n    height: $wf1-toolbar-height;\r\n    box-sizing: border-box;\r\n\r\n    .selected-location {\r\n      div.mat-form-field-wrapper {\r\n        padding-bottom: 0;\r\n\r\n        div.mat-form-field-underline {\r\n          bottom: .25rem;\r\n        }\r\n      }\r\n    }\r\n\r\n    .location-section-header-button {\r\n      min-width: 1.5rem;\r\n    }\r\n  }\r\n}\r\n","@import '../variables';\r\n\r\n.search {\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 0.25rem;\r\n\r\n  & > div {\r\n    margin: 0 0.625rem;\r\n  }\r\n\r\n  &__sort {\r\n    height: 1.5rem;\r\n    width: 1.5rem;\r\n    cursor: pointer;\r\n\r\n    &__icon {\r\n      max-height: 1.5rem;\r\n      max-width: 1.5rem;\r\n    }\r\n  }\r\n\r\n  &__count {\r\n    font-size: 1rem;\r\n    background-color: $colour-white;\r\n    color: $colour-light-grey;\r\n    border-radius: .375rem;\r\n    padding: .125rem .25rem;\r\n    text-align: center;\r\n    user-select: none;\r\n  }\r\n\r\n  &__input {\r\n    flex-grow: 1;\r\n    div.mat-form-field-wrapper {\r\n      padding-bottom: 0;\r\n\r\n      div.mat-form-field-underline {\r\n        bottom: .25rem;\r\n      }\r\n\r\n      div.mat-form-field-infix {\r\n        border-top-width: .5rem;\r\n      }\r\n\r\n      span.mat-form-field-label-wrapper {\r\n        font-size: small;\r\n        top: -.35rem;\r\n      }\r\n    }\r\n\r\n    &__control {\r\n      font-size: 1rem;\r\n      width: 100%;\r\n      border: none;\r\n      outline: none;\r\n    }\r\n  }\r\n  &__refresh,\r\n  &__cancel,\r\n  &__clear-filters {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &__clear-filters .wf1-application-icon .wf1-main-icon .mat-icon {\r\n    width: 1.2rem;\r\n    height: 1.8rem;\r\n  }\r\n\r\n}\r\n","@import '../variables';\r\n\r\n.wf1-filters {\r\n  .mat-tab-label.mat-tab-label-active {\r\n    background-color: $opacity-grey;\r\n  }\r\n\r\n  mat-tab-body .mat-tab-body-content.slidedown {\r\n      max-height: unset!important;\r\n      overflow-y: auto!important;\r\n  }\r\n\r\n  .filter-tab {\r\n    &__header,\r\n    &__body,\r\n    &__body__options,\r\n    &__body__radiogroup {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    &__header {\r\n      padding: 0 .5rem;\r\n      box-sizing: border-box;\r\n      height: $wf1-toolbar-height;\r\n      width: 100%;\r\n      justify-content: center;\r\n\r\n      &__title,\r\n      &__subtitle {\r\n        font-size: small;\r\n      }\r\n\r\n      &__subtitle {\r\n        color: $colour-red;\r\n      }\r\n    }\r\n\r\n    &__body {\r\n      box-sizing: border-box;\r\n      padding: 1rem 2rem;\r\n      height: $wf1-filter-toolbar-content-height;\r\n\r\n      &__clear,\r\n      .wf1-application-icon.wf1-icon-size-toolbar {\r\n        cursor: pointer;\r\n        align-self: flex-end;\r\n        width: 1.2rem;\r\n        height: 1.8rem;\r\n      }\r\n    }\r\n\r\n    &__body__radiogroup__radiobutton__label {\r\n        line-height: 24px;\r\n    }\r\n  }\r\n\r\n  // Hide tab content\r\n  .mat-tab-group {\r\n    &--hidden .filter-tab__body {\r\n      display: none;\r\n    }\r\n\r\n    &--hidden {\r\n      .mat-tab-body,\r\n      .mat-tab-body-wrapper {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    .mat-tab-label {\r\n      box-sizing: border-box;\r\n      padding: 0;\r\n      min-width: 1rem;\r\n      flex: 1 1 auto;\r\n\r\n      &-content {\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    .mat-tab-label:hover {\r\n      background-color: $colour-toolbar-grey;\r\n    }\r\n  }\r\n}\r\n","@import '../variables';\r\n\r\n$header-color: $colour-light-grey;\r\n\r\n.sort-popup {\r\n  display: none;\r\n  flex-flow: column nowrap;\r\n  position: absolute;\r\n  color: $colour-black;\r\n  min-width: 15rem;\r\n  border: 0.0625rem solid rgba($colour-black, 0.5);\r\n  z-index: 15;\r\n  user-select: none;\r\n\r\n  &--visible {\r\n    display: flex;\r\n  }\r\n\r\n  &__header,\r\n  &__item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0.5rem 1rem;\r\n\r\n    &__text {\r\n      font-weight: 500;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n\r\n  &__header {\r\n    background-color: $header-color;\r\n\r\n    &__text {\r\n      font-size: 1.25rem;\r\n    }\r\n\r\n    &__icon {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    font-size: 0.9rem;\r\n    background-color: $colour-white;\r\n    cursor: pointer;\r\n    transition: all 0.2s;\r\n\r\n    &:not(#{&}--active):hover {\r\n      background-color: $colour-light-grey;\r\n    }\r\n\r\n    &--active {\r\n      color: $colour-white;\r\n      background-color: $colour-red;\r\n    }\r\n\r\n    &__text {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n}\r\n","@import \"../variables\";\r\n\r\n.unauthorized-page {\r\n  height: $wf1-app-main-panel-container-height;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\r\n\r\n  h1 {\r\n\r\n  }\r\n\r\n  p {\r\n\r\n  }\r\n\r\n  h2 {\r\n    font-size: large;\r\n    color: red;\r\n  }\r\n}",".wfim-application.orientation-portrait {\r\n    .smk-map-frame.smk-theme-wf.smk-device-mobile {\r\n        .smk-overlay {\r\n            .smk-toolbar {\r\n                right: unset;\r\n            }\r\n\r\n            .smk-actionbar {\r\n                top: calc( var( --overlay-padding ) + var( --toolbar-height ) );\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.wfim-application.orientation-landscape {\r\n    .smk-map-frame.smk-theme-wf.smk-device-mobile {\r\n        .smk-overlay {\r\n            .smk-toolbar {\r\n                right: unset;\r\n            }\r\n        }\r\n\r\n        .smk-sidepanel {\r\n            position: absolute;\r\n            top: calc(var(--toolbar-height) + 10px);\r\n            left: 0;\r\n            right: unset;\r\n            bottom: var(--panel-bottom);\r\n            width: var(--panel-width);\r\n\r\n            border-bottom: unset;\r\n            margin-top: unset;\r\n            background-color: unset;\r\n\r\n            .smk-elastic-panel {\r\n                height: auto;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n.smk-feature-list .smk-layer .smk-feature {\r\n  text-decoration: underline;\r\n  color: #1a5a96;\r\n  font-family: 'BCSans', 'Noto Sans', Verdana, Arial, sans-serif;\r\n}\r\n","@font-face {\n    font-family: 'lg';\n    src: url('#{$lg-path-fonts}/lg.woff2?io9a6k') format('woff2'),\n        url('#{$lg-path-fonts}/lg.ttf?io9a6k') format('truetype'),\n        url('#{$lg-path-fonts}/lg.woff?io9a6k') format('woff'),\n        url('#{$lg-path-fonts}/lg.svg?io9a6k#lg') format('svg');\n    font-weight: normal;\n    font-style: normal;\n    font-display: block;\n}\n\n.lg-icon {\n    /* use !important to prevent issues with browser extensions that change fonts */\n    font-family: 'lg' !important;\n    speak: never;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n\n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n",".lg-container {\n    font-family: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue',\n        Arial, 'Noto Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n}\n// default theme\n.lg-next,\n.lg-prev {\n    background-color: $lg-next-prev-bg;\n    border-radius: $lg-border-radius-base;\n    color: $lg-next-prev-color;\n    cursor: pointer;\n    display: block;\n    font-size: 22px;\n    margin-top: -10px;\n    padding: 8px 10px 9px;\n    position: absolute;\n    top: 50%;\n    z-index: $zindex-controls;\n    outline: none;\n    border: none;\n\n    &.disabled {\n        opacity: 0 !important;\n        cursor: default;\n    }\n\n    &:hover:not(.disabled) {\n        color: $lg-next-prev-hover-color;\n    }\n    .lg-single-item & {\n        display: none;\n    }\n}\n\n.lg-next {\n    right: 20px;\n\n    &:before {\n        content: '\\e095';\n    }\n}\n\n.lg-prev {\n    left: 20px;\n\n    &:after {\n        content: '\\e094';\n    }\n}\n\n@include keyframes(lg-right-end) {\n    0% {\n        left: 0;\n    }\n\n    50% {\n        left: -30px;\n    }\n\n    100% {\n        left: 0;\n    }\n}\n\n@include keyframes(lg-left-end) {\n    0% {\n        left: 0;\n    }\n\n    50% {\n        left: 30px;\n    }\n\n    100% {\n        left: 0;\n    }\n}\n\n.lg-outer {\n    &.lg-right-end {\n        .lg-object {\n            @include animation(lg-right-end 0.3s);\n            position: relative;\n        }\n    }\n\n    &.lg-left-end {\n        .lg-object {\n            @include animation(lg-left-end 0.3s);\n            position: relative;\n        }\n    }\n}\n\n// lg toolbar\n.lg-toolbar {\n    z-index: $zindex-toolbar;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    .lg-media-overlap & {\n        background-image: $lg-toolbar-bg;\n    }\n\n    .lg-icon {\n        color: $lg-toolbar-icon-color;\n        cursor: pointer;\n        float: right;\n        font-size: 24px;\n        height: 47px;\n        line-height: 27px;\n        padding: 10px 0;\n        text-align: center;\n        width: 50px;\n        text-decoration: none !important;\n        outline: medium none;\n        will-change: color;\n        @include transition(color 0.2s linear);\n        background: none;\n        border: none;\n        box-shadow: none;\n        &.lg-icon-18 {\n            font-size: 18px;\n        }\n        &:hover {\n            color: $lg-toolbar-icon-hover-color;\n        }\n    }\n\n    .lg-close {\n        &:after {\n            content: '\\e070';\n        }\n    }\n    .lg-maximize {\n        font-size: 22px;\n        &:after {\n            content: '\\e90a';\n        }\n    }\n\n    .lg-download {\n        &:after {\n            content: '\\e0f2';\n        }\n    }\n}\n\n// lightGallery title\n.lg-sub-html {\n    color: $lg-sub-html-color;\n    font-size: 16px;\n    padding: 10px 40px;\n    text-align: center;\n    z-index: $zindex-subhtml;\n    opacity: 0;\n    @include transition(opacity 0.2s ease-out 0s);\n\n    h4 {\n        margin: 0;\n        font-size: 13px;\n        font-weight: bold;\n    }\n\n    p {\n        font-size: 12px;\n        margin: 5px 0 0;\n    }\n    a {\n        color: inherit;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    .lg-media-overlap & {\n        background-image: $lg-sub-html-bg;\n    }\n    .lg-item & {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        left: 0;\n    }\n}\n\n.lg-error-msg {\n    font-size: 14px;\n    color: #999;\n}\n\n// lg image counter\n.lg-counter {\n    color: $lg-icon-color;\n    display: inline-block;\n    font-size: $lg-counter-font-size;\n    padding-left: 20px;\n    padding-top: 12px;\n    height: 47px;\n    vertical-align: middle;\n}\n\n.lg-closing {\n    .lg-toolbar,\n    .lg-prev,\n    .lg-next,\n    .lg-sub-html {\n        opacity: 0;\n        @include transitionCustom(\n            transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s,\n            opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s,\n            color 0.08 linear\n        );\n    }\n}\n\n// Starting effect\nbody:not(.lg-from-hash) {\n    .lg-outer {\n        &.lg-start-zoom {\n            .lg-item:not(.lg-zoomable) {\n                .lg-img-wrap,\n                .lg-video-cont {\n                    opacity: 0;\n                    @include transform(scale3d(0.5, 0.5, 0.5));\n                    will-change: transform, opacity;\n                    @include transitionCustom(\n                        transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s,\n                        opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important\n                    );\n                }\n                &.lg-complete {\n                    .lg-img-wrap,\n                    .lg-video-cont {\n                        opacity: 1;\n                        @include transform(scale3d(1, 1, 1));\n                    }\n                }\n            }\n        }\n    }\n}\n\n.lg-icon {\n    &:focus-visible {\n        color: #fff;\n        border-radius: 3px;\n        outline: 1px dashed rgba(255, 255, 255, 0.6);\n    }\n}\n.lg-toolbar {\n    .lg-icon {\n        &:focus-visible {\n            border-radius: 8px;\n            outline-offset: -5px;\n        }\n    }\n}\n","$backdrop-opacity: 1 !default;\n$lg-toolbar-bg: linear-gradient(\n    0deg,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.4)\n) !default;\n$lg-border-radius-base: 2px !default;\n$lg-theme-highlight: rgb(169, 7, 7) !default;\n$lg-theme-color: #000 !default;\n\n// basic icon colours\n$lg-icon-bg: rgba(0, 0, 0, 0.45) !default;\n$lg-icon-color: #999 !default;\n$lg-icon-hover-color: #fff !default;\n\n// counter\n$lg-counter-color: #e6e6e6 !default;\n$lg-counter-font-size: 16px !default;\n\n// Next prev icons\n$lg-next-prev-bg: $lg-icon-bg !default;\n$lg-next-prev-color: $lg-icon-color !default;\n$lg-next-prev-hover-color: $lg-icon-hover-color !default;\n\n// toolbar icons\n$lg-toolbar-icon-color: $lg-icon-color !default;\n$lg-toolbar-icon-hover-color: $lg-icon-hover-color !default;\n$lg-toolbar-icon-disabled-opacity: 0.75 !default;\n\n// autoplay progress bar\n$lg-progress-bar-bg: #333 !default;\n$lg-progress-bar-active-bg: $lg-theme-highlight !default;\n$lg-progress-bar-height: 5px !default;\n\n// paths\n$lg-path-fonts: '../fonts' !default;\n$lg-path-images: '../images' !default;\n\n// Zoom plugin\n$zoom-transition-duration: 0.5s !default;\n\n// Sub html - titile\n$lg-sub-html-bg: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.6)\n) !default;\n$lg-sub-html-color: #eee !default;\n\n// thumbnail toggle button\n$lg-thumb-toggle-bg: #0d0a0a !default;\n$lg-thumb-toggle-color: $lg-icon-color !default;\n$lg-thumb-bg: #0d0a0a !default;\n$lg-thumb-container-height: 100px;\n\n// Pager\n\n// z-index\n$zindex-outer: 1050 !default;\n$zindex-progressbar: 1083 !default;\n$zindex-controls: 1084 !default;\n$zindex-toolbar: 1082 !default;\n$zindex-subhtml: 1080 !default;\n$zindex-components: 1080 !default;\n$zindex-pager: 1080 !default;\n$zindex-playbutton: 1080 !default;\n$zindex-item: 1060 !default;\n$zindex-backdrop: 1040 !default;\n","// Vendor Prefixes\n//\n// All vendor mixins are deprecated as of v3.2.0 due to the introduction of\n// Autoprefixer in our Gruntfile. They will be removed in v4.\n\n// - Animations\n// - Backface visibility\n// - Box shadow\n// - Box sizing\n// - Content columns\n// - Hyphens\n// - Placeholder text\n// - Transformations\n// - Transitions\n// - User Select\n// - cursor grab\n\n// Animations\n@mixin animation($animation) {\n    -webkit-animation: $animation;\n    -o-animation: $animation;\n    animation: $animation;\n}\n\n@mixin animation-name($name) {\n    -webkit-animation-name: $name;\n    animation-name: $name;\n}\n\n@mixin animation-duration($duration) {\n    -webkit-animation-duration: $duration;\n    animation-duration: $duration;\n}\n\n@mixin animation-timing-function($timing-function) {\n    -webkit-animation-timing-function: $timing-function;\n    animation-timing-function: $timing-function;\n}\n\n@mixin animation-delay($delay) {\n    -webkit-animation-delay: $delay;\n    animation-delay: $delay;\n}\n\n@mixin animation-iteration-count($iteration-count) {\n    -webkit-animation-iteration-count: $iteration-count;\n    animation-iteration-count: $iteration-count;\n}\n\n@mixin animation-direction($direction) {\n    -webkit-animation-direction: $direction;\n    animation-direction: $direction;\n}\n\n@mixin animation-fill-mode($fill-mode) {\n    -webkit-animation-fill-mode: $fill-mode;\n    animation-fill-mode: $fill-mode;\n}\n\n@mixin keyframes($name) {\n    @-webkit-keyframes #{$name} {\n        @content;\n    }\n\n    @-moz-keyframes #{$name} {\n        @content;\n    }\n\n    @-ms-keyframes #{$name} {\n        @content;\n    }\n\n    @keyframes #{$name} {\n        @content;\n    }\n}\n\n// Backface visibility\n// Prevent browsers from flickering when using CSS 3D transforms.\n// Default value is `visible`, but can be changed to `hidden`\n\n@mixin backface-visibility($visibility) {\n    -webkit-backface-visibility: $visibility;\n    -moz-backface-visibility: $visibility;\n    backface-visibility: $visibility;\n}\n\n// Drop shadows\n//\n// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's\n// supported browsers that have box shadow capabilities now support it.\n\n@mixin box-shadow($shadow...) {\n    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1\n    box-shadow: $shadow;\n}\n\n// Box sizing\n@mixin box-sizing($boxmodel) {\n    -webkit-box-sizing: $boxmodel;\n    -moz-box-sizing: $boxmodel;\n    box-sizing: $boxmodel;\n}\n\n// CSS3 Content Columns\n@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {\n    -webkit-column-count: $column-count;\n    -moz-column-count: $column-count;\n    column-count: $column-count;\n    -webkit-column-gap: $column-gap;\n    -moz-column-gap: $column-gap;\n    column-gap: $column-gap;\n}\n\n// Optional hyphenation\n@mixin hyphens($mode: auto) {\n    word-wrap: break-word;\n    -webkit-hyphens: $mode;\n    -moz-hyphens: $mode;\n    -ms-hyphens: $mode; // IE10+\n    -o-hyphens: $mode;\n    hyphens: $mode;\n}\n\n// Transformations\n@mixin scale($ratio...) {\n    -webkit-transform: scale($ratio);\n    -ms-transform: scale($ratio); // IE9 only\n    -o-transform: scale($ratio);\n    transform: scale($ratio);\n}\n\n@mixin scaleX($ratio) {\n    -webkit-transform: scaleX($ratio);\n    -ms-transform: scaleX($ratio); // IE9 only\n    -o-transform: scaleX($ratio);\n    transform: scaleX($ratio);\n}\n\n@mixin scaleY($ratio) {\n    -webkit-transform: scaleY($ratio);\n    -ms-transform: scaleY($ratio); // IE9 only\n    -o-transform: scaleY($ratio);\n    transform: scaleY($ratio);\n}\n\n@mixin skew($x, $y) {\n    -webkit-transform: skewX($x) skewY($y);\n    -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+\n    -o-transform: skewX($x) skewY($y);\n    transform: skewX($x) skewY($y);\n}\n\n@mixin translate($x, $y) {\n    -webkit-transform: translate($x, $y);\n    -ms-transform: translate($x, $y); // IE9 only\n    -o-transform: translate($x, $y);\n    transform: translate($x, $y);\n}\n\n@mixin translate3d($x, $y, $z) {\n    -webkit-transform: translate3d($x, $y, $z);\n    transform: translate3d($x, $y, $z);\n}\n\n@mixin scale3d($x, $y, $z) {\n    -webkit-transform: scale3d($x, $y, $z);\n    transform: scale3d($x, $y, $z);\n}\n\n@mixin rotate($degrees) {\n    -webkit-transform: rotate($degrees);\n    -ms-transform: rotate($degrees); // IE9 only\n    -o-transform: rotate($degrees);\n    transform: rotate($degrees);\n}\n\n@mixin rotateX($degrees) {\n    -webkit-transform: rotateX($degrees);\n    -ms-transform: rotateX($degrees); // IE9 only\n    -o-transform: rotateX($degrees);\n    transform: rotateX($degrees);\n}\n\n@mixin rotateY($degrees) {\n    -webkit-transform: rotateY($degrees);\n    -ms-transform: rotateY($degrees); // IE9 only\n    -o-transform: rotateY($degrees);\n    transform: rotateY($degrees);\n}\n\n@mixin perspective($perspective) {\n    -webkit-perspective: $perspective;\n    -moz-perspective: $perspective;\n    perspective: $perspective;\n}\n\n@mixin perspective-origin($perspective) {\n    -webkit-perspective-origin: $perspective;\n    -moz-perspective-origin: $perspective;\n    perspective-origin: $perspective;\n}\n\n@mixin transform-origin($origin) {\n    -webkit-transform-origin: $origin;\n    -moz-transform-origin: $origin;\n    -ms-transform-origin: $origin; // IE9 only\n    transform-origin: $origin;\n}\n\n@mixin transform($transforms) {\n    -moz-transform: $transforms;\n    -o-transform: $transforms;\n    -ms-transform: $transforms;\n    -webkit-transform: $transforms;\n    transform: $transforms;\n}\n\n// Transitions\n\n@mixin transition($transition...) {\n    -webkit-transition: $transition;\n    -o-transition: $transition;\n    transition: $transition;\n}\n\n@mixin transition-property($transition-property...) {\n    -webkit-transition-property: $transition-property;\n    transition-property: $transition-property;\n}\n\n@mixin transition-delay($transition-delay) {\n    -webkit-transition-delay: $transition-delay;\n    transition-delay: $transition-delay;\n}\n\n@mixin transition-duration($transition-duration...) {\n    -webkit-transition-duration: $transition-duration;\n    transition-duration: $transition-duration;\n}\n\n@mixin transition-timing-function($timing-function) {\n    -webkit-transition-timing-function: $timing-function;\n    transition-timing-function: $timing-function;\n}\n\n@mixin transition-transform($transition...) {\n    -webkit-transition: -webkit-transform $transition;\n    -moz-transition: -moz-transform $transition;\n    -o-transition: -o-transform $transition;\n    transition: transform $transition;\n}\n\n// transition custom\n\n@function prefix($property, $prefixes: webkit moz o ms) {\n    $vendor-prefixed-properties: transform background-clip background-size;\n    $result: ();\n\n    @each $prefix in $prefixes {\n        @if index($vendor-prefixed-properties, $property) {\n            $property: -#{$prefix}-#{$property};\n        }\n        $result: append($result, $property);\n    }\n    @return $result;\n}\n\n@function trans-prefix($transition, $prefix: moz) {\n    $prefixed: ();\n\n    @each $trans in $transition {\n        $prop-name: nth($trans, 1);\n        $vendor-prop-name: prefix($prop-name, $prefix);\n        $prop-vals: nth($trans, 2);\n        $prefixed: append($prefixed, $vendor-prop-name $prop-vals, comma);\n    }\n    @return $prefixed;\n}\n\n@mixin transitionCustom($values...) {\n    $transitions: ();\n\n    @each $declaration in $values {\n        $prop: nth($declaration, 1);\n        $prop-opts: ();\n        $length: length($declaration);\n\n        @if $length >= 2 {\n            @for $i from 2 through $length {\n                $prop-opts: append($prop-opts, nth($declaration, $i));\n            }\n        }\n        $trans: $prop, $prop-opts;\n        $transitions: append($transitions, $trans, comma);\n    }\n    -webkit-transition: trans-prefix($transitions, webkit);\n    -moz-transition: trans-prefix($transitions, moz);\n    -o-transition: trans-prefix($transitions, o);\n    transition: $values;\n}\n\n// User select\n// For selecting text on the page\n\n@mixin user-select($select) {\n    -webkit-user-select: $select;\n    -moz-user-select: $select;\n    -ms-user-select: $select; // IE10+\n    user-select: $select;\n}\n\n// mouse grab\n\n@mixin grab-cursor {\n    cursor: -webkit-grab;\n    cursor: -moz-grab;\n    cursor: -o-grab;\n    cursor: -ms-grab;\n    cursor: grab;\n}\n\n@mixin grabbing-cursor {\n    cursor: move;\n    cursor: -webkit-grabbing;\n    cursor: -moz-grabbing;\n    cursor: -o-grabbing;\n    cursor: -ms-grabbing;\n    cursor: grabbing;\n}\n","@import 'lg-variables';\n@import 'lg-mixins';\n// Clearfix\n.lg-group:after {\n    content: '';\n    display: table;\n    clear: both;\n}\n\n// lightgallery core\n\n.lg-container {\n    display: none;\n    outline: none;\n    &.lg-show {\n        display: block;\n    }\n}\n.lg-on {\n    scroll-behavior: unset;\n}\n.lg-overlay-open {\n    overflow: hidden;\n}\n\n// for idle state\n.lg-toolbar,\n.lg-prev,\n.lg-next,\n.lg-pager-outer,\n.lg-hide-sub-html .lg-sub-html {\n    opacity: 0;\n    will-change: transform, opacity;\n    @include transitionCustom(\n        transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s,\n        opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s\n    );\n}\n// for idle state\n.lg-show-in {\n    .lg-toolbar,\n    .lg-prev,\n    .lg-next,\n    .lg-pager-outer {\n        opacity: 1;\n    }\n    &.lg-hide-sub-html {\n        .lg-sub-html {\n            opacity: 1;\n        }\n    }\n    .lg-hide-items {\n        .lg-prev {\n            opacity: 0;\n            @include translate3d(-10px, 0, 0);\n        }\n\n        .lg-next {\n            opacity: 0;\n            @include translate3d(10px, 0, 0);\n        }\n\n        .lg-toolbar {\n            opacity: 0;\n            @include translate3d(0, -10px, 0);\n        }\n\n        &.lg-hide-sub-html {\n            .lg-sub-html {\n                opacity: 0;\n                @include translate3d(0, 20px, 0);\n            }\n        }\n    }\n}\n\n.lg-outer {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: $zindex-outer;\n    text-align: left;\n    opacity: 0.001;\n    outline: none;\n    will-change: auto;\n    overflow: hidden;\n    // For start/end transition\n    @include transition(opacity 0.15s ease 0s);\n\n    * {\n        @include box-sizing(border-box);\n    }\n\n    &.lg-zoom-from-image {\n        opacity: 1;\n    }\n\n    &.lg-visible {\n        opacity: 1;\n    }\n\n    // Set transition speed and timing function\n    &.lg-css3 {\n        .lg-item:not(.lg-start-end-progress) {\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transition-duration(inherit !important);\n                @include transition-timing-function(inherit !important);\n            }\n        }\n    }\n\n    // Remove transition while dragging\n    &.lg-css3.lg-dragging {\n        .lg-item {\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transition-duration(0s !important);\n                opacity: 1;\n            }\n        }\n    }\n\n    // Set cursor grab while dragging\n    &.lg-grab {\n        img.lg-object {\n            @include grab-cursor;\n        }\n    }\n\n    &.lg-grabbing {\n        img.lg-object {\n            @include grabbing-cursor;\n        }\n    }\n\n    .lg-content {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n    }\n\n    .lg-inner {\n        width: 100%;\n        position: absolute;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        @include transition(opacity 0s);\n        white-space: nowrap;\n    }\n\n    .lg-item {\n        &:not(.lg-start-end-progress) {\n            background: url('#{$lg-path-images}/loading.gif') no-repeat scroll\n                center center transparent;\n        }\n        display: none !important;\n    }\n    &.lg-css3 {\n        .lg-prev-slide,\n        .lg-current,\n        .lg-next-slide {\n            display: inline-block !important;\n        }\n    }\n    &.lg-css {\n        .lg-current {\n            display: inline-block !important;\n        }\n    }\n\n    .lg-item,\n    .lg-img-wrap {\n        display: inline-block;\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n\n        &:before {\n            content: '';\n            display: inline-block;\n            height: 100%;\n            vertical-align: middle;\n        }\n    }\n\n    .lg-img-wrap {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n\n        white-space: nowrap;\n        font-size: 0;\n    }\n\n    .lg-item {\n        &.lg-complete {\n            background-image: none;\n        }\n\n        &.lg-current {\n            z-index: $zindex-item;\n        }\n    }\n\n    .lg-object {\n        display: inline-block;\n        vertical-align: middle;\n        max-width: 100%;\n        max-height: 100%;\n        width: auto;\n        height: auto;\n        position: relative;\n    }\n\n    // Hide title div if empty\n    .lg-empty-html {\n        &.lg-sub-html,\n        .lg-sub-html {\n            display: none;\n        }\n    }\n\n    &.lg-hide-download {\n        .lg-download {\n            opacity: $lg-toolbar-icon-disabled-opacity;\n            pointer-events: none;\n        }\n    }\n\n    .lg-first-slide {\n        .lg-dummy-img {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n        }\n    }\n\n    &.lg-components-open {\n        &:not(.lg-zoomed) {\n            .lg-components {\n                @include translate3d(0, 0%, 0);\n                opacity: 1;\n            }\n            .lg-sub-html {\n                opacity: 1;\n                transition: opacity 0.2s ease-out 0.15s;\n            }\n        }\n    }\n}\n\n.lg-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: $zindex-backdrop;\n    background-color: $lg-theme-color;\n    opacity: 0;\n    will-change: auto;\n    @include transition(opacity 333ms ease-in 0s);\n    &.in {\n        opacity: $backdrop-opacity;\n    }\n}\n\n// Default slide animations. Should be placed at the bottom of the animation css\n.lg-css3 {\n    // Remove all transition effects\n    &.lg-no-trans {\n        .lg-prev-slide,\n        .lg-next-slide,\n        .lg-current {\n            @include transitionCustom(none 0s ease 0s !important);\n        }\n    }\n\n    &.lg-use-css3 {\n        .lg-item {\n            @include backface-visibility(hidden);\n        }\n    }\n\n    // Fade mode\n    &.lg-fade {\n        .lg-item {\n            opacity: 0;\n\n            &.lg-current {\n                opacity: 1;\n            }\n\n            // transition timing property and duration will be over written from javascript\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transitionCustom(opacity 0.1s ease 0s);\n            }\n        }\n    }\n    &.lg-use-css3 {\n        .lg-item {\n            &.lg-start-progress {\n                @include transitionCustom(\n                    transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s\n                        //transform 1s cubic-bezier(0.34, 1.56, 0.64, 1) 0s,\n                );\n            }\n            &.lg-start-end-progress {\n                @include transitionCustom(\n                    transform 1s cubic-bezier(0, 0, 0.25, 1) 0s\n                );\n            }\n        }\n    }\n\n    &.lg-slide {\n        &.lg-use-css3 {\n            .lg-item {\n                opacity: 0;\n\n                &.lg-prev-slide {\n                    @include translate3d(-100%, 0, 0);\n                }\n\n                &.lg-next-slide {\n                    @include translate3d(100%, 0, 0);\n                }\n\n                &.lg-current {\n                    @include translate3d(0, 0, 0);\n                    opacity: 1;\n                }\n\n                // transition timing property and duration will be over written from javascript\n                &.lg-prev-slide,\n                &.lg-next-slide,\n                &.lg-current {\n                    @include transitionCustom(\n                        transform 1s cubic-bezier(0, 0, 0.25, 1) 0s,\n                        opacity 0.1s ease 0s\n                    );\n                }\n            }\n        }\n    }\n}\n\n.lg-container {\n    display: none;\n    &.lg-show {\n        display: block;\n    }\n\n    // Remove transition while dragging\n    &.lg-dragging-vertical {\n        .lg-backdrop {\n            @include transition-duration(0s !important);\n        }\n        .lg-css3 {\n            .lg-item {\n                &.lg-current {\n                    @include transition-duration(0s !important);\n                    opacity: 1;\n                }\n            }\n        }\n    }\n}\n\n// Inline Gallery\n\n.lg-inline {\n    .lg-backdrop,\n    .lg-outer {\n        position: absolute;\n    }\n    .lg-backdrop {\n        z-index: 1;\n    }\n    .lg-outer {\n        z-index: 2;\n    }\n    .lg-maximize {\n        &:after {\n            content: '\\e909';\n        }\n    }\n}\n\n// Components\n.lg-components {\n    @include translate3d(0, 100%, 0);\n    will-change: transform;\n    @include transitionCustom(transform 0.35s ease-out 0s);\n    z-index: $zindex-components;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    left: 0;\n}\n","/* required styles */\r\n\r\n.leaflet-pane,\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-tile-container,\r\n.leaflet-pane > svg,\r\n.leaflet-pane > canvas,\r\n.leaflet-zoom-box,\r\n.leaflet-image-layer,\r\n.leaflet-layer {\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\t}\r\n.leaflet-container {\r\n\toverflow: hidden;\r\n\t}\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\t-webkit-user-select: none;\r\n\t   -moz-user-select: none;\r\n\t        user-select: none;\r\n\t  -webkit-user-drag: none;\r\n\t}\r\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\r\n.leaflet-safari .leaflet-tile {\r\n\timage-rendering: -webkit-optimize-contrast;\r\n\t}\r\n/* hack that prevents hw layers \"stretching\" when loading new tiles */\r\n.leaflet-safari .leaflet-tile-container {\r\n\twidth: 1600px;\r\n\theight: 1600px;\r\n\t-webkit-transform-origin: 0 0;\r\n\t}\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\tdisplay: block;\r\n\t}\r\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\r\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\r\n.leaflet-container .leaflet-overlay-pane svg,\r\n.leaflet-container .leaflet-marker-pane img,\r\n.leaflet-container .leaflet-shadow-pane img,\r\n.leaflet-container .leaflet-tile-pane img,\r\n.leaflet-container img.leaflet-image-layer {\r\n\tmax-width: none !important;\r\n\tmax-height: none !important;\r\n\t}\r\n\r\n.leaflet-container.leaflet-touch-zoom {\r\n\t-ms-touch-action: pan-x pan-y;\r\n\ttouch-action: pan-x pan-y;\r\n\t}\r\n.leaflet-container.leaflet-touch-drag {\r\n\t-ms-touch-action: pinch-zoom;\r\n\t/* Fallback for FF which doesn't support pinch-zoom */\r\n\ttouch-action: none;\r\n\ttouch-action: pinch-zoom;\r\n}\r\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\r\n\t-ms-touch-action: none;\r\n\ttouch-action: none;\r\n}\r\n.leaflet-container {\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n.leaflet-container a {\r\n\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\r\n}\r\n.leaflet-tile {\r\n\tfilter: inherit;\r\n\tvisibility: hidden;\r\n\t}\r\n.leaflet-tile-loaded {\r\n\tvisibility: inherit;\r\n\t}\r\n.leaflet-zoom-box {\r\n\twidth: 0;\r\n\theight: 0;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\tz-index: 800;\r\n\t}\r\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\r\n.leaflet-overlay-pane svg {\r\n\t-moz-user-select: none;\r\n\t}\r\n\r\n.leaflet-pane         { z-index: 400; }\r\n\r\n.leaflet-tile-pane    { z-index: 200; }\r\n.leaflet-overlay-pane { z-index: 400; }\r\n.leaflet-shadow-pane  { z-index: 500; }\r\n.leaflet-marker-pane  { z-index: 600; }\r\n.leaflet-tooltip-pane   { z-index: 650; }\r\n.leaflet-popup-pane   { z-index: 700; }\r\n\r\n.leaflet-map-pane canvas { z-index: 100; }\r\n.leaflet-map-pane svg    { z-index: 200; }\r\n\r\n.leaflet-vml-shape {\r\n\twidth: 1px;\r\n\theight: 1px;\r\n\t}\r\n.lvml {\r\n\tbehavior: url(#default#VML);\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\t}\r\n\r\n\r\n/* control positioning */\r\n\r\n.leaflet-control {\r\n\tposition: relative;\r\n\tz-index: 800;\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-top,\r\n.leaflet-bottom {\r\n\tposition: absolute;\r\n\tz-index: 1000;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-top {\r\n\ttop: 0;\r\n\t}\r\n.leaflet-right {\r\n\tright: 0;\r\n\t}\r\n.leaflet-bottom {\r\n\tbottom: 0;\r\n\t}\r\n.leaflet-left {\r\n\tleft: 0;\r\n\t}\r\n.leaflet-control {\r\n\tfloat: left;\r\n\tclear: both;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tfloat: right;\r\n\t}\r\n.leaflet-top .leaflet-control {\r\n\tmargin-top: 10px;\r\n\t}\r\n.leaflet-bottom .leaflet-control {\r\n\tmargin-bottom: 10px;\r\n\t}\r\n.leaflet-left .leaflet-control {\r\n\tmargin-left: 10px;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tmargin-right: 10px;\r\n\t}\r\n\r\n\r\n/* zoom and fade animations */\r\n\r\n.leaflet-fade-anim .leaflet-tile {\r\n\twill-change: opacity;\r\n\t}\r\n.leaflet-fade-anim .leaflet-popup {\r\n\topacity: 0;\r\n\t-webkit-transition: opacity 0.2s linear;\r\n\t   -moz-transition: opacity 0.2s linear;\r\n\t     -o-transition: opacity 0.2s linear;\r\n\t        transition: opacity 0.2s linear;\r\n\t}\r\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\r\n\topacity: 1;\r\n\t}\r\n.leaflet-zoom-animated {\r\n\t-webkit-transform-origin: 0 0;\r\n\t    -ms-transform-origin: 0 0;\r\n\t        transform-origin: 0 0;\r\n\t}\r\n.leaflet-zoom-anim .leaflet-zoom-animated {\r\n\twill-change: transform;\r\n\t}\r\n.leaflet-zoom-anim .leaflet-zoom-animated {\r\n\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t     -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t}\r\n.leaflet-zoom-anim .leaflet-tile,\r\n.leaflet-pan-anim .leaflet-tile {\r\n\t-webkit-transition: none;\r\n\t   -moz-transition: none;\r\n\t     -o-transition: none;\r\n\t        transition: none;\r\n\t}\r\n\r\n.leaflet-zoom-anim .leaflet-zoom-hide {\r\n\tvisibility: hidden;\r\n\t}\r\n\r\n\r\n/* cursors */\r\n\r\n.leaflet-interactive {\r\n\tcursor: pointer;\r\n\t}\r\n.leaflet-grab {\r\n\tcursor: -webkit-grab;\r\n\tcursor:    -moz-grab;\r\n\t}\r\n.leaflet-crosshair,\r\n.leaflet-crosshair .leaflet-interactive {\r\n\tcursor: crosshair;\r\n\t}\r\n.leaflet-popup-pane,\r\n.leaflet-control {\r\n\tcursor: auto;\r\n\t}\r\n.leaflet-dragging .leaflet-grab,\r\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\r\n.leaflet-dragging .leaflet-marker-draggable {\r\n\tcursor: move;\r\n\tcursor: -webkit-grabbing;\r\n\tcursor:    -moz-grabbing;\r\n\t}\r\n\r\n/* marker & overlays interactivity */\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-image-layer,\r\n.leaflet-pane > svg path,\r\n.leaflet-tile-container {\r\n\tpointer-events: none;\r\n\t}\r\n\r\n.leaflet-marker-icon.leaflet-interactive,\r\n.leaflet-image-layer.leaflet-interactive,\r\n.leaflet-pane > svg path.leaflet-interactive {\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n\r\n/* visual tweaks */\r\n\r\n.leaflet-container {\r\n\tbackground: #ddd;\r\n\toutline: 0;\r\n\t}\r\n.leaflet-container a {\r\n\tcolor: #0078A8;\r\n\t}\r\n.leaflet-container a.leaflet-active {\r\n\toutline: 2px solid orange;\r\n\t}\r\n.leaflet-zoom-box {\r\n\tborder: 2px dotted #38f;\r\n\tbackground: rgba(255,255,255,0.5);\r\n\t}\r\n\r\n\r\n/* general typography */\r\n.leaflet-container {\r\n\tfont: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\r\n\t}\r\n\r\n\r\n/* general toolbar styles */\r\n\r\n.leaflet-bar {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\r\n\tborder-radius: 4px;\r\n\t}\r\n.leaflet-bar a,\r\n.leaflet-bar a:hover {\r\n\tbackground-color: #fff;\r\n\tborder-bottom: 1px solid #ccc;\r\n\twidth: 26px;\r\n\theight: 26px;\r\n\tline-height: 26px;\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tcolor: black;\r\n\t}\r\n.leaflet-bar a,\r\n.leaflet-control-layers-toggle {\r\n\tbackground-position: 50% 50%;\r\n\tbackground-repeat: no-repeat;\r\n\tdisplay: block;\r\n\t}\r\n.leaflet-bar a:hover {\r\n\tbackground-color: #f4f4f4;\r\n\t}\r\n.leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 4px;\r\n\tborder-top-right-radius: 4px;\r\n\t}\r\n.leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 4px;\r\n\tborder-bottom-right-radius: 4px;\r\n\tborder-bottom: none;\r\n\t}\r\n.leaflet-bar a.leaflet-disabled {\r\n\tcursor: default;\r\n\tbackground-color: #f4f4f4;\r\n\tcolor: #bbb;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-bar a {\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tline-height: 30px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 2px;\r\n\tborder-top-right-radius: 2px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 2px;\r\n\tborder-bottom-right-radius: 2px;\r\n\t}\r\n\r\n/* zoom control */\r\n\r\n.leaflet-control-zoom-in,\r\n.leaflet-control-zoom-out {\r\n\tfont: bold 18px 'Lucida Console', Monaco, monospace;\r\n\ttext-indent: 1px;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\r\n\tfont-size: 22px;\r\n\t}\r\n\r\n\r\n/* layers control */\r\n\r\n.leaflet-control-layers {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\r\n\tbackground: #fff;\r\n\tborder-radius: 5px;\r\n\t}\r\n.leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers.png);\r\n\twidth: 36px;\r\n\theight: 36px;\r\n\t}\r\n.leaflet-retina .leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers-2x.png);\r\n\tbackground-size: 26px 26px;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers-toggle {\r\n\twidth: 44px;\r\n\theight: 44px;\r\n\t}\r\n.leaflet-control-layers .leaflet-control-layers-list,\r\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\r\n\tdisplay: none;\r\n\t}\r\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\t}\r\n.leaflet-control-layers-expanded {\r\n\tpadding: 6px 10px 6px 6px;\r\n\tcolor: #333;\r\n\tbackground: #fff;\r\n\t}\r\n.leaflet-control-layers-scrollbar {\r\n\toverflow-y: scroll;\r\n\toverflow-x: hidden;\r\n\tpadding-right: 5px;\r\n\t}\r\n.leaflet-control-layers-selector {\r\n\tmargin-top: 2px;\r\n\tposition: relative;\r\n\ttop: 1px;\r\n\t}\r\n.leaflet-control-layers label {\r\n\tdisplay: block;\r\n\t}\r\n.leaflet-control-layers-separator {\r\n\theight: 0;\r\n\tborder-top: 1px solid #ddd;\r\n\tmargin: 5px -10px 5px -6px;\r\n\t}\r\n\r\n/* Default icon URLs */\r\n.leaflet-default-icon-path {\r\n\tbackground-image: url(images/marker-icon.png);\r\n\t}\r\n\r\n\r\n/* attribution and scale controls */\r\n\r\n.leaflet-container .leaflet-control-attribution {\r\n\tbackground: #fff;\r\n\tbackground: rgba(255, 255, 255, 0.7);\r\n\tmargin: 0;\r\n\t}\r\n.leaflet-control-attribution,\r\n.leaflet-control-scale-line {\r\n\tpadding: 0 5px;\r\n\tcolor: #333;\r\n\t}\r\n.leaflet-control-attribution a {\r\n\ttext-decoration: none;\r\n\t}\r\n.leaflet-control-attribution a:hover {\r\n\ttext-decoration: underline;\r\n\t}\r\n.leaflet-container .leaflet-control-attribution,\r\n.leaflet-container .leaflet-control-scale {\r\n\tfont-size: 11px;\r\n\t}\r\n.leaflet-left .leaflet-control-scale {\r\n\tmargin-left: 5px;\r\n\t}\r\n.leaflet-bottom .leaflet-control-scale {\r\n\tmargin-bottom: 5px;\r\n\t}\r\n.leaflet-control-scale-line {\r\n\tborder: 2px solid #777;\r\n\tborder-top: none;\r\n\tline-height: 1.1;\r\n\tpadding: 2px 5px 1px;\r\n\tfont-size: 11px;\r\n\twhite-space: nowrap;\r\n\toverflow: hidden;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\r\n\tbackground: #fff;\r\n\tbackground: rgba(255, 255, 255, 0.5);\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child) {\r\n\tborder-top: 2px solid #777;\r\n\tborder-bottom: none;\r\n\tmargin-top: -2px;\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\r\n\tborder-bottom: 2px solid #777;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-attribution,\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tbox-shadow: none;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tborder: 2px solid rgba(0,0,0,0.2);\r\n\tbackground-clip: padding-box;\r\n\t}\r\n\r\n\r\n/* popup */\r\n\r\n.leaflet-popup {\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\tmargin-bottom: 20px;\r\n\t}\r\n.leaflet-popup-content-wrapper {\r\n\tpadding: 1px;\r\n\ttext-align: left;\r\n\tborder-radius: 12px;\r\n\t}\r\n.leaflet-popup-content {\r\n\tmargin: 13px 19px;\r\n\tline-height: 1.4;\r\n\t}\r\n.leaflet-popup-content p {\r\n\tmargin: 18px 0;\r\n\t}\r\n.leaflet-popup-tip-container {\r\n\twidth: 40px;\r\n\theight: 20px;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\tmargin-left: -20px;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-popup-tip {\r\n\twidth: 17px;\r\n\theight: 17px;\r\n\tpadding: 1px;\r\n\r\n\tmargin: -10px auto 0;\r\n\r\n\t-webkit-transform: rotate(45deg);\r\n\t   -moz-transform: rotate(45deg);\r\n\t    -ms-transform: rotate(45deg);\r\n\t     -o-transform: rotate(45deg);\r\n\t        transform: rotate(45deg);\r\n\t}\r\n.leaflet-popup-content-wrapper,\r\n.leaflet-popup-tip {\r\n\tbackground: white;\r\n\tcolor: #333;\r\n\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tpadding: 4px 4px 0 0;\r\n\tborder: none;\r\n\ttext-align: center;\r\n\twidth: 18px;\r\n\theight: 14px;\r\n\tfont: 16px/14px Tahoma, Verdana, sans-serif;\r\n\tcolor: #c3c3c3;\r\n\ttext-decoration: none;\r\n\tfont-weight: bold;\r\n\tbackground: transparent;\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button:hover {\r\n\tcolor: #999;\r\n\t}\r\n.leaflet-popup-scrolled {\r\n\toverflow: auto;\r\n\tborder-bottom: 1px solid #ddd;\r\n\tborder-top: 1px solid #ddd;\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-popup-content-wrapper {\r\n\tzoom: 1;\r\n\t}\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\twidth: 24px;\r\n\tmargin: 0 auto;\r\n\r\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\";\r\n\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\r\n\t}\r\n.leaflet-oldie .leaflet-popup-tip-container {\r\n\tmargin-top: -1px;\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-control-zoom,\r\n.leaflet-oldie .leaflet-control-layers,\r\n.leaflet-oldie .leaflet-popup-content-wrapper,\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\tborder: 1px solid #999;\r\n\t}\r\n\r\n\r\n/* div icon */\r\n\r\n.leaflet-div-icon {\r\n\tbackground: #fff;\r\n\tborder: 1px solid #666;\r\n\t}\r\n\r\n\r\n/* Tooltip */\r\n/* Base styles for the element that has a tooltip */\r\n.leaflet-tooltip {\r\n\tposition: absolute;\r\n\tpadding: 6px;\r\n\tbackground-color: #fff;\r\n\tborder: 1px solid #fff;\r\n\tborder-radius: 3px;\r\n\tcolor: #222;\r\n\twhite-space: nowrap;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n\tpointer-events: none;\r\n\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-tooltip.leaflet-clickable {\r\n\tcursor: pointer;\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-tooltip-top:before,\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\tposition: absolute;\r\n\tpointer-events: none;\r\n\tborder: 6px solid transparent;\r\n\tbackground: transparent;\r\n\tcontent: \"\";\r\n\t}\r\n\r\n/* Directions */\r\n\r\n.leaflet-tooltip-bottom {\r\n\tmargin-top: 6px;\r\n}\r\n.leaflet-tooltip-top {\r\n\tmargin-top: -6px;\r\n}\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-top:before {\r\n\tleft: 50%;\r\n\tmargin-left: -6px;\r\n\t}\r\n.leaflet-tooltip-top:before {\r\n\tbottom: 0;\r\n\tmargin-bottom: -12px;\r\n\tborder-top-color: #fff;\r\n\t}\r\n.leaflet-tooltip-bottom:before {\r\n\ttop: 0;\r\n\tmargin-top: -12px;\r\n\tmargin-left: -6px;\r\n\tborder-bottom-color: #fff;\r\n\t}\r\n.leaflet-tooltip-left {\r\n\tmargin-left: -6px;\r\n}\r\n.leaflet-tooltip-right {\r\n\tmargin-left: 6px;\r\n}\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\ttop: 50%;\r\n\tmargin-top: -6px;\r\n\t}\r\n.leaflet-tooltip-left:before {\r\n\tright: 0;\r\n\tmargin-right: -12px;\r\n\tborder-left-color: #fff;\r\n\t}\r\n.leaflet-tooltip-right:before {\r\n\tleft: 0;\r\n\tmargin-left: -12px;\r\n\tborder-right-color: #fff;\r\n\t}\r\n"],"names":[],"sourceRoot":"webpack:///"}