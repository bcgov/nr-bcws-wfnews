{"version":3,"file":"styles.css","mappings":";;;AAAA,mDAAmD,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,uBAAuB,cAAc,CAAC,YAAY,CAAC,6BAA6B,YAAY,CAAC,4BAA0G,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,kBAAkB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,YAAY,CAA+E,YAAY,CAAC,cAAc,CAAC,eAAe,CAAC,sBAAsB,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,uCAAuC,CAAuK,iDAAiD,CAAC,SAAS,CAAC,mDAAmD,SAAS,CAAC,6CAA6C,mDAAmD,UAAU,CAAC,CAAC,2BAA2B,2BAA2B,CAAC,iGAAiG,SAAS,CAAC,6CAA6C,iBAAiB,CAAC,YAAY,CAA+E,YAAY,CAAqK,qBAAqB,CAAC,aAAa,CAAC,cAAc,CAAC,wBAAwB,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,sBAAsB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,aAAa,CAAC,aAAa,CAAkO,yGAAyG,CAAwB,iBAAiB,CAAC,aAAa,CAAC,eAAe,CAAC,qBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,sCAA+F,qBAAqB,CAAC,kBAAkB,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,CAAC,sBAAsB,uCAAuC,CAAC,iCAAiC,kBAAkB,CAAC,iBAA+F,YAAY,CAAqK,qBAAqB,CAAC,UAAU,CAAC,yBAAuG,YAAY,CAAiG,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,0DAAqI,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,0FAA0F,cAAc,CAAC,gGAAgG,gCAAgC,CAAC,sBAAoG,YAAY,CAAqK,qBAAqB,CAA4E,aAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,aAAa,CAA4E,aAAa,CAAC,iCAA+G,YAAY,CAAiG,kBAAkB,CAAC,wDAAmH,sBAAsB,CAAC,mFAAmF,oBAAoB,CAAC,uBAAuB,UAAU,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,+CAA+C,oBAAoB,CAAC,mEAAmE,cAAc,CAAC,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,8EAA8E,iBAAiB,CAAC,UAAU,CAAC,mBAAmB,CAAC,oFAAoF,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,0BAA0B,CAAC,6CAA6C,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,uCAAuC,CAAC,uCAAuC,CAAC,qDAAqD,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAA+E,YAAY,CAAiG,kBAAkB,CAAkG,sBAAsB,CAA0D,qBAAqB,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,4BAA4B,CAA0B,mBAAmB,CAAC,aAAa,CAAC,cAAc,CAAC,iDAAiD,UAAU,CAAC,uFAAuF,2BAA2B,CAAC,sDAAsD,2BAA2B,CAAC,wBAAwB,CAAC,iFAAgM,gDAAgD,CAAC,sDAAsD,cAAc,CAAC,wHAAwH,oBAAoB,CAAC,kHAAkH,UAAU,CAAC,sHAAsH,2BAA2B,CAAC,gQAAgQ,gCAAgC,CAAC,sDAAsD,6BAA6B,CAAC,sFAAuH,4BAA4B,CAAqC,+BAA+B,CAAC,oFAAsH,6BAA6B,CAAsC,gCAAgC,CAAC,cAA4F,YAAY,CAAkG,sBAAsB,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,iBAAiB,CAA2G,mBAAmB,CAAqK,qBAAqB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,sBAAiG,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,UAAU,CAAC,aAAa,CAAC,0CAA0C,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,+BAA+B,CAAwB,iBAAiB,CAAC,mBAAmB,CAAC,eAAe,CAAC,YAAY,CAAC,sBAAsB,oBAAoB,CAAqD,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,yDAAyD,UAAU,CAAC,oBAAoB,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAwB,iBAAiB,CAAmG,0BAA0B,CAAC,6BAA6B,CAAC,6BAA6B,OAAO,CAAC,4BAA4B,UAAU,CAAC,uBAAuB,wBAAwB,CAA4C,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,uCAAuC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,4BAA4B,CAAC,aAAa,CAAC,aAAa,CAAC,sDAAsD,iBAAiB,CAA2G,mBAAmB,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,6DAA6D,YAAY,CAAC,cAAc,CAAwB,iBAAiB,CAAsI,sCAAsC,CAAC,mEAAmE,gCAAgC,CAAC,2DAAyI,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAiL,6BAA8G,CAAC,4DAA4D,SAAS,CAAwB,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,uCAAuC,oBAAoB,CAAC,cAAc,CAAC,iCAAiC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,iDAAiD,iBAAiB,CAAC,YAAY,CAA4N,sGAAsG,CAAC,gKAAgK,UAAU,CAAC,mFAAmF,cAAc,CAAC,yBAAyB,eAAe,CAAC,aAAa,CAAC,0CAA0C,eAAe,CAAC,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,uCAAuC,eAAe,CAAC,eAAe,CAAC,uCAAuC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,sCAAsC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,0BAAwG,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,iCAAiC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAsB,eAAe,CAAC,gEAAgE,WAAW,CAAC,UAAU,CAAsI,sCAAsC,CAAC,sEAAsE,+BAA+B,CAAC,uBAAuB,cAAc,CAAC,cAAc,CAAC,uCAAuC,CAAC,+CAA+C,SAAS,CAAC,+EAA6J,YAAY,CAA4G,6BAA6B,CAAC,cAAc,CAAC,cAAc,CAAC,0DAA0D,oCAAoC,CAAC,qDAAqD,aAAa,CAAC,oDAAoD,WAAW,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,qBAAmG,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,aAAa,CAAC,8CAA8C,6BAA6B,CAAwB,iBAAiB,CAA8G,8BAA8B,CAAC,6EAA6E,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,sKAAsK,kBAAkB,CAAC,UAAU,CAAC,8DAA8D,iBAAiB,CAAC,cAAc,CAAC,eAAe,oBAAoB,CAAC,gBAAgB,SAAS,CAAC,cAAc,CAAC,wCAAwC,SAAS,CAAC,8CAA8C,gCAAgC,CAAC,mEAAwF,eAAe,CAAC,uBAAuB,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,C;;;;ACmU/sgB;;;;;ECxOA;EACA;EACA;EACA;EAEA;EDyOE;AE7TJ;;AFgUE;;;;;ECjPA;EACA;EACA;EACA;EAEA;EDkPE;AEzTJ;;AF4TE;;;;;EC1PA;EACA;EACA;EACA;EAEA;ED2PE;AErTJ;;AFwTE;;;;;ECnQA;EACA;EACA;EACA;EAEA;EDoQE;AEjTJ;;AFuTE;;;EC1RE;EDqSA;AE3TJ;;AF8TE;;;ECxSE;EDmTA;AElUJ;;AFqUE;;;;EC3SA;EACA;EACA;EACA;EAEA;ACpBF;;AFiUE;;;;;EClTA;EACA;EACA;EACA;EAEA;ACRF;AF4TI;;;;;EACE;AEtTN;;AF0TE;;;;EC9TA;EACA;EACA;EACA;EAEA;ACUF;;AFsTE;;ECrUA;EACA;EACA;EACA;EAEA;EDmUE;AE/SJ;;AFkTE;;EC3UA;EACA;EACA;EACA;EAEA;EDyUE;AE3SJ;;AF8SE;;ECjVA;EACA;EACA;EACA;EAEA;ED+UE;AEvSJ;;AF0SE;;ECvVA;EACA;EACA;EACA;EAEA;EDqVE;AEnSJ;;ACqEE;EACE,gBA1MU;EA2MV,eA5MQ;EA6MR;ADlEJ;;ACqEE;EAEE;ADnEJ;;ACsEE;EACE;ADnEJ;;AE3IE;EHsEA;EACA;EACA;EACA;EAEA;ACwEF;;AGnEE;EACE;AHsEJ;;AIsBE;EACE;AJnBJ;;AIsBE;EACE,eAzLsB;AJsK1B;;AIsBE;;EAGI;EACA;AJpBN;;AIwBE;EAEI,eArM6B;EAsM7B;AJtBN;;AKpIE;EAEI;EACA;EACA;ALsIN;;AKlIE;ENwBA;EACA;EACA;EACA;EAEA;AC6GF;;AMjME;;EAGE;ANmMJ;AOvME;;EARA;EACA;EACA;EAQE;EACA;AP4MJ;AOzMI;;EACE,eDJwB;ANgN9B;;AQ1GE;EACE;AR6GJ;;AQ1GE;EAEI;EACA;AR4GN;;AQxGE;EACE;AR2GJ;;AQxGE;EACE;AR2GJ;;AQxGE;EAEI;EACA;AR0GN;;AS3KE;;;;;;;EVkBA;EACA;EACA;EACA;EAEA;EUfE;ATkLJ;;AU1OE;EACE;AV6OJ;;AU1OE;;EAEE;EACA;AV6OJ;;AWrNE;EAEI;EACA;AXuNN;;AYzPE;EbkEA;EACA;EACA;EACA;EAEA;AC0LF;;AavGE;;EAGI;EACA;EACA;AbyGN;;AczIE;ECiLE;EACA;EC5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AhB+NJ;AiB1QE;EACE;AjB4QJ;;AiBzQE;EAEI;EACA;AjB2QN;;AiBvQE;EACE;AjB0QJ;;AiBvQE;;EAEE;AjB0QJ;;AkBhSE;EACE;EACA,eAzBQ;EA0BR,gBAzBe;EA0Bf,mBA1Be;AlB6TnB;;AkBhSE;EACE,eA3BgB;EA4BhB,gBA3BuB;EA4BvB,mBA5BuB;AlB+T3B;;AmBnPE;EACE;AnBsPJ;;AoBtKE;ErB9EA;EACA;EACA;EACA;EAEA;ACuPF;;AoB1KE;EACE,yBAPuB;ApBoL3B;;AoBvKI;;EACE,eAvB2B;EAwB3B,kBAxCU;ApBmNhB;AoBvKI;;EACE;EACA;ApB0KN;AoBxKM;;EACE;EACA,kBAlDQ;ApB6NhB;;AoBtKE;EACE;EAEA;ApBwKJ;;AoBpKI;;EA3EF;EAEA;ApBmPF;AoBlKI;EAnFF;EAEA;ApBuPF;;AoBhKE;EACE;EACA,sBAnEiB;ApBsOrB;;AoBhKE;EACE;ApBmKJ;;AoBhKE;EAGE,iBA/DuB;ApBgO3B;;AoB9JE;EACE,cA9EoB;EA+EpB,0BAxEqB;EA4ErB;ApB8JJ;;AqBxSI;EACE,sBAJqB;ArB+S3B;AqBxSI;EACE;ArB0SN;AqBtSM;;EA1DJ;EAEA;ArBmWF;AqBpSM;EAjEJ;EAEA;ArBuWF;AqBhSM;EAzEJ;EAEA;ArB2WF;AqB9RI;EACE;ArBgSN;AqB7RI;EAGE,cAxCqB;ArBqU3B;AqB1RI;EACE,0BAhDmB;EAoDnB;ArByRN;;AqBnRE;EAGM;;IA5FN;ErBkXA;EqB/QM;IAnGN;ErBqXA;EqB1QM;IA3GN;ErBwXA;AACF;AsBpWI;EACE;AtBsWN;AsBnWI;EACE;EACA,kBAT2B;AtB8WjC;AsBjWM;;EArCJ;EAEA;AtByYF;AsB7VM;EA9CJ;EAEA;AtB6YF;;AuBtVI;EACE;AvByVN;AuBtVI;EACE;EACA,mBAT8B;AvBiWpC;AuBpVM;;EA5CJ;EAEA;AvBmYF;AuBhVM;EArDJ;EAEA;AvBuYF;;AwB7YE;EACE;AxBgZJ;;AwB7YE;EACE;AxBgZJ;;AyBvXE;EACE;AzB0XJ;;AyBtXE;EACE;AzByXJ;;A0B/cE;E3BiEA;EACA;EACA;EACA;EAEA;ACiZF;;A2B/YE;EACE;EACA;A3BkZJ;A2BhZI;;EAEE,eAjGkB;A3BmfxB;;A4BvaE;EACE;A5B0aJ;;A6BrWE;EACE;A7BwWJ;;A6BrWE;EAEI;EACA;EACA;A7BuWN;;A8B3bE;EACE;A9B8bJ;;A+BzVE;EAEI;EACA;EACA;A/B2VN;;AgC9dE;EAEI;EACA;EACA;AhCgeN;;AiCjeE;EACE,iDAHY;AjCuehB;;AiCjeE;EACE,iDAPY;AjC2ehB;;AiC/dI;EACE;AjCkeN;AOzhBE;EARA;EACA;EACA;EAQE;EACA;AP6hBJ;AO1hBI;EACE,e0BiD0B;AjC2ehC;AiCxeI;EACE;AjC0eN;AOtiBE;EARA;EACA;EACA;EAQE;EACA;AP0iBJ;AOviBI;EACE,e0BsD0B;AjCmfhC;AiChfI;EACE;EACA;EACA;AjCkfN;;AiC5eI;EACE;AjC+eN;AOzjBE;EARA;EACA;EACA;EAQE;EACA;AP6jBJ;AO1jBI;EACE,e0BoE0B;AjCwfhC;AiCrfI;EACE;AjCufN;AOtkBE;EARA;EACA;EACA;EAQE;EACA;AP0kBJ;AOvkBI;EACE,e0ByE0B;AjCggBhC;AiC7fI;EACE,iDA1CU;EA2CV;EACA;AjC+fN;;AkC/iBE;;EAGI;EACA;AlCijBN;;AmCrkBE;EAEI;EACA;AnCukBN;;AmCnkBE;EACE;EAEE;EACA;EACA;AnCqkBN;;AoCxkBE;EACE;ApC2kBJ;;AoCxkBE;EACE;EACA;ApC2kBJ;;AoCxkBE;EACE;ApC2kBJ;;AqC1nBE;EACE;EAIA;ArC0nBJ;AqCnnBI;EACE;ArCqnBN;;AqCjnBE;EACE;ArConBJ;;AqCjnBE;EACE;EACA;EACA;EAEA;EAIA;ArCgnBJ;AsCjmBI;EDXE;ArC+mBN;;AsCnpBE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;EAMA;AtC0oBJ;AsCxoBI;EACE;EACA;AtC0oBN;;AuC1pBE;EAEE;EAGA;EACA;EACA;EACA;AvC0pBJ;;AuCtpBE;EACE;EACA,aA3BwB;AvCorB5B;AuCvpBI;EAGE;AvCupBN;;AuC/oBE;EACE;EACA;EACA,aA1Cc;AvC4rBlB;;AuC9oBE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;AvC4oBJ;;AuCzoBE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;AvC0oBJ;AuCxoBI;EACE;AvC0oBN;AuCroBM;EAGE;AvCqoBR;;AuChoBE;EACE,+BAtFqB;AvCytBzB;;AuChoBE;EAEE;EACA;EACA;AvCkoBJ;AuC5nBI;EACE;EACA;AvC8nBN;;AuC1nBE;EACE;AvC6nBJ;;AuCxnBE;EACE;EACA,aArHc;EA0Hd;EAIA;EAGA;EACA;AvCknBJ;;AuC9mBE;EACE;EAKA;EAKA;AvCymBJ;;AwC1vBE;EACE;AxC6vBJ;;AwCvvBE;EAyCA;EACA;EAxCE;EACA;AxC2vBJ;;AwClvBE;EA6BA;EACA;EA5BE;AxCsvBJ;;AwC5uBE;AACA;AAEA;EAEE;AxC6uBJ;;AwC1uBE;EAEE;AxC4uBJ;;AyC3wBE;EACE;AzC8wBJ;AyC5wBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AzCuwBN;AyC/vBI;EACE;AzCiwBN;;AsCttBM;EG7BA;AzCuvBN;;AyClyBE;EACE;AzCqyBJ;AyCnyBI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AzC8xBN;AyCtxBI;EACE;AzCwxBN;;AsC7uBM;EG7BA;AzC8wBN;;AapuBE;EAKE;EACA;AbmuBJ;AarwBE;EACE;AbuwBJ;AarwBE;EACE;AbuwBJ;AarwBE;EACE;AbuwBJ;AanwBI;EAEE;AbowBN;Aav0BE;EACE;Aby0BJ;Aat0BE;EACE;Abw0BJ;Aar0BE;EACE;Abu0BJ;Aap0BE;EACE;Abs0BJ;AanvBI;EACE,YA1GY;EA2GZ;AbqvBN;;AajvBE;EACE;AbovBJ;;Aa/uBE;EACE;AbkvBJ;;Aa/uBE;EAEE;EACA;AbivBJ;Aa9yBE;EACE;AbgzBJ;Aa9yBE;EACE;AbgzBJ;Aa9yBE;EACE;AbgzBJ;Aa5yBI;EAEE;Ab6yBN;Aa1zBE;EACE;Ab4zBJ;Aa1zBE;EACE;Ab4zBJ;Aa1zBE;EACE;Ab4zBJ;AaxzBI;EAEE;AbyzBN;Aa31BE;EAXA,0CADmB;Ab02BrB;Aa11BE;EAfA,oCADmB;Ab62BrB;Aaz1BE;EAnBA,0CADmB;Abg3BrB;;A2Cx1BE;E3BgBE;AhB40BJ;;A2C51BE;E3BgBE;AhBg1BJ;A2Ch2BE;E3BgBE;AhBm1BJ;A2Cn2BE;E3BgBE;AhBs1BJ;;A2Ct2BE;E3BgBE;AhB01BJ;A2C12BE;E3BgBE;AhB61BJ;A2C72BE;E3BgBE;AhBg2BJ;;A4Ct3BM;E5BsBF;AhBo2BJ;A4Ct3BM;E5BkBF;AhBu2BJ;A4Cr3BM;E5BcF;AhB02BJ;A4Cp3BM;E5BUF;AhB62BJ;A6Ct4BE;E7ByBE;EAAA;AhBi3BJ;A4C52BM;E5BLF;EAAA;AhBq3BJ;A4C52BM;E5BTF;EAAA;AhBy3BJ;A4C52BM;E5BbF;EAAA;AhB63BJ;A4C52BM;E5BjBF;EAAA;AhBi4BJ;A6C15BE;E7ByBE;EAAA;EAAA;EAAA;AhBu4BJ;A4Cr2BM;E5BlCF;EAAA;AhB24BJ;A4Cr2BM;E5BtCF;EAAA;AhB+4BJ;A4Cr2BM;E5B1CF;EAAA;AhBm5BJ;A4Cr2BM;E5B9CF;EAAA;AhBu5BJ;A6Ch7BE;E7ByBE;EAAA;EAAA;EAAA;EAAA;AhB85BJ;A4C/1BI;E5B/DA;AhBi6BJ;A4C71BM;E5BpEF;AhBo6BJ;A4C51BM;E5BxEF;AhBu6BJ;A4C31BM;E5B5EF;AhB06BJ;A4C11BM;E5BhFF;AhB66BJ;A6Ct8BE;E7ByBE;EAAA;EAAA;EAAA;AhBm7BJ;A4Cl1BI;ECxKF;EACA;A7C6/BF;A6Cr/BE;EACE;A7Cu/BJ;A6Cl/BI;EACE;A7Co/BN;A6Ch/BE;EACE;A7Ck/BJ;A6C7+BE;EA1BA;EACA;A7C0gCF;A6C7+BE;EA9BA;EACA;A7C8gCF;A6C7+BE;EAlCA;EACA;A7CkhCF;A4Cv2BI;EC5KF;EACA;A7CshCF;A6C9gCE;EACE;A7CghCJ;A6C3gCI;EACE;A7C6gCN;A6CzgCE;EACE;A7C2gCJ;A6CtgCE;EA1BA;EACA;A7CmiCF;A6CtgCE;EA9BA;EACA;A7CuiCF;A6CtgCE;EAlCA;EACA;A7C2iCF;A8CliCI;EDVF;EACA;A7C+iCF;A6CviCE;EACE;A7CyiCJ;A6CpiCI;EACE;A7CsiCN;A6CliCE;EACE;A7CoiCJ;A6C/hCE;EA1BA;EACA;A7C4jCF;A6C/hCE;EA9BA;EACA;A7CgkCF;A6C/hCE;EAlCA;EACA;A7CokCF;A8CxjCM;E9B0DF;AhBigCJ;A8CvjCM;E9BsDF;AhBogCJ;A8CtjCM;E9BkDF;AhBugCJ;A6ChiCE;E7ByBE;EAAA;AhB2gCJ;;A4Cj5BI;;;;E5B1HA;AhBkhCJ;A8C3iCE;EC8FE,WAnBK;EAoBL,YApBK;EAqBL;A/Cg9BJ;A+C78BE;EAEI,gBA1BG;EA2BH,eA3BG;A/Cy+BT;A+Cj8BI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AhDg9BlC;A+C17BI;EAEI,gBApBe;EAqBf,eArBe;A/Cg9BvB;A+Ct7BE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AhD+iCN;;AW/mCE;EACE;AXknCJ;AWhnCI;EAEE;AXinCN;AW7mCI;EACE;AX+mCN;AW5mCI;EACE;EACA;AX8mCN;AW3mCI;EACE;AX6mCN;;AWzmCE;EACE;AX4mCJ;;AWzmCE;EACE;AX4mCJ;;AWzmCE;EACE;AX4mCJ;;AYhpCE;EACE;AZmpCJ;;AYhpCE;EACE;AZmpCJ;;AkDxpCE;EAII;AlDwpCN;;AmDhoCE;EACE,0BAXe;AnD8oCnB;AmDloCI;EACE,cANa;AnD0oCnB;;AmDxqCI;;EACE,cAkBM;AnD0pCZ;AmDxqCI;;EAKE,mBASM;AnD8pCZ;AmD3qCM;;EACE,cAeO;AnD+pCf;;AmDrrCI;;EACE,cAmBK;AnDsqCX;AmDrrCI;;EAKE,mBAUK;AnD0qCX;AmDxrCM;;EACE,cAeO;AnD4qCf;;AmDlsCI;;EACE,cAmBK;AnDmrCX;AmDlsCI;;EAKE,mBAUK;AnDurCX;AmDrsCM;;EACE,cAeO;AnDyrCf;;AmD/sCI;;EACE,cAoBG;AnD+rCT;AmD/sCI;;EAKE,mBAWG;AnDmsCT;AmDltCM;;EACE,cAeO;AnDssCf;;AmDhqCI;;EACE,cA/Ba;AnDmsCnB;AmDjqCI;;EACE,mBAnCa;AnDusCnB;;AoD1tCE;EAIE;EACA;ApD0tCJ;;AoDntCI;EpCiDA;AhBsqCJ;;AoDvtCI;EpCiDA;AhB0qCJ;;AoD3tCI;EpCiDA;AhB8qCJ;;AoD/tCI;EpCiDA;AhBkrCJ;;AoDnuCI;EpCiDA;AhBsrCJ;;AoDvuCI;EpCiDA;AhB0rCJ;;AoD3uCI;EpCiDA;AhB8rCJ;;AoD/uCI;EpCiDA;AhBksCJ;;AoDnvCI;EpCiDA;AhBssCJ;;AoDvvCI;EpCiDA;AhB0sCJ;;AoD3vCI;EpCiDA;AhB8sCJ;;AoD/vCI;EpCiDA;AhBktCJ;;AoDnwCI;EpCiDA;AhBstCJ;;AoDvwCI;EpCiDA;AhB0tCJ;;AoD3wCI;EpCiDA;AhB8tCJ;;AoD/wCI;EpCiDA;AhBkuCJ;;AoDnxCI;EpCiDA;AhBsuCJ;;AoDvxCI;EpCiDA;AhB0uCJ;;AoD3xCI;EpCiDA;AhB8uCJ;;AoD/xCI;EpCiDA;AhBkvCJ;;AoDnyCI;EpCiDA;AhBsvCJ;;AoDvyCI;EpCiDA;AhB0vCJ;;AoD3yCI;EpCiDA;AhB8vCJ;;AoD/yCI;EpCiDA;AhBkwCJ;;AoDnzCI;EpCiDA;AhBswCJ;;AoDhzCI;EACE;ApDmzCN;;AiB10CE;EAEE;EACA;AjB40CJ;A2C/xCE;E3BgBE;AhBkxCJ;A2ClyCE;E3BgBE;AhBqxCJ;;AiB10CE;EACE;AjB60CJ;;AqD90CE;EACE;ArDi1CJ;;AqD90CE;EACE;ArDi1CJ;;AqD90CE;EACE;ArDi1CJ;;AqD70CI;EACE;ArDg1CN;AqD70CI;EACE;ArD+0CN;AqD50CI;EACE;ArD80CN;;AqDz0CI;EACE;ArD40CN;AqDz0CI;EACE;ArD20CN;AqDx0CI;EACE;ArD00CN;;AsD33CI;EACE;AtD83CN;AsD33CI;EACE;AtD63CN;AsD13CI;EACE;AtD43CN;;AkB73CE;EACE;AlBg4CJ;;AmBl4CE;EACE;AnBq4CJ;;AmBl4CE;;EAEE;AnBq4CJ;;AmBl4CE;EACE;AnBq4CJ;AuD35CE;EpCyBI;AnBq4CN;AuD15CE;EpCqBI;AnBw4CN;AuDz5CE;EpCiBI;AnB24CN;AuDt5CE;EpCWI;AnB84CN;;AmBz3CE;EACE;AnB43CJ;;AmBz3CE;;EAEE;AnB43CJ;;AmBz3CE;EACE;AnB43CJ;;AmBx3CI;;EAEE;AnB23CN;;AoB55CE;EACE,yBAZA;ApB26CJ;;AoB55CE;EACE,yBAhBA;ApB+6CJ;;AoB55CE;EACE,cAnBoB;ApBk7CxB;AoB75CI;EACE,cAhBqB;ApB+6C3B;AoB55CI;EACE,cAnBmB;ApBi7CzB;;AoB15CE;EACE,cA9BqB;ApB27CzB;;AoB15CE;EACE,qCA9BA;ApB27CJ;;AoBz5CI;EACE,yBAhCsB;ApB47C5B;AoB15CM;EACE,yBArCmB;ApBi8C3B;AoBz5CM;EACE,yBAxCiB;ApBm8CzB;;AoBr5CI;EACE,cA9CsB;ApBs8C5B;AoBr5CI;EACE,cApDqB;ApB28C3B;AoBp5CI;EACE,cAvDmB;ApB68CzB;;AoB94CI;EACE,cAhEmB;ApBi9CzB;AoB/4CM;;EAEE,cApEiB;ApBq9CzB;AoB74CI;;EAEE,yBA1EmB;ApBy9CzB;;AoB34CE;EACE,cA/EqB;ApB69CzB;;AqBx+CI;EACE,0BANU;ArBi/ChB;AqBx+CI;EACE,0BAVU;ArBo/ChB;AqBv+CI;EACE,qCAZF;ArBq/CJ;AqBt+CI;EmC3BF;EACA;EACA;AxDogDF;;AyD5/CI;EACE,qCAJF;AzDmgDJ;AyD5/CI;EDdF;EACA;EACA;AxD6gDF;;AsB7/CI;EACE,qCATF;AtBygDJ;AsB7/CI;EACE,qCAXF;AtB0gDJ;AsB5/CI;EACE,qCAbF;AtB2gDJ;AsB1/CM;EACE,0BAjBiB;AtB6gDzB;AsBz/CM;EACE;AtB2/CR;;AuBvgDI;EACE,0BAXF;AvBqhDJ;AuBvgDI;EACE,0BAbF;AvBshDJ;AuBrgDM;EACE,cAjBkB;AvBwhD1B;AuBpgDM;EACE,cApBiB;AvB0hDzB;AuBngDM;EACE,cAvBe;AvB4hDvB;AuB//CM;EACE,cA9Be;AvB+hDvB;AuB5/CM;EACE,0BA3CiB;AvByiDzB;AuB3/CM;EACE,0BAtCJ;AvBmiDJ;;AwB7iDE;EACE;AxBgjDJ;;AwB7iDE;EACE;AxBgjDJ;;AwB7iDE;EACE;AxBgjDJ;;AwB7iDE;EACE;AxBgjDJ;;AwB7iDE;EACE;AxBgjDJ;A2CrhDE;E3BgBE;AhBwgDJ;AwBhjDI;EACE;AxBkjDN;;AwB5iDM;EACE;AxB+iDR;AwB5iDM;EACE;AxB8iDR;AwB3iDM;EACE;AxB6iDR;AwBziDI;EACE;AxB2iDN;AwBxiDI;EACE;AxB0iDN;;AyB7kDE;EACE;AzBglDJ;;AyB7kDE;EACE,aAdoB;AzB8lDxB;;AyB7kDE;EAGE;AzB8kDJ;;AyB3kDE;EACE,yBAxBoB;AzBsmDxB;;AyB1kDI;EACE;AzB6kDN;AyB1kDI;EACE;AzB4kDN;AyBzkDI;EACE;AzB2kDN;;AyBpkDM;EACE,yBAtCW;AzB6mDnB;AyBlkDM;EACE,qBA5CW;AzBgnDnB;AyBhkDI;EACE;AzBkkDN;;AyB5jDE;EACE;AzB+jDJ;;AyB1jDI;;EACE;AzB8jDN;AyB3jDI;;EACE;AzB8jDN;AyB3jDI;;EACE;AzB8jDN;;A0DnpDE;EAEE;EACA;A1DqpDJ;A2CrmDE;E3BgBE;AhBwlDJ;A0DjpDI;EACE;A1DmpDN;A0DjpDM;EACE;A1DmpDR;;A0B9pDE;EVgEE;EU9DA;EACA;A1BiqDJ;;A2B1nDE;EA9CA,yBA2CwB;EA1CxB,0BA2CwB;A3BioD1B;A2B1qDE;EACE,0BAwCsB;EAvCtB;A3B4qDJ;A2B/nDM;EXkBF;AhBgnDJ;A2B9nDM;EACE;A3BgoDR;A2B5nDI;EACE;A3B8nDN;A2B3nDI;EACE;A3B6nDN;;A2BxnDI;EArEF,yBAyBE;EAxBF,YAuBwB;A3B0qD1B;A2B/rDE;EACE,YAoBsB;EAnBtB;A3BisDJ;A2B3qDE;EAVA,0CADmB;A3ByrDrB;A2BhoDI;EAzEF,yBAyBE;EAxBF,YAuBwB;A3BqrD1B;A2B1sDE;EACE,YAoBsB;EAnBtB;A3B4sDJ;A2BtrDE;EAVA,0CADmB;A3BosDrB;A2BvoDI;EA7EF,yBAyBE;EAxBF,0BAuBwB;A3BgsD1B;A2BrtDE;EACE,0BAoBsB;EAnBtB;A3ButDJ;A2BjsDE;EAVA,oCADmB;A3B+sDrB;;A4BhuDI;EACE;A5BmuDN;A4BhuDI;EAGE;A5BguDN;A4B7tDI;EAGE;A5B6tDN;A4B1uDI;EACE;A5B4uDN;A4BzuDI;EAGE;A5ByuDN;A4BtuDI;EAGE;A5BsuDN;A4BnvDI;EACE;A5BqvDN;A4BlvDI;EAGE;A5BkvDN;A4B/uDI;EAGE;A5B+uDN;A4BxsDI;EAGE,uBAhBqB;A5BwtD3B;;A4BpsDE;EZUE;EYRA;A5BusDJ;;A4BpsDE;EACE,qCA3BoB;A5BkuDxB;;A8BrvDE;EACE;A9BwvDJ;;A8B/wDE;EACE;A9BkxDJ;A8B/wDE;;EAIE;A9B+wDJ;A8BvxDE;EACE;A9ByxDJ;A8BtxDE;;EAIE;A9BsxDJ;A8B9xDE;EACE;A9BgyDJ;A8B7xDE;;EAIE;A9B6xDJ;A8B1vDM;;EAEE;A9B4vDR;A8BzvDM;;EAEE;A9B2vDR;A8BxvDM;EACE;A9B0vDR;A8BpvDI;EACE;A9BsvDN;;A+BrwDE;EACE,qCAbqB;A/BqxDzB;;A+BtzDE;;;EAGE;A/ByzDJ;A+BtzDE;EACE;A/BwzDJ;A+BrzDE;EAGE,uCADQ;A/BszDZ;A+Bl0DE;;;EAGE;A/Bo0DJ;A+Bj0DE;EACE;A/Bm0DJ;A+Bh0DE;EAGE,0CADQ;A/Bi0DZ;A+B70DE;;;EAGE;A/B+0DJ;A+B50DE;EACE;A/B80DJ;A+B30DE;EAGE,wCADQ;A/B40DZ;;A+BvxDI;;EACE,qCAhC2B;A/B2zDjC;;A+BtxDI;;;EAGE,qCAvCwB;A/Bg0D9B;A+BrxDM;EACE,qCA5CsB;A/Bm0D9B;;A+BjxDI;EAGE,qCADQ;A/BmxDd;A+BxwDM;;EAEE,qCA/DJ;A/By0DJ;A+BtwDQ;;EAEE,qCAnEN;A/B20DJ;A+BlwDM;EACE,iCAhFiB;EAiFjB;A/BowDR;A+B/vDQ;EACE,iCAtFuB;A/Bu1DjC;A+B9vDQ;EACE,iCAzFoB;A/By1D9B;;A+B1vDE;EACE,gCAzFA;A/Bs1DJ;;A+BpvDE;EACE;EAIA;A/BovDJ;;A+B1uDE;EACE;A/B6uDJ;;AgCl4DE;EAEE;AhCo4DJ;A2Ct1DE;E3BgBE;AhBy0DJ;;AgCp4DE;EACE;EACA;AhCu4DJ;AgCp4DM;;;EAGE;AhCs4DR;;AgCj4DE;;EAEE;AhCo4DJ;;AgC73DI;;;;EACE;AhCm4DN;;AiC95DI;EACE;AjCi6DN;AiC95DI;EACE;AjCg6DN;AiC75DI;EACE;AjC+5DN;AiC55DI;EACE;EACA;AjC85DN;;AiCv5DI;;;;;EACE;AjC85DN;;AiCz5DI;EACE;AjC45DN;;AkCz7DE;EACE;AlC47DJ;;AkCz7DE;;EAEE;AlC47DJ;;AkCz7DE;;EAEE;EACA;AlC47DJ;;AkCz7DE;;EAEE;AlC47DJ;;AkCx7DI;;;;EAIE;AlC27DN;;AkCh6DI;EACE,gBALK;AlCw6DX;;A6Bt9DE;;EAEE,4CAJc;A7B69DlB;;A6Br9DI;;EAEE,yCAVY;EAWZ;A7Bw9DN;;A6Bp9DE;EACE;A7Bu9DJ;A6Br9DI;EACE;A7Bu9DN;;A6Bn9DE;EACE;A7Bs9DJ;;A6Bn9DE;EACE;A7Bs9DJ;;A6Bl9DE;;EAEE;EACA;A7Bq9DJ;;A6Bz6DI;;;;;EAEE;A7B+6DN;A6B76DM;;;;;EACE;A7Bm7DR;A6Bh8DE;EACE;A7Bk8DJ;A6Bn8DE;EACE;A7Bq8DJ;A6B97DI;;;;;EAEE;A7Bm8DN;A6Bj8DM;;;;;EACE;A7Bu8DR;A6Bp9DE;EACE;A7Bs9DJ;A6Bv9DE;EACE;A7By9DJ;A6Bl9DI;;;;;EAEE;A7Bu9DN;A6Br9DM;;;;;EACE;A7B29DR;A6Bx+DE;EACE;A7B0+DJ;A6B3+DE;EACE;A7B6+DJ;A6Bt+DI;;;;;EAEE;A7B2+DN;A6Bz+DM;;;;;EACE;A7B++DR;A6Bp+DE;EACE;A7Bs+DJ;A6Bl+DE;EACE;A7Bo+DJ;A6Bl+DI;EACE;A7Bo+DN;A6B/9DE;;;;;;;EAIE;A7Bo+DJ;A6Bj+DE;;;EAGE;EACA;A7Bm+DJ;A6B99DE;;;;;EAIE;EACA;A7Bi+DJ;A6BphEI;;;;;EAEE;A7ByhEN;A6BvhEM;;;;;EACE;A7B6hER;A6BlhEE;EACE;A7BohEJ;A6BhhEE;EACE;A7BkhEJ;A6BhhEI;EACE;A7BkhEN;A6B7gEE;;;;;;;EAIE;A7BkhEJ;A6B/gEE;;;EAGE;EACA;A7BihEJ;A6B5gEE;;;;;EAIE;EACA;A7B+gEJ;A6BlkEI;;;;;EAEE;A7BukEN;A6BrkEM;;;;;EACE;A7B2kER;A6BhkEE;EACE;A7BkkEJ;A6B9jEE;EACE;A7BgkEJ;A6B9jEI;EACE;A7BgkEN;A6B3jEE;;;;;;;EAIE;A7BgkEJ;A6B7jEE;;;EAGE;EACA;A7B+jEJ;A6B1jEE;;;;;EAIE;EACA;A7B6jEJ;;AmC/rEE;EAGE;EACA;EnB4DA;AhBqoEJ;;AmC5rEE;EACE;AnC+rEJ;;AoC3sEE;EACE;ApC8sEJ;;AoC3sEE;;;;EAIE;ApC8sEJ;;AoC3sEE;;EAEE;ApC8sEJ;;AoC3sEE;EACE;ApC8sEJ;;AoC3sEE;EACE;ApC8sEJ;;AC1oEE;EACE;AD6oEJ;;ACtoEE;EACE;ADyoEJ;;ACroEI;EACE;ADwoEN;;ACpoEE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADuoEJ;;ACpoEE;;EAEE;ADuoEJ;;ACloEE;EAEE;ADooEJ;;ACzvEE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ADuwEb;ACxvEI;EACE;AD0vEN;ACrvEI;EACE;ADuvEN;AClvEI;EACE;ADovEN;AC/uEI;EACE;EACA;ADivEN;AC5uEI;EACE;AD8uEN;ACzuEI;EACE;EACA;AD2uEN;ACruEM;EACE;ADuuER;ACluEM;EACE;EACA;ADouER;AC/tEM;EACE;ADiuER;AC5tEM;EACE;EACA;AD8tER;;ACjyEE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;ADgzEf;AChyEI;EACE;ADkyEN;AC7xEI;EACE;AD+xEN;AC1xEI;EACE;AD4xEN;ACvxEI;EACE;EACA;ADyxEN;ACpxEI;EACE;ADsxEN;ACjxEI;EACE;EACA;ADmxEN;AC7wEM;EACE;AD+wER;AC1wEM;EACE;EACA;AD4wER;ACvwEM;EACE;ADywER;ACpwEM;EACE;EACA;ADswER;;ACz0EE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ADs1Eb;ACx0EI;EACE;AD00EN;ACr0EI;EACE;ADu0EN;ACl0EI;EACE;ADo0EN;AC/zEI;EACE;EACA;ADi0EN;AC5zEI;EACE;AD8zEN;ACzzEI;EACE;EACA;AD2zEN;ACrzEM;EACE;ADuzER;AClzEM;EACE;EACA;ADozER;AC/yEM;EACE;ADizER;AC5yEM;EACE;EACA;AD8yER;;ACpuEE;EACE;EACA;ADuuEJ;AsC51EI;ErCwHE;EACA;ADuuEN;;ACluEI;EACE;EACA;ADquEN;;AChuEI;EACE;EACA;ADmuEN;;AC9tEI;EAWI;EAMF;ADktEN;;AEt5EE;EcmEE;EdjEA;EACA;AFy5EJ;;A2Cz2EE;;E3BgBE;AhB81EJ;;AG74EI;;EACE;AHi5EN;;AG74EE;EACE;AHg5EJ;AG94EI;EACE;AHg5EN;;AG54EE;EACE;EACA;AH+4EJ;AG74EI;EACE;AH+4EN;;AG34EE;EACE;AH84EJ;;AG34EE;EACE;EACA;AH84EJ;;AG14EI;EACE;EACA;EACA;AH64EN;;AGz4EE;EACE;EACA;AH44EJ;AG14EI;EACE;AH44EN;;AGx4EE;EACE;EACA;AH24EJ;AGz4EI;EACE;AH24EN;AGx4EI;EACE;AH04EN;;AGt4EE;;EAEE;AHy4EJ;;AGv3EI;EACE,iBALc;AH+3EpB;;AI75EE;EACE;AJg6EJ;;AI35EE;;;EAGE;AJ85EJ;;AI35EE;EACE;AJ85EJ;;AI35EE;;EAEE;AJ85EJ;;AI35EE;;EAEE;EACA;AJ85EJ;;AI18EE;EAiDI,0BA/Ba;AJ47EnB;;AIz5EE;EACE,0BApCe;AJg8EnB;;AIz5EE;EAOI;AJs5EN;;AIt9EE;EA2EI;AJ+4EN;;AI19EE;EAoFM;AJ04ER;;AIxzEE;EACE,iCA9MA;AJygFJ;;AIxzEE;;EAEE,kCAViB;AJq0ErB;;AIxzEE;;EAEE;AJ2zEJ;;AIxzEE;;EAEE;AJ2zEJ;;AIxzEE;;EAEE,mBAxBc;AJm1ElB;;AIxzEE;;EAEE,mBA5BuB;AJu1E3B;;AIhiFE;EACE;EACA;AJmiFJ;;AIhiFE;EAII;AJgiFN;;AIvhFE;EACE;AJ0hFJ;;AIxgFE;;EASI;AJogFN;;AIthFE;EASA;IASI;EJygFJ;AACF;AIj7EE;EY9EE;EZgFA;EACA;AJm7EJ;AIl3EE;EACE,oCA9MA;AJkkFJ;AIj3EE;;EAEE,kCAViB;AJ63ErB;AIh3EE;;EAEE;AJk3EJ;AI/2EE;;EAEE;AJi3EJ;AI92EE;;EAEE,mBAxBc;AJw4ElB;AI72EE;;EAEE,mBA5BuB;AJ24E3B;AIplFE;EACE;EACA;AJslFJ;AInlFE;EAII;AJklFN;AIzkFE;EACE;AJ2kFJ;AIzjFE;;EASI;AJojFN;AItkFE;EASA;IASI;EJwjFJ;AACF;AI55EE;EACE,kCA9MA;AJ4mFJ;AI35EE;;EAEE,kCAViB;AJu6ErB;AI15EE;;EAEE;AJ45EJ;AIz5EE;;EAEE;AJ25EJ;AIx5EE;;EAEE,mBAxBc;AJk7ElB;AIv5EE;;EAEE,mBA5BuB;AJq7E3B;AI9nFE;EACE;EACA;AJgoFJ;AI7nFE;EAII;AJ4nFN;AInnFE;EACE;AJqnFJ;AInmFE;;EASI;AJ8lFN;AIhnFE;EASA;IASI;EJkmFJ;AACF;;AI5/EE;EY5FE;AhB4lFJ;;AI5/EE;EACE;AJ+/EJ;AI7/EI;EACE;AJ+/EN;AI5/EI;EACE;AJ8/EN;;AI1/EE;EACE;AJ6/EJ;;A8CnoFE;EC8FE,WAnBK;EAoBL,YApBK;EAqBL;A/CyiFJ;A+CtiFE;EAEI,gBA1BG;EA2BH,eA3BG;A/CkkFT;A+C1hFI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AhDyiFlC;A+CnhFI;EAEI,gBApBe;EAqBf,eArBe;A/CyiFvB;A+C/gFE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AhDwoFN;A6C1pFI;EACE;A7C4pFN;;A2DntFE;EACE;A3DstFJ;;A2DntFE;EACE;A3DstFJ;;AKptFE;EAEE;EACA;ALstFJ;A2CzqFE;E3BgBE;AhB4pFJ;;AKttFE;EACE;ALytFJ;;A4DzuFM;EvDoBF;ALytFJ;;AKptFE;EACE;IAEE;ELstFJ;AACF;AKntFE;EACE;ALqtFJ;;AKltFE;;EAEE;ALqtFJ;;AKltFE;EACE;ALqtFJ;AKntFI;;EAEE;ALqtFN;;AKxrFI;EACE,YALe;ALgsFrB;AKzrFM;EACE,YAVY;ALqsFpB;;A6DnwFI;EACE;A7DswFN;A6DnwFI;EACE;A7DqwFN;A6DlwFI;EACE;A7DowFN;;A8DtwFE;EACE,yBALmC;EAMnC;A9DywFJ;;A8DtwFE;EACE,uBAXwB;EAYxB;A9DywFJ;A8DvwFI;EACE,uBAb2B;A9DsxFjC;A8DtwFI;E9C8CA;AhB2tFJ;;A8DlwFE;EACE,2CAvBmB;A9D4xFvB;A8DnwFI;EACE,0CA1BiB;EA2BjB;A9DqwFN;;A8DjwFE;EACE,0CAhCmB;EAiCnB;A9DowFJ;A8DlwFI;EACE;EACA,2CArCiB;A9DyyFvB;;A8DhwFE;EAQI;A9D4vFN;;AQ7yFI;EAIE;AR6yFN;AQ1yFI;EACE;AR4yFN;AQtyFI;EACE;IACE;ERwyFN;AACF;AQryFI;;EAIE;ARqyFN;AQlyFI;EAGE;EACA;ARkyFN;AQ/xFI;;;EAGE;EACA;ARiyFN;AQ7xFM;EACE;AR+xFR;AQ5xFM;;;EAGE;EACA;AR8xFR;AQzxFM;EACE;AR2xFR;AQxxFM;;;EAGE;EACA;AR0xFR;AQtxFI;EACE;EACA;ARwxFN;AQrxFI;EACE;ARuxFN;AQpxFI;EACE;ARsxFN;;AQlxFE;EACE;ARqxFJ;;AQlxFE;EACE;ARqxFJ;;AQlxFE;;;EAGE;ARqxFJ;;AQ5uFI;EACE,YANK;ARqvFX;;AQ5uFI;;EAEE;AR+uFN;;AQ1uFI;EACE;EACA;AR6uFN;;AQxuFM;EACE;AR2uFR;;AQtuFI;EACE;ARyuFN;;A+D94FE;EAYI;A/Ds4FN;;AS12FE;EACE;EACA;AT62FJ;AS32FI;EApCF;EACA;ATk5FF;AS32FI;EAxCF;EACA;ATs5FF;AS32FI;EA5CF;EACA;AT05FF;ASt5FE;;;EAGE;ATw5FJ;ASr5FE;;;;;EAKE;ATu5FJ;ASp5FE;EACE;ATs5FJ;;ASn7FE;EACE,gBA6Ee;ATy2FnB;;ASp7FE;EACE,YA0Ee;AT62FnB;;ASj2FI;EA1FF;IACE,gBA+Ec;ETg3FhB;ES77FA;IACE,YA4Ec;ETm3FhB;AACF;AUj8FE;EACE;AVm8FJ;;AUh8FE;;EAEE;AVm8FJ;;AU36FI;EACE,gBALK;AVm7FX;;AgEz9FA;;EAAA;AAqEA;;EAAA;AArEA;;EAAA;AAqEA;;EAAA;AClEA;EACI;AjEq+FJ;;AiEj+FA;EACI,0BD6FwB;EC5FxB;EACA;EACA;EACA;AjEo+FJ;;AiEj+FA;;EAEE,yBDDY;ECEZ,cDDa;AhEq+Ff;AiEl+FE;;EACE,yBD2Ca;AhE07FjB;;AiEj+FA;EACI,yBDoCuB;ECnCvB,sBDPY;ECQZ;EACA;EACA,YD2CoB;EC1CpB;EACA;EACA;EACA;EACA;AjEo+FJ;AiEl+FI;EAGI;EACA;EACH;EACG;EACA;EACA;EACA;AjEk+FR;AiE1+FQ;EAAM;AjE6+Fd;AiEl+FI;EACI;EAEA;EACA;EACA;AjEm+FR;AiEj+FQ;EACI;EACA,cDzCG;EC0CH;EACA;EACA;AjEm+FZ;AiE/9FI;EACI;EACA;EACA;EACA;AjEi+FR;AiE/9FQ;EACI;EACA;EACA;AjEi+FZ;AiE/9FY;EACI;EACA;AjEi+FhB;AiE99FY;EACI;EACA;AjEg+FhB;AiE39FI;;EAEI;EACA;AjE69FR;AiE19FI;EACI;EACA;EACA;AjE49FR;;AiEx9FA;EACI,YD5BiB;AhEu/FrB;AiE19FI;EACI;EACA;EACA;AjE49FR;AiE19FI;EACI,gBDnCa;ECoCb;EACA;EACA;AjE49FR;AiE19FQ;EACI;EACA;EACA;AjE49FZ;AiEz9FQ;EACI;AjE29FZ;AiEv9FI;;EAEI,gBDrDa;ECsDb;EACA;EACA;EACA,cD7HW;AhEslGnB;AiEt9FI;EACI;AjEw9FR;;AiEp9FA;EACI;EACA;EACA;AjEu9FJ;AiEr9FI;;EAEI;EACA;AjEu9FR;AiEp9FI;EACI;EACA;EACA;AjEs9FR;AiEp9FQ;EACI;EACA;AjEs9FZ;AiEn9FQ;EACI;EACA;EACA;AjEq9FZ;AiEn9FY;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjEq9FhB;AiEn9FgB;EACI;EACA;EACA;EACA;AjEq9FpB;;AiE98FA;EACI;AjEi9FJ;AiE/8FI;EACI;EACA;AjEi9FR;AiE/8FQ;;EAEI;EACA;EACA;AjEi9FZ;AiE/8FY;;EACI;AjEk9FhB;AiE78FI;EACI;EACA;AjE+8FR;AiE78FQ;;EAEI;EACA;EACA;AjE+8FZ;AiE78FY;;EACI;AjEg9FhB;AiE38FI;EACI;EACA;AjE68FR;AiE38FQ;;EAEI;EACA;EACA;AjE68FZ;AiE38FY;;EACI;AjE88FhB;AiEz8FI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjE28FR;AiEz8FQ;EACI;EACA;AjE28FZ;AiEz8FY;EACI;EACA;AjE28FhB;AiEt8FI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjEw8FR;AiEt8FQ;EACI;EACA;AjEw8FZ;AiEt8FY;EACI,cDtQD;ECuQC,aDvQD;ECwQC;EACA;AjEw8FhB;AiEn8FI;EACI;AjEq8FR;AiEl8FI;;EAEI;EACA;EACA;EACA;EACA;AjEo8FR;AiEj8FI;EACI,cD/RK;AhEkuGb;AiEh8FI;EACI,cDlSO;AhEouGf;AiE/7FI;EACI;AjEi8FR;AiE/7FI;EACI;IACI;EjEi8FV;EiE/7FM;IACI;EjEi8FV;EiE/7FM;IACI;EjEi8FV;AACF;AiE77FQ;EACI,cD/TO;ECgUP,aDhUO;AhE+vGnB;AiE17FQ;EACI,cDpUQ;ECqUR,aDrUQ;AhEiwGpB;AiEv7FQ;EACI,cDzUI;EC0UJ,aD1UI;AhEmwGhB;AiEp7FQ;EACI,cD7UG;EC8UH,aD9UG;AhEowGf;AiEj7FQ;EACI,cDnVC;ECoVD,aDpVC;AhEuwGb;AiE96FQ;EACI,cDzVG;EC0VH,aD1VG;AhE0wGf;AiE36FQ;EACI,cDhWG;ECiWH,aDjWG;AhE8wGf;AiEx6FQ;EACI,cD9WQ;EC+WR,aD/WQ;AhEyxGpB;AiEr6FQ;EACI,cD9WG;EC+WH,aD/WG;AhEsxGf;AiEl6FQ;EACI,cD5XQ;EC6XR,aD7XQ;AhEiyGpB;AiE/5FQ;EACI,cD5XG;EC6XH,aD7XG;AhE8xGf;AiE55FQ;EACI,cD1YQ;EC2YR,aD3YQ;AhEyyGpB;AiEz5FQ;EACI,cDnZO;ECoZP,aDpZO;AhE+yGnB;AiEt5FQ;EACI,cDhZE;ECiZF,aDjZE;AhEyyGd;AiEn5FQ;EACI,cDzZC;EC0ZD,aD1ZC;AhE+yGb;AiEh5FQ;EACI,cDpaI;ECqaJ,aDraI;AhEuzGhB;AiE74FQ;EACI,cDxaG;ECyaH,aDzaG;AhEwzGf;AiE14FQ;EACI,cDpbQ;ECqbR,aDrbQ;AhEi0GpB;;AiEt3FA;EACI;EACA;AjEy3FJ;AiEx3FI;EACI;AjE03FR;;AiEt3FA;EACI;EACA;EACA;EACA;AjEy3FJ;;AiEr3FI;EACI;EACA;AjEw3FR;;AiEp3FA;EACI;EACA,6CDvZuB;AhE8wG3B;;AiEp3FA;EACI;AjEu3FJ;;AiEp3FA;;EAEI;AjEu3FJ;;AiEp3FA;EACI;EACA;EACA;EACA;EACA;AjEu3FJ;;AiEp3FA;EACI;IACI,YD9ZuB;EhEqxG7B;EiEr3FM;IACI;EjEu3FV;EiEp3FM;IACI;IACA;EjEs3FV;EiEn3FM;IACI;IACA;IACA;EjEq3FV;EiEl3FM;;IAEI;EjEo3FV;EiEj3FM;IACI;EjEm3FV;EiE/2FE;IACI,8BDzboB;EhE0yG1B;AACF;AiE92FA;EACI;EACA;AjEg3FJ;;AiE72FA;EACI;EACA;AjEg3FJ;;AiE72FA;EACI;EACA;EACA;EACA;EACA;EACA;AjEg3FJ;;AiE72FA;EACI;EACA;AjEg3FJ;;AiE72FA;EACI;EACA;EACA;EACA;EACA;AjEg3FJ;;AiE92FA;EACI;EACA;EACA;EACA;EACA;AjEi3FJ;;AiE/2FA;EACI;AjEk3FJ;;AiE/2FA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AjEk3FJ;;AiEh3FA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AjEm3FJ;;AiEj3FA;EACI;EACA;AjEo3FJ;;AiEj3FA;EACI;EACA;AjEo3FJ;;AiEj3FA;EACI;AjEo3FJ;;AiEj3FA;EACC;AjEo3FD;;AiEj3FA;EACC;EACG;EACH;EACA;EACA;AjEo3FD;;AiEj3FA;EACC;AjEo3FD;;AiEj3FA;EACI;AjEo3FJ;;AkEj/GI;EAEI;EACA;EACA;EAEA;EACA;AlEk/GR;AkEh/GQ;EACI;EACA;AlEk/GZ;AkEh/GY;EACI;AlEk/GhB;AkE9+GQ;EACI;AlEg/GZ;;AgErgHA;;EAAA;AAqEA;;EAAA;AGnEA;EACC;EACA;EACA;EACA;AnE4gHD;AmE1gHE;EACE,cHMS;EGLT;EACA;AnE4gHJ;;AoEvhHA;EACE;ApE0hHF;;AgE3hHA;;EAAA;AAqEA;;EAAA;AKnEA;EACE;EACA;EACA;ArEkiHF;AqEhiHE;EACE,cLUW;EKTX,yBLDiB;EKEjB;EACA,eLiEuB;EKhEvB;ArEkiHJ;AqEhiHI;EACE;EACA;EACA;ArEkiHN;AqEhiHM;EACE;EACA;ArEkiHR;AqE9hHI;EACE;ArEgiHN;AqE7hHI;EACE;ArE+hHN;AqE5hHI;EACE;EACA;EACA;EACA;EACA;ArE8hHN;AqE1hHE;EACE;EACA;EACA;EACA;EACA,cLjCW;EKkCX,yBLtCkB;EKuClB;EACA,YLyBiB;AhEmgHrB;AqEzhHE;EACE,cL/Ce;EKgDf,yBLrCW;EKsCX;EACA,YLkBiB;AhEygHrB;AqEzhHI;EACE;ArE2hHN;AqEvhHE;;;;EAIE;EACA;EACA;ArEyhHJ;AqEvhHI;;;;EACE;EACA;EACA;EACA;EACA;EACA;EACA;ArE4hHN;AqExhHE;EACE,sCLEwB;AhEwhH5B;AqEvhHE;EACE,sCLDqC;AhE0hHzC;AqEthHE;EACE;ArEwhHJ;AqErhHE;EACE,6DLNwD;AhE6hH5D;AqEphHE;EACE;EACA;EACA;EACA;EACA,yBL9FkB;EK+FlB,YL9BiB;EK+BjB;ArEshHJ;AqEnhHM;EACE;ArEqhHR;AqEnhHQ;EACE;ArEqhHV;AqEhhHI;EACE;ArEkhHN;;AgEzoHA;;EAAA;AAqEA;;EAAA;AMnEA;EACE;EACA;EACA;EACA;EACA;AtEgpHF;AsE9oHE;EACE;AtEgpHJ;AsE7oHE;EACE;EACA;EACA;AtE+oHJ;AsE7oHI;EACE;EACA;AtE+oHN;AsE3oHE;EACE;EACA,yBNRW;EMSX,cNlBgB;EMmBhB;EACA;EACA;EACA;UAAA;AtE6oHJ;AsE1oHE;EACE;AtE4oHJ;AsE3oHI;EACE;AtE6oHN;AsE3oHM;EACE;AtE6oHR;AsE1oHM;EACE;AtE4oHR;AsEzoHM;EACE;EACA;AtE2oHR;AsEvoHI;EACE;EACA;EACA;EACA;AtEyoHN;AsEtoHE;EAGE;AtEsoHJ;AsEnoHE;EACE;EACA;AtEqoHJ;;AgEzsHA;;EAAA;AAqEA;;EAAA;AOlEE;EACE,qCPDW;AhEgtHf;AuE5sHE;EACI;EACA;AvE8sHN;AuE1sHI;EAIE;EACA;AvEysHN;AuEtsHI;EACE;EACA;EACA,YPmDe;EOlDf;EACA;AvEwsHN;AuEtsHM;EAEE;AvEusHR;AuEpsHM;EACE,cPnBK;AhEytHb;AuElsHI;EACE;EACA;EACA,ePoC8B;AhEgqHpC;AuElsHM;;EAEE;EACA;EACA;EACA;AvEosHR;AuEhsHI;EACI;AvEksHR;AuE5rHI;EACE;AvE8rHN;AuE1rHM;;EAEE;AvE4rHR;AuExrHI;EACE;EACA;EACA;EACA;AvE0rHN;AuExrHM;EACE;EACA;AvE0rHR;AuEtrHI;EACE,yBPzEgB;AhEiwHtB;;AgE3wHA;;EAAA;AAqEA;;EAAA;AQjEA;EACE;EACA;EACA;EACA,cRMa;EQLb;EACA;EACA;EACA;UAAA;AxEgxHF;AwE9wHE;EACE;AxEgxHJ;AwE7wHE;EAEE;EACA;EACA;EACA;AxE8wHJ;AwE5wHI;EACE;EACA;AxE8wHN;AwE1wHE;EACE,yBRvBgB;AhEmyHpB;AwE1wHI;EACE;AxE4wHN;AwEzwHI;EACE;AxE2wHN;AwEvwHE;EACE;EACA,yBR3BW;EQ4BX;EACA;AxEywHJ;AwEvwHI;EACE,yBRzCc;AhEkzHpB;AwEtwHI;EACE,cRpCS;EQqCT,yBRxCO;AhEgzHb;AwErwHI;EACE;AxEuwHN;;AgEl0HA;;EAAA;AAqEA;;EAAA;ASnEA;EACE,0BT0FoC;ESzFpC;EACA;EACA;EACA;EACA;AzEy0HF;AyE/zHE;EACE;EACA;AzEi0HJ;;A0El1HY;EACI;A1Eq1HhB;A0El1HY;EACI;A1Eo1HhB;;A0E30HY;EACI;A1E80HhB;A0E10HQ;EACI;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;A1E20HZ;A0Ez0HY;EACI;A1E20HhB;;A0Er0HA;EACE;EACA;EACA;A1Ew0HF;;A2Ep3HA;EACI;EACA;EAIA;EACA;EACA;A3Eo3HJ;A2Ej3HA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;A3Ek3HJ;;A4Ez4HA;EACI;A5E44HJ;;A4Ev4HA;;EAEI,qCCGS;EDFT,kBCHoB;EDIpB,WCEY;EDDZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA,aC0Cc;EDzCd;EACA;A5E04HJ;A4Ex4HI;;EACI;EACA;A5E24HR;A4Ex4HI;;EACI,WCfc;A7E05HtB;A4Ez4HI;;EACI;A5E44HR;;A4Ex4HA;EACI;A5E24HJ;A4Ez4HI;EACI;A5E24HR;;A4Ev4HA;EACI;A5E04HJ;A4Ex4HI;EACI;A5E04HR;A8Ej3HI;EFpBA;IACI;E5E06HN;E4Ev6HE;IACI;E5Ey6HN;E4Et6HE;IACI;E5Ew6HN;AACF;A8E95HI;EFNA;IACI;E5Ew8HN;E4Er8HE;IACI;E5Eu8HN;E4Ep8HE;IACI;E5Es8HN;AACF;A4Ej8HQ;EE5DJ,4BF6D2B;EACnB;A5Eq8HZ;A4Eh8HQ;EEnEJ,2BFoE2B;EACnB;A5Eo8HZ;;A4E97HA;EACI,aCpCa;EDqCb;EACA;EACA;EACA;A5Ei8HJ;A4Eh8HI;EACI,6ECtGQ;A7EwiIhB;A4E/7HI;EACI,WC/FQ;EDgGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EEyGJ,6BFxGI;EACA;EACA;EACA;A5Em8HR;A4El8HQ;EACI;A5Eo8HZ;A4El8HQ;EACI,WClHU;A7EsjItB;A4E/7HQ;EACI;A5Ei8HZ;A4E97HI;EACI;A5Eg8HR;A4E/7HQ;EACI;A5Ei8HZ;A4E57HQ;EACI;A5E87HZ;;A4Ex7HA;EACI,WCzGgB;ED0GhB;EACA;EACA;EACA,aC9Fa;ED+Fb;EEkEA,oCFjEA;A5E67HJ;A4E37HI;EACI;EACA;EACA;A5E67HR;A4E17HI;EACI;EACA;A5E47HR;A4E17HI;EACI;A5E47HR;A4E37HQ;EACI;A5E67HZ;A4E17HI;EACI,+ECvIS;A7EmkIjB;A4E17HI;EACI;EACA;EACA;EACA;A5E47HR;;A4Ex7HA;EACI;EACA;A5E27HJ;;A4Ev7HA;EACI,WCtLY;EDuLZ;EACA,eCnLmB;EDoLnB;EACA;EACA;EACA;A5E07HJ;;A4Et7HI;;;;EAII;EE2FJ,yHF1FI;A5E47HR;;A4E/6HgB;;EAEI;EEThB,iCFUmC;EACnB;EEyEhB,gHFxEgB;A5Ey7HpB;A4En7HoB;;EAEI;EEpBpB,2BFqBuC;A5Ey7H3C;;A4Eh7HI;EACI;EACA;EACA;A5Em7HR;;A4E96HQ;EACI;EACA;A5Ei7HZ;;A+E7qIA;EACI;EACA;EACA;A/EgrIJ;;A+E3qIA;EACI;EACA;A/E8qIJ;A+E7qII;EACI;A/E+qIR;;A+E5qIA;EACI;A/E+qIJ;;A+E7qIA;EACI;A/EgrIJ;;A+E5qIA;;;;;EAKI;EACA;ED2QA,wGC1QA;A/EkrIJ;;A+E3qII;;;;EAII;A/E8qIR;A+E3qIQ;EACI;A/E6qIZ;A+EzqIQ;EACI;ED6GR;A9EgkIJ;A+EzqIQ;EACI;EDwGR;A9EqkIJ;A+EzqIQ;EACI;EDmGR;A9E0kIJ;A+ExqIY;EACI;ED6FZ;A9E+kIJ;;A+ErqIA;EACI;EACA;EACA;EACA;EACA;EACA,aFxBW;EEyBX;EACA;EACA;EACA;EACA;EDwIA,iCCtIA;A/EyqIJ;A+EvqII;EDUA,sBCTwB;A/E2qI5B;A+ExqII;EACI;A/E0qIR;A+EvqII;EACI;A/EyqIR;A+EnqIY;EDoIR,uCCjIY;EDsIZ,8CCrIgD;A/EqqIpD;A+E7pIY;EDwHR,kCCrHY;EACA;A/E8pIhB;A+EvpIQ;ED4LJ;EACA;EACA;A9Eg+HJ;A+ExpIQ;ED4LJ;EAGA;EACA;EACA;A9E+9HJ;A+E3pII;EACI;EACA;EACA;EACA;EACA;A/E6pIR;A+E1pII;EACI;EACA;EACA;EACA;EACA;EDsEJ,sBCrEI;EACA;A/E8pIR;A+E3pII;EAKI;A/EypIR;A+E7pIQ;EACI;A/E+pIZ;A+EzpIQ;;;EAGI;A/E2pIZ;A+EvpIQ;EACI;A/EypIZ;A+ErpII;;EAEI;EACA;EACA;EACA;EACA;A/EupIR;A+ErpIQ;;EACI;EACA;EACA;EACA;A/EwpIZ;A+EppII;EACI;EACA;EACA;EACA;EACA;EAEA;EACA;A/EqpIR;A+EjpIQ;EACI;A/EmpIZ;A+EhpIQ;EACI,aFjJE;A7EmyId;A+E9oII;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A/EgpIR;A+E3oIQ;;EAEI;A/E6oIZ;A+ExoIQ;EACI,aFhNuB;EEiNvB;A/E0oIZ;A+EroIQ;EACI;EACA;EACA;A/EuoIZ;A+EjoIY;EDxFR;EC0FY;A/EooIhB;A+EloIY;EACI;EACA;A/EooIhB;;A+E9nIA;EACI;EACA;EACA;EACA;EACA;EACA,aFzMc;EE0Md,sBFrQa;EEsQb;EACA;EDhDA,oCCiDA;A/EmoIJ;A+EloII;EACI,UFlRW;A7Es5InB;;A+E5nIQ;;;EDiBJ,sCCdQ;A/EkoIZ;A+E7nIQ;ED9MJ,2BC+MqC;A/EioIzC;A+E3nIQ;EACI;A/E6nIZ;A+E3nIY;EACI;A/E6nIhB;A+EznIY;EDNR,gCCSY;A/E4nIhB;A+EtnIY;EDfR,mECgBY;A/E2nIhB;A+EtnIY;EDrBR,uDCsBY;A/E2nIhB;A+ElnIY;EACI;A/EonIhB;A+ElnIgB;ED3KZ;A9EiyIJ;A+ElnIgB;ED/KZ;A9EqyIJ;A+ElnIgB;EDnLZ;ECqLgB;A/EqnIpB;A+EjnIgB;EDhDZ,6ECmDgB;A/EonIpB;;A+E1mIA;EACI;A/E6mIJ;A+E5mII;EACI;A/E8mIR;A+EzmIQ;EDlIJ,kCCmIQ;A/E4mIZ;A+ExmIgB;EDvIZ,kCCwIgB;EACA;A/E2mIpB;;A+EjmII;;EAEI;A/EomIR;A+ElmII;EACI;A/EomIR;A+ElmII;EACI;A/EomIR;A+EjmIQ;EACI;A/EmmIZ;;A+E7lIA;EDjPI;ECmPA;ED1GA,uCC2GA;EACA,aFxVgB;EEyVhB;EACA;EACA;EACA;A/EomIJ;;AA9+IA;EACG,yBgECa;EhEAb,cgEDY;EhEEZ;EACA;EACA;EACA;AAi/IH;;AA9+IA;EACE;EACA;AAi/IF;AAh/IE;EACE;AAk/IJ;AAh/II;EACE;AAk/IN;AA/+II;EACE;EACA;EACA;AAi/IN;AA/+IM;;EAEE;AAi/IR;AA9+IM;EACE;AAg/IR;AA5+II;EACE;EACA;AA8+IN;;AAz+IA;EACE;AA4+IF;AA1+IE;EACE;EACA;EACA;AA4+IJ;AAz+IE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AA2+IJ;;AAv+IA;EACE,oEgE2BiB;AhE+8InB;AAx+IE;EACE;EACA,egEwBQ;AhEk9IZ;;AAr+IA;EACE,oEgEiBiB;AhEu9InB;;AAl9IA;EACE;EACA,cgEnGa;EhEoGb;AAq9IF;AAp9IE;EACE,oEgEVe;EhEWf;AAs9IJ;AAp9IE;EACE;AAs9IJ;;AAl9IA;EACE;EACA,cgE5Ga;EhE6Gb;AAq9IF;AAp9IE;EACE,oEgEvBe;EhEwBf;AAs9IJ;AAp9IE;EACE,cgEnHW;AhEykJf;;AAl9IA;EACE,yBgEzEe;EhE0Ef,cgEzHa;EhE0Hb;EACA;AAq9IF;AAp9IE;EACE,oEgErCe;EhEsCf;AAs9IJ;AAp9IE;EACE,cgEjIW;AhEulJf;AAp9IE;EACE;EACA;AAs9IJ;;AAj9IA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAo9IF;;AAj9IA;EACE,yBgExKiB;EhEyKjB,cgE7Ja;EhE8Jb;EACA;AAo9IF;AAn9IE;EACE,oEgEzEe;EhE0Ef;AAq9IJ;AAn9IE;EACE,cgErKW;AhE0nJf;AAn9IE;EACE;EACA;AAq9IJ;;AAh9IA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,cgElMiB;EhEmMjB;EACA;EACA;EACA;EACA;EACA;AAm9IF;;AAr8IE;EACE;AAw8IJ;;AAp8IA;EACE,yBgE/Mc;EhEgNd,cgEjNa;EhEkNb,oEgE1HiB;EhE2HjB;EACA;EACA;AAu8IF;;AA57IA;EAEE;;;IAGE;EA87IF;EA57IA;IACE;EA87IF;EA37IA;;IAEE;EA67IF;EA17IA;;;;;;;;;IASE;EA47IF;EAz7IA;;;;IAIE;EA27IF;EAx7IA;IACE;EA07IF;AACF;AAn7IA;EACE;AAq7IF;;AAl7IA;EACE;AAq7IF;;AAj7IE;EACE;EACA;EACA;AAo7IJ;AAl7IE;;EAEE;EACA;AAo7IJ;AAj7IE;EACE;EACA;AAm7IJ;AAj7II;EACE;AAm7IN;AAj7IM;EACE;AAm7IR;;AA76IA;EACE;AAg7IF;AA96IE;EACE;EACA,oEgE3Ne;EhE4Nf,egE3NQ;EhE4NR;AAg7IJ;AA76IE;EACE;EACA;EACA,oEgEnOe;EhEoOf,egEnOQ;EhEoOR;EACA;EACA,yBgE3TkB;AhE0uJtB;;AA16IE;EAEE;AA46IJ;AAz6IE;;EAEE;AA26IJ;AAz6II;;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oEgE7Pa;AhEyqJnB;AA16IM;;EACE;EACA;AA66IR;AA16IM;;EACE;EACA;EACA;EACA;EACA;EACA;AA66IR;AA16IM;;EACE;AA66IR;AA16IM;;EACE;EACA;AA66IR;AAx6II;;EACE,oEgEzRa;AhEosJnB;AA16IM;;EACE;AA66IR;AAz6II;;EACE;EACA,egEhSM;EhEiSN,oEgElSa;AhE8sJnB;AA16IM;;EACE;EACA;AA66IR;AA36IQ;;EACE;AA86IV;AA16IM;;EACE;EACA;AA66IR;AA16IM;;EACE;AA66IR;AA16IM;;EACE;AA66IR;AA16IM;;EACE;AA66IR;AA16IM;;EACE;AA66IR;AAx6IM;;EACE;EACA;AA26IR;AAv6II;;EACE;EACA;EACA,yBgEjagB;AhE20JtB;AAp6IE;EACE;AAs6IJ;;AAl6IA;EACE;EACA;AAq6IF;;AAl6IA;EACE;EACA;EACA;EACA;EACA;AAq6IF;;AAl6IA;EACE;EACA;EACA;AAq6IF;;AAl6IA;EACE;EACA;EACA;AAq6IF;;AAl6IA;EACE;EACA;AAq6IF;AAn6IE;EACE;EACA;EACA;EACA;EACA;EACA;AAq6IJ;AAn6IE;EACE;EACA;EACA;EACA;AAq6IJ;AAn6IE;EACE;AAq6IJ;;AAj6IA;EACE;EACA;AAo6IF;;AAj6IA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAo6IF;;AAj6IA;EACE;EACA;AAo6IF;;AAj6IA;EACE;EACA;EACA;EACA;EACA;AAo6IF;;AAj6IA;EACE;EACA;AAo6IF;;AAh6IE;EACE;EACA;EACA;EACA;AAm6IJ;AAj6IE;EACE;EACA;EACA;AAm6IJ;AAj6IE;EACE;EACA;AAm6IJ;AAl6II;EACE;AAo6IN;;AA/5IA;EACE;AAk6IF;;AA/5IA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAk6IF;;AA/5IA;EACE;EACA;AAk6IF;;AA/5IA;EACE;EACA;EACA;EAGA;AAk6IF;;AA/5IA;EACE;EACA;AAk6IF;;AA/5IA;EACE;EACA;EACA;AAk6IF;;AA/5IA;EACE;AAk6IF;;AA75IA;EAEI;IACE;EA+5IJ;EA55IE;IACE;EA85IJ;EA55IE;IAEE;EA65IJ;AACF;AAv5IA;EACE;AAy5IF;;AAt5IA;EACE;EACA;EACA;AAy5IF,C;;;;AgFjhKA,oBAAoB;;AAEpB;;;;;;;;;;CAUC,kBAAkB;CAClB,OAAO;CACP,MAAM;CACN;AACD;CACC,gBAAgB;CAChB;AACD;;;CAGC,yBAAyB;SAEjB,iBAAiB;GACvB,uBAAuB;CACzB;AACD,mFAAmF;AACnF;CACC,0CAA0C;CAC1C;AACD,qEAAqE;AACrE;CACC,aAAa;CACb,cAAc;CACd,6BAA6B;CAC7B;AACD;;CAEC,cAAc;CACd;AACD,gGAAgG;AAChG,qFAAqF;AACrF;;;;;CAKC,0BAA0B;CAC1B,2BAA2B;CAC3B;;AAED;CAEC,yBAAyB;CACzB;AACD;CAEC,qDAAqD;CACrD,kBAAkB;CAClB,wBAAwB;AACzB;AACA;CAEC,kBAAkB;AACnB;AACA;CACC,wCAAwC;AACzC;AACA;CACC,oDAAoD;AACrD;AACA;CACC,eAAe;CACf,kBAAkB;CAClB;AACD;CACC,mBAAmB;CACnB;AACD;CACC,QAAQ;CACR,SAAS;CAEJ,sBAAsB;CAC3B,YAAY;CACZ;AACD,uEAAuE;AACvE;CACC,sBAAsB;CACtB;;AAED,wBAAwB,YAAY,EAAE;;AAEtC,wBAAwB,YAAY,EAAE;AACtC,wBAAwB,YAAY,EAAE;AACtC,wBAAwB,YAAY,EAAE;AACtC,wBAAwB,YAAY,EAAE;AACtC,0BAA0B,YAAY,EAAE;AACxC,wBAAwB,YAAY,EAAE;;AAEtC,2BAA2B,YAAY,EAAE;AACzC,2BAA2B,YAAY,EAAE;;AAEzC;CACC,UAAU;CACV,WAAW;CACX;AACD;CACC,2BAA2B;CAC3B,qBAAqB;CACrB,kBAAkB;CAClB;;;AAGD,wBAAwB;;AAExB;CACC,kBAAkB;CAClB,YAAY;CACZ,8BAA8B,EAAE,8BAA8B;CAC9D,oBAAoB;CACpB;AACD;;CAEC,kBAAkB;CAClB,aAAa;CACb,oBAAoB;CACpB;AACD;CACC,MAAM;CACN;AACD;CACC,QAAQ;CACR;AACD;CACC,SAAS;CACT;AACD;CACC,OAAO;CACP;AACD;CACC,WAAW;CACX,WAAW;CACX;AACD;CACC,YAAY;CACZ;AACD;CACC,gBAAgB;CAChB;AACD;CACC,mBAAmB;CACnB;AACD;CACC,iBAAiB;CACjB;AACD;CACC,kBAAkB;CAClB;;;AAGD,6BAA6B;;AAE7B;CACC,oBAAoB;CACpB;AACD;CACC,UAAU;CAIF,+BAA+B;CACvC;AACD;CACC,UAAU;CACV;AACD;CAGS,qBAAqB;CAC7B;AACD;CACC,sBAAsB;CACtB;AACD;CAIS,4DAA4D;CACpE;AACD;;CAKS,gBAAgB;CACxB;;AAED;CACC,kBAAkB;CAClB;;;AAGD,YAAY;;AAEZ;CACC,eAAe;CACf;AACD;CAEC,oBAAoB;CACpB;AACD;;CAEC,iBAAiB;CACjB;AACD;;CAEC,YAAY;CACZ;AACD;;;CAGC,YAAY;CAEZ,wBAAwB;CACxB;;AAED,oCAAoC;AACpC;;;;;CAKC,oBAAoB;CACpB;;AAED;;;CAGC,8BAA8B,EAAE,8BAA8B;CAC9D,oBAAoB;CACpB;;AAED,kBAAkB;;AAElB;CACC,gBAAgB;CAChB,UAAU;CACV;AACD;CACC,cAAc;CACd;AACD;CACC,yBAAyB;CACzB;AACD;CACC,uBAAuB;CACvB,iCAAiC;CACjC;;;AAGD,uBAAuB;AACvB;CACC,6DAA6D;CAC7D;;;AAGD,2BAA2B;;AAE3B;CACC,sCAAsC;CACtC,kBAAkB;CAClB;AACD;;CAEC,sBAAsB;CACtB,6BAA6B;CAC7B,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB,cAAc;CACd,kBAAkB;CAClB,qBAAqB;CACrB,YAAY;CACZ;AACD;;CAEC,4BAA4B;CAC5B,4BAA4B;CAC5B,cAAc;CACd;AACD;CACC,yBAAyB;CACzB;AACD;CACC,2BAA2B;CAC3B,4BAA4B;CAC5B;AACD;CACC,8BAA8B;CAC9B,+BAA+B;CAC/B,mBAAmB;CACnB;AACD;CACC,eAAe;CACf,yBAAyB;CACzB,WAAW;CACX;;AAED;CACC,WAAW;CACX,YAAY;CACZ,iBAAiB;CACjB;AACD;CACC,2BAA2B;CAC3B,4BAA4B;CAC5B;AACD;CACC,8BAA8B;CAC9B,+BAA+B;CAC/B;;AAED,iBAAiB;;AAEjB;;CAEC,mDAAmD;CACnD,gBAAgB;CAChB;;AAED;CACC,eAAe;CACf;;;AAGD,mBAAmB;;AAEnB;CACC,qCAAqC;CACrC,gBAAgB;CAChB,kBAAkB;CAClB;AACD;CACC,mCAAwC;CACxC,WAAW;CACX,YAAY;CACZ;AACD;CACC,sCAA2C;CAC3C,0BAA0B;CAC1B;AACD;CACC,WAAW;CACX,YAAY;CACZ;AACD;;CAEC,aAAa;CACb;AACD;CACC,cAAc;CACd,kBAAkB;CAClB;AACD;CACC,yBAAyB;CACzB,WAAW;CACX,gBAAgB;CAChB;AACD;CACC,kBAAkB;CAClB,kBAAkB;CAClB,kBAAkB;CAClB;AACD;CACC,eAAe;CACf,kBAAkB;CAClB,QAAQ;CACR;AACD;CACC,cAAc;CACd;AACD;CACC,SAAS;CACT,0BAA0B;CAC1B,0BAA0B;CAC1B;;AAED,sBAAsB;AACtB;CACC,wCAA6C;CAC7C;;;AAGD,mCAAmC;;AAEnC;CACC,gBAAgB;CAChB,oCAAoC;CACpC,SAAS;CACT;AACD;;CAEC,cAAc;CACd,WAAW;CACX;AACD;CACC,qBAAqB;CACrB;AACD;CACC,0BAA0B;CAC1B;AACD;;CAEC,eAAe;CACf;AACD;CACC,gBAAgB;CAChB;AACD;CACC,kBAAkB;CAClB;AACD;CACC,sBAAsB;CACtB,gBAAgB;CAChB,gBAAgB;CAChB,oBAAoB;CACpB,eAAe;CACf,mBAAmB;CACnB,gBAAgB;CAEX,sBAAsB;;CAE3B,gBAAgB;CAChB,oCAAoC;CACpC;AACD;CACC,0BAA0B;CAC1B,mBAAmB;CACnB,gBAAgB;CAChB;AACD;CACC,6BAA6B;CAC7B;;AAED;;;CAGC,gBAAgB;CAChB;AACD;;CAEC,iCAAiC;CACjC,4BAA4B;CAC5B;;;AAGD,UAAU;;AAEV;CACC,kBAAkB;CAClB,kBAAkB;CAClB,mBAAmB;CACnB;AACD;CACC,YAAY;CACZ,gBAAgB;CAChB,mBAAmB;CACnB;AACD;CACC,iBAAiB;CACjB,gBAAgB;CAChB;AACD;CACC,cAAc;CACd;AACD;CACC,WAAW;CACX,YAAY;CACZ,kBAAkB;CAClB,SAAS;CACT,kBAAkB;CAClB,gBAAgB;CAChB,oBAAoB;CACpB;AACD;CACC,WAAW;CACX,YAAY;CACZ,YAAY;;CAEZ,oBAAoB;CAMZ,wBAAwB;CAChC;AACD;;CAEC,iBAAiB;CACjB,WAAW;CACX,sCAAsC;CACtC;AACD;CACC,kBAAkB;CAClB,MAAM;CACN,QAAQ;CACR,oBAAoB;CACpB,YAAY;CACZ,kBAAkB;CAClB,WAAW;CACX,YAAY;CACZ,2CAA2C;CAC3C,cAAc;CACd,qBAAqB;CACrB,iBAAiB;CACjB,uBAAuB;CACvB;AACD;CACC,WAAW;CACX;AACD;CACC,cAAc;CACd,6BAA6B;CAC7B,0BAA0B;CAC1B;;AAED;CACC,OAAO;CACP;AACD;CACC,WAAW;CACX,cAAc;;CAEd,uHAAuH;CACvH,iHAAiH;CACjH;AACD;CACC,gBAAgB;CAChB;;AAED;;;;CAIC,sBAAsB;CACtB;;;AAGD,aAAa;;AAEb;CACC,gBAAgB;CAChB,sBAAsB;CACtB;;;AAGD,YAAY;AACZ,mDAAmD;AACnD;CACC,kBAAkB;CAClB,YAAY;CACZ,sBAAsB;CACtB,sBAAsB;CACtB,kBAAkB;CAClB,WAAW;CACX,mBAAmB;CACnB,yBAAyB;CAGzB,iBAAiB;CACjB,oBAAoB;CACpB,qCAAqC;CACrC;AACD;CACC,eAAe;CACf,oBAAoB;CACpB;AACD;;;;CAIC,kBAAkB;CAClB,oBAAoB;CACpB,6BAA6B;CAC7B,uBAAuB;CACvB,WAAW;CACX;;AAED,eAAe;;AAEf;CACC,eAAe;AAChB;AACA;CACC,gBAAgB;AACjB;AACA;;CAEC,SAAS;CACT,iBAAiB;CACjB;AACD;CACC,SAAS;CACT,oBAAoB;CACpB,sBAAsB;CACtB;AACD;CACC,MAAM;CACN,iBAAiB;CACjB,iBAAiB;CACjB,yBAAyB;CACzB;AACD;CACC,iBAAiB;AAClB;AACA;CACC,gBAAgB;AACjB;AACA;;CAEC,QAAQ;CACR,gBAAgB;CAChB;AACD;CACC,QAAQ;CACR,mBAAmB;CACnB,uBAAuB;CACvB;AACD;CACC,OAAO;CACP,kBAAkB;CAClB,wBAAwB;CACxB;;;;;AnF3nBD,mDAAmD,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,uBAAuB,cAAc,CAAC,YAAY,CAAC,6BAA6B,YAAY,CAAC,4BAA0G,YAAY,CAAC,iBAAiB,CAAC,YAAY,CAAC,kBAAkB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,YAAY,CAA+E,YAAY,CAAC,cAAc,CAAC,eAAe,CAAC,sBAAsB,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,mBAAmB,CAAC,uCAAuC,CAAuK,iDAAiD,CAAC,SAAS,CAAC,mDAAmD,SAAS,CAAC,6CAA6C,mDAAmD,UAAU,CAAC,CAAC,2BAA2B,2BAA2B,CAAC,iGAAiG,SAAS,CAAC,6CAA6C,iBAAiB,CAAC,YAAY,CAA+E,YAAY,CAAqK,qBAAqB,CAAC,aAAa,CAAC,cAAc,CAAC,wBAAwB,cAAc,CAAC,UAAU,CAAC,iBAAiB,CAAC,sBAAsB,iBAAiB,CAAC,mBAAmB,CAA0D,qBAAqB,CAAC,aAAa,CAAC,aAAa,CAAkO,yGAAyG,CAAwB,iBAAiB,CAAC,aAAa,CAAC,eAAe,CAAC,qBAAqB,CAAC,UAAU,CAAC,WAAW,CAAC,SAAS,CAAC,sCAA+F,qBAAqB,CAAC,kBAAkB,aAAa,CAAC,cAAc,CAAC,cAAc,CAAC,eAAe,CAAC,mBAAmB,CAAC,YAAY,CAAC,sBAAsB,uCAAuC,CAAC,iCAAiC,kBAAkB,CAAC,iBAA+F,YAAY,CAAqK,qBAAqB,CAAC,UAAU,CAAC,yBAAuG,YAAY,CAAiG,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,0DAAqI,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,0FAA0F,cAAc,CAAC,gGAAgG,gCAAgC,CAAC,sBAAoG,YAAY,CAAqK,qBAAqB,CAA4E,aAAa,CAAC,mBAAmB,CAAC,SAAS,CAAC,sBAAsB,aAAa,CAA4E,aAAa,CAAC,iCAA+G,YAAY,CAAiG,kBAAkB,CAAC,wDAAmH,sBAAsB,CAAC,mFAAmF,oBAAoB,CAAC,uBAAuB,UAAU,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,+CAA+C,oBAAoB,CAAC,mEAAmE,cAAc,CAAC,eAAe,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,8EAA8E,iBAAiB,CAAC,UAAU,CAAC,mBAAmB,CAAC,oFAAoF,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,0BAA0B,CAAC,6CAA6C,iBAAiB,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,CAAC,uBAAuB,CAAC,uCAAuC,CAAC,uCAAuC,CAAC,qDAAqD,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAA+E,YAAY,CAAiG,kBAAkB,CAAkG,sBAAsB,CAA0D,qBAAqB,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,4BAA4B,CAA0B,mBAAmB,CAAC,aAAa,CAAC,cAAc,CAAC,iDAAiD,UAAU,CAAC,uFAAuF,2BAA2B,CAAC,sDAAsD,2BAA2B,CAAC,wBAAwB,CAAC,iFAAgM,gDAAgD,CAAC,sDAAsD,cAAc,CAAC,wHAAwH,oBAAoB,CAAC,kHAAkH,UAAU,CAAC,sHAAsH,2BAA2B,CAAC,gQAAgQ,gCAAgC,CAAC,sDAAsD,6BAA6B,CAAC,sFAAuH,4BAA4B,CAAqC,+BAA+B,CAAC,oFAAsH,6BAA6B,CAAsC,gCAAgC,CAAC,cAA4F,YAAY,CAAkG,sBAAsB,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,kBAAkB,iBAAiB,CAA2G,mBAAmB,CAAqK,qBAAqB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC,sBAAiG,aAAa,CAA+E,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,UAAU,CAAC,aAAa,CAAC,0CAA0C,aAAa,CAAC,SAAS,CAAC,iBAAiB,CAAC,+BAA+B,CAAwB,iBAAiB,CAAC,mBAAmB,CAAC,eAAe,CAAC,YAAY,CAAC,sBAAsB,oBAAoB,CAAqD,mBAAmB,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,CAAC,UAAU,CAAC,yDAAyD,UAAU,CAAC,oBAAoB,CAAC,WAAW,CAAC,YAAY,CAAC,iBAAiB,CAAC,QAAQ,CAAwB,iBAAiB,CAAmG,0BAA0B,CAAC,6BAA6B,CAAC,6BAA6B,OAAO,CAAC,4BAA4B,UAAU,CAAC,uBAAuB,wBAAwB,CAA4C,gBAAgB,CAAC,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC,uCAAuC,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,uBAAuB,CAAC,QAAQ,CAAC,SAAS,CAAC,4BAA4B,CAAC,aAAa,CAAC,aAAa,CAAC,sDAAsD,iBAAiB,CAA2G,mBAAmB,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,6DAA6D,YAAY,CAAC,cAAc,CAAwB,iBAAiB,CAAsI,sCAAsC,CAAC,mEAAmE,gCAAgC,CAAC,2DAAyI,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAiL,6BAA8G,CAAC,4DAA4D,SAAS,CAAwB,iBAAiB,CAAC,WAAW,CAAC,YAAY,CAAC,uCAAuC,oBAAoB,CAAC,cAAc,CAAC,iCAAiC,SAAS,CAAC,UAAU,CAAC,iBAAiB,CAAC,iDAAiD,iBAAiB,CAAC,YAAY,CAA4N,sGAAsG,CAAC,gKAAgK,UAAU,CAAC,mFAAmF,cAAc,CAAC,yBAAyB,eAAe,CAAC,aAAa,CAAC,0CAA0C,eAAe,CAAC,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,uCAAuC,eAAe,CAAC,eAAe,CAAC,uCAAuC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,sCAAsC,0CAA0C,UAAU,CAAC,WAAW,CAAC,uCAAuC,UAAU,CAAC,CAAC,0BAAwG,YAAY,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,iCAAiC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAsB,eAAe,CAAC,gEAAgE,WAAW,CAAC,UAAU,CAAsI,sCAAsC,CAAC,sEAAsE,+BAA+B,CAAC,uBAAuB,cAAc,CAAC,cAAc,CAAC,uCAAuC,CAAC,+CAA+C,SAAS,CAAC,+EAA6J,YAAY,CAA4G,6BAA6B,CAAC,cAAc,CAAC,cAAc,CAAC,0DAA0D,oCAAoC,CAAC,qDAAqD,aAAa,CAAC,oDAAoD,WAAW,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,qBAAmG,YAAY,CAAkG,sBAAsB,CAAiG,kBAAkB,CAAC,aAAa,CAAC,8CAA8C,6BAA6B,CAAwB,iBAAiB,CAA8G,8BAA8B,CAAC,6EAA6E,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,sKAAsK,kBAAkB,CAAC,UAAU,CAAC,8DAA8D,iBAAiB,CAAC,cAAc,CAAC,eAAe,oBAAoB,CAAC,gBAAgB,SAAS,CAAC,cAAc,CAAC,wCAAwC,SAAS,CAAC,8CAA8C,gCAAgC,CAAC,mEAAwF,eAAe,CAAC,uBAAuB,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,C;;;;A8EAjtgB;EACI;EACA;EAIA;EACA;EACA;AMFJ;ANKA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;AMJJ;;ALnBA;EACI;AKsBJ;;ALjBA;;EAEI,qCCGS;EDFT,kBCHoB;EDIpB,WCEY;EDDZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA,aC0Cc;EDzCd;EACA;AKoBJ;ALlBI;;EACI;EACA;AKqBR;ALlBI;;EACI,WCfc;AIoCtB;ALnBI;;EACI;AKsBR;;ALlBA;EACI;AKqBJ;ALnBI;EACI;AKqBR;;ALjBA;EACI;AKoBJ;ALlBI;EACI;AKoBR;AHKI;EFpBA;IACI;EKoDN;ELjDE;IACI;EKmDN;ELhDE;IACI;EKkDN;AACF;AHxCI;EFNA;IACI;EKkFN;EL/EE;IACI;EKiFN;EL9EE;IACI;EKgFN;AACF;AL3EQ;EE5DJ,4BF6D2B;EACnB;AK+EZ;AL1EQ;EEnEJ,2BFoE2B;EACnB;AK8EZ;;ALxEA;EACI,aCpCa;EDqCb;EACA;EACA;EACA;AK2EJ;AL1EI;EACI,6ECtGQ;AIkLhB;ALzEI;EACI,WC/FQ;EDgGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EEyGJ,6BFxGI;EACA;EACA;EACA;AK6ER;AL5EQ;EACI;AK8EZ;AL5EQ;EACI,WClHU;AIgMtB;ALzEQ;EACI;AK2EZ;ALxEI;EACI;AK0ER;ALzEQ;EACI;AK2EZ;ALtEQ;EACI;AKwEZ;;ALlEA;EACI,WCzGgB;ED0GhB;EACA;EACA;EACA,aC9Fa;ED+Fb;EEkEA,oCFjEA;AKuEJ;ALrEI;EACI;EACA;EACA;AKuER;ALpEI;EACI;EACA;AKsER;ALpEI;EACI;AKsER;ALrEQ;EACI;AKuEZ;ALpEI;EACI,+ECvIS;AI6MjB;ALpEI;EACI;EACA;EACA;EACA;AKsER;;ALlEA;EACI;EACA;AKqEJ;;ALjEA;EACI,WCtLY;EDuLZ;EACA,eCnLmB;EDoLnB;EACA;EACA;EACA;AKoEJ;;ALhEI;;;;EAII;EE2FJ,yHF1FI;AKsER;;ALzDgB;;EAEI;EEThB,iCFUmC;EACnB;EEyEhB,gHFxEgB;AKmEpB;AL7DoB;;EAEI;EEpBpB,2BFqBuC;AKmE3C;;AL1DI;EACI;EACA;EACA;AK6DR;;ALxDQ;EACI;EACA;AK2DZ;;AFvTA;EACI;EACA;EACA;AE0TJ;;AFrTA;EACI;EACA;AEwTJ;AFvTI;EACI;AEyTR;;AFtTA;EACI;AEyTJ;;AFvTA;EACI;AE0TJ;;AFtTA;;;;;EAKI;EACA;ED2QA,wGC1QA;AE4TJ;;AFrTI;;;;EAII;AEwTR;AFrTQ;EACI;AEuTZ;AFnTQ;EACI;ED6GR;AG0MJ;AFnTQ;EACI;EDwGR;AG+MJ;AFnTQ;EACI;EDmGR;AGoNJ;AFlTY;EACI;ED6FZ;AGyNJ;;AF/SA;EACI;EACA;EACA;EACA;EACA;EACA,aFxBW;EEyBX;EACA;EACA;EACA;EACA;EDwIA,iCCtIA;AEmTJ;AFjTI;EDUA,sBCTwB;AEqT5B;AFlTI;EACI;AEoTR;AFjTI;EACI;AEmTR;AF7SY;EDoIR,uCCjIY;EDsIZ,8CCrIgD;AE+SpD;AFvSY;EDwHR,kCCrHY;EACA;AEwShB;AFjSQ;ED4LJ;EACA;EACA;AG0GJ;AFlSQ;ED4LJ;EAGA;EACA;EACA;AGyGJ;AFrSI;EACI;EACA;EACA;EACA;EACA;AEuSR;AFpSI;EACI;EACA;EACA;EACA;EACA;EDsEJ,sBCrEI;EACA;AEwSR;AFrSI;EAKI;AEmSR;AFvSQ;EACI;AEySZ;AFnSQ;;;EAGI;AEqSZ;AFjSQ;EACI;AEmSZ;AF/RI;;EAEI;EACA;EACA;EACA;EACA;AEiSR;AF/RQ;;EACI;EACA;EACA;EACA;AEkSZ;AF9RI;EACI;EACA;EACA;EACA;EACA;EAEA;EACA;AE+RR;AF3RQ;EACI;AE6RZ;AF1RQ;EACI,aFjJE;AI6ad;AFxRI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AE0RR;AFrRQ;;EAEI;AEuRZ;AFlRQ;EACI,aFhNuB;EEiNvB;AEoRZ;AF/QQ;EACI;EACA;EACA;AEiRZ;AF3QY;EDxFR;EC0FY;AE8QhB;AF5QY;EACI;EACA;AE8QhB;;AFxQA;EACI;EACA;EACA;EACA;EACA;EACA,aFzMc;EE0Md,sBFrQa;EEsQb;EACA;EDhDA,oCCiDA;AE6QJ;AF5QI;EACI,UFlRW;AIgiBnB;;AFtQQ;;;EDiBJ,sCCdQ;AE4QZ;AFvQQ;ED9MJ,2BC+MqC;AE2QzC;AFrQQ;EACI;AEuQZ;AFrQY;EACI;AEuQhB;AFnQY;EDNR,gCCSY;AEsQhB;AFhQY;EDfR,mECgBY;AEqQhB;AFhQY;EDrBR,uDCsBY;AEqQhB;AF5PY;EACI;AE8PhB;AF5PgB;ED3KZ;AG2aJ;AF5PgB;ED/KZ;AG+aJ;AF5PgB;EDnLZ;ECqLgB;AE+PpB;AF3PgB;EDhDZ,6ECmDgB;AE8PpB;;AFpPA;EACI;AEuPJ;AFtPI;EACI;AEwPR;AFnPQ;EDlIJ,kCCmIQ;AEsPZ;AFlPgB;EDvIZ,kCCwIgB;EACA;AEqPpB;;AF3OI;;EAEI;AE8OR;AF5OI;EACI;AE8OR;AF5OI;EACI;AE8OR;AF3OQ;EACI;AE6OZ;;AFvOA;EDjPI;ECmPA;ED1GA,uCC2GA;EACA,aFxVgB;EEyVhB;EACA;EACA;EACA;AE8OJ,C","sources":["./node_modules/ng-pick-datetime/assets/style/picker.min.css","./node_modules/@angular/material/core/typography/_typography.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./src/styles/main.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./node_modules/@angular/material/legacy-core/option/_option-theme.scss","./node_modules/@angular/material/legacy-core/option/_optgroup-theme.scss","./node_modules/@angular/material/legacy-button/_button-theme.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@material/theme/_css.scss","./node_modules/@angular/material/legacy-card/_card-theme.scss","./node_modules/@angular/material/legacy-tooltip/_tooltip-theme.scss","./node_modules/@angular/material/legacy-input/_input-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-legacy-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-fill-theme.scss","./node_modules/@angular/material/legacy-form-field/_form-field-outline-theme.scss","./node_modules/@angular/material/legacy-select/_select-theme.scss","./node_modules/@angular/material/legacy-checkbox/_checkbox-theme.scss","./node_modules/@angular/material/legacy-dialog/_dialog-theme.scss","./node_modules/@angular/material/legacy-chips/_chips-theme.scss","./node_modules/@angular/material/legacy-slide-toggle/_slide-toggle-theme.scss","./node_modules/@angular/material/legacy-tabs/_tabs-theme.scss","./node_modules/@angular/material/legacy-radio/_radio-theme.scss","./node_modules/@angular/material/legacy-slider/_slider-theme.scss","./node_modules/@angular/material/legacy-menu/_menu-theme.scss","./node_modules/@angular/material/legacy-list/_list-theme.scss","./node_modules/@angular/material/legacy-paginator/_paginator-theme.scss","./node_modules/@angular/material/legacy-snack-bar/_snack-bar-theme.scss","./node_modules/@angular/material/legacy-table/_table-theme.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@material/icon-button/_icon-button-theme.scss","./node_modules/@material/touch-target/_touch-target.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/legacy-core/_core-theme.scss","./node_modules/@angular/material/legacy-progress-bar/_progress-bar-theme.scss","./node_modules/@angular/material/legacy-progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/core/style/_vendor-prefixes.scss","./node_modules/@angular/material/core/style/_form-common.scss","./node_modules/@angular/material/legacy-form-field/_form-field-standard-theme.scss","./node_modules/@angular/material/legacy-autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./src/styles/_variables.scss","./src/styles/_base.scss","./src/styles/component/_list.scss","./src/styles/component/_message-dialog.scss","./src/styles/component/_comments-table.scss","./src/styles/component/_side-panel.scss","./src/styles/component/_search-bar.scss","./src/styles/component/_filters.scss","./src/styles/component/_sort.scss","./src/styles/component/_unauthorized-page.scss","./src/styles/_smk.scss","./node_modules/lightgallery/scss/_lg-fonts.scss","./node_modules/lightgallery/scss/_lg-theme-default.scss","./node_modules/lightgallery/scss/_lg-variables.scss","./node_modules/lightgallery/scss/_lg-mixins.scss","./node_modules/lightgallery/scss/lightgallery-core.scss","./node_modules/leaflet/dist/leaflet.css","./node_modules/lightgallery/scss/lightgallery.scss"],"sourcesContent":[".cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;z-index:1000;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;-webkit-transition:opacity .4s cubic-bezier(.25,.8,.25,1);-o-transition:opacity .4s cubic-bezier(.25,.8,.25,1);-moz-transition:opacity .4s cubic-bezier(.25,.8,.25,1);transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.288)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}.owl-dialog-container{position:relative;pointer-events:auto;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;padding:1.5em;-webkit-box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);-moz-box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);box-shadow:0 11px 15px -7px rgba(0,0,0,.2),0 24px 38px 3px rgba(0,0,0,.14),0 9px 46px 8px rgba(0,0,0,.12);-moz-border-radius:2px;border-radius:2px;overflow:auto;background:#fff;color:rgba(0,0,0,.87);width:100%;height:100%;outline:0}.owl-dt-container,.owl-dt-container *{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.owl-dt-container{display:block;font-size:16px;font-size:1rem;background:#fff;pointer-events:auto;z-index:1000}.owl-dt-container-row{border-bottom:1px solid rgba(0,0,0,.12)}.owl-dt-container-row:last-child{border-bottom:none}.owl-dt-calendar{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.owl-dt-calendar-control{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;font-size:1em;width:100%;padding:.5em;color:#000}.owl-dt-calendar-control .owl-dt-calendar-control-content{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.owl-dt-calendar-control .owl-dt-calendar-control-content .owl-dt-calendar-control-button{padding:0 .8em}.owl-dt-calendar-control .owl-dt-calendar-control-content .owl-dt-calendar-control-button:hover{background-color:rgba(0,0,0,.12)}.owl-dt-calendar-main{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5em .5em;outline:0}.owl-dt-calendar-view{display:block;-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto}.owl-dt-calendar-multi-year-view{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center}.owl-dt-calendar-multi-year-view .owl-dt-calendar-table{width:-webkit-calc(100% - 3em);width:-moz-calc(100% - 3em);width:calc(100% - 3em)}.owl-dt-calendar-multi-year-view .owl-dt-calendar-table .owl-dt-calendar-header th{padding-bottom:.25em}.owl-dt-calendar-table{width:100%;border-collapse:collapse;border-spacing:0}.owl-dt-calendar-table .owl-dt-calendar-header{color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-weekdays th{font-size:.7em;font-weight:400;text-align:center;padding-bottom:1em}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-calendar-table-divider{position:relative;height:1px;padding-bottom:.5em}.owl-dt-calendar-table .owl-dt-calendar-header .owl-dt-calendar-table-divider:after{content:'';position:absolute;top:0;left:-.5em;right:-.5em;height:1px;background:rgba(0,0,0,.12)}.owl-dt-calendar-table .owl-dt-calendar-cell{position:relative;height:0;line-height:0;text-align:center;outline:0;color:rgba(0,0,0,.85);-webkit-appearance:none;-webkit-tap-highlight-color:transparent;-webkit-tap-highlight-color:transparent}.owl-dt-calendar-table .owl-dt-calendar-cell-content{position:absolute;top:5%;left:5%;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;width:90%;height:90%;font-size:.8em;line-height:1;border:1px solid transparent;-moz-border-radius:999px;border-radius:999px;color:inherit;cursor:pointer}.owl-dt-calendar-table .owl-dt-calendar-cell-out{opacity:.2}.owl-dt-calendar-table .owl-dt-calendar-cell-today:not(.owl-dt-calendar-cell-selected){border-color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-cell-selected{color:rgba(255,255,255,.85);background-color:#3f51b5}.owl-dt-calendar-table .owl-dt-calendar-cell-selected.owl-dt-calendar-cell-today{-webkit-box-shadow:inset 0 0 0 1px rgba(255,255,255,.85);-moz-box-shadow:inset 0 0 0 1px rgba(255,255,255,.85);box-shadow:inset 0 0 0 1px rgba(255,255,255,.85)}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled{cursor:default}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected){color:rgba(0,0,0,.4)}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-content.owl-dt-calendar-cell-selected{opacity:.4}.owl-dt-calendar-table .owl-dt-calendar-cell-disabled>.owl-dt-calendar-cell-today:not(.owl-dt-calendar-cell-selected){border-color:rgba(0,0,0,.2)}.owl-dt-calendar-table .owl-dt-calendar-cell-active:focus>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected),.owl-dt-calendar-table :not(.owl-dt-calendar-cell-disabled):hover>.owl-dt-calendar-cell-content:not(.owl-dt-calendar-cell-selected){background-color:rgba(0,0,0,.04)}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range{background:rgba(63,81,181,.2)}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range.owl-dt-calendar-cell-range-from{-moz-border-radius-topleft:999px;border-top-left-radius:999px;-moz-border-radius-bottomleft:999px;border-bottom-left-radius:999px}.owl-dt-calendar-table .owl-dt-calendar-cell-in-range.owl-dt-calendar-cell-range-to{-moz-border-radius-topright:999px;border-top-right-radius:999px;-moz-border-radius-bottomright:999px;border-bottom-right-radius:999px}.owl-dt-timer{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;width:100%;height:7em;padding:.5em;outline:0}.owl-dt-timer-box{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-moz-box-orient:vertical;-moz-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:25%;height:100%}.owl-dt-timer-content{-webkit-box-flex:1;-webkit-flex:1 1 auto;-moz-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:100%;margin:.2em 0}.owl-dt-timer-content .owl-dt-timer-input{display:block;width:2em;text-align:center;border:1px solid rgba(0,0,0,.5);-moz-border-radius:3px;border-radius:3px;outline:medium none;font-size:1.2em;padding:.2em}.owl-dt-timer-divider{display:inline-block;-webkit-align-self:flex-end;-ms-flex-item-align:end;align-self:flex-end;position:absolute;width:.6em;height:100%;left:-.3em}.owl-dt-timer-divider:after,.owl-dt-timer-divider:before{content:'';display:inline-block;width:.35em;height:.35em;position:absolute;left:50%;-moz-border-radius:50%;border-radius:50%;-webkit-transform:translateX(-50%);-moz-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);background-color:currentColor}.owl-dt-timer-divider:before{top:35%}.owl-dt-timer-divider:after{bottom:35%}.owl-dt-control-button{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:0;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;margin:0;padding:0;background-color:transparent;font-size:1em;color:inherit}.owl-dt-control-button .owl-dt-control-button-content{position:relative;display:-webkit-inline-box;display:-webkit-inline-flex;display:-moz-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;outline:0}.owl-dt-control-period-button .owl-dt-control-button-content{height:1.5em;padding:0 .5em;-moz-border-radius:3px;border-radius:3px;-webkit-transition:background-color .1s linear;-o-transition:background-color .1s linear;-moz-transition:background-color .1s linear;transition:background-color .1s linear}.owl-dt-control-period-button:hover>.owl-dt-control-button-content{background-color:rgba(0,0,0,.12)}.owl-dt-control-period-button .owl-dt-control-button-arrow{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;width:1em;height:1em;margin:.1em;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;-o-transition:transform .2s ease;-moz-transition:transform .2s ease,-moz-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease,-moz-transform .2s ease}.owl-dt-control-arrow-button .owl-dt-control-button-content{padding:0;-moz-border-radius:50%;border-radius:50%;width:1.5em;height:1.5em}.owl-dt-control-arrow-button[disabled]{color:rgba(0,0,0,.4);cursor:default}.owl-dt-control-arrow-button svg{width:50%;height:50%;fill:currentColor}.owl-dt-inline-container,.owl-dt-popup-container{position:relative;width:18.5em;-webkit-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);-moz-box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12)}.owl-dt-inline-container .owl-dt-calendar,.owl-dt-inline-container .owl-dt-timer,.owl-dt-popup-container .owl-dt-calendar,.owl-dt-popup-container .owl-dt-timer{width:100%}.owl-dt-inline-container .owl-dt-calendar,.owl-dt-popup-container .owl-dt-calendar{height:20.25em}.owl-dt-dialog-container{max-height:95vh;margin:-1.5em}.owl-dt-dialog-container .owl-dt-calendar{min-width:250px;min-height:330px;max-width:750px;max-height:750px}.owl-dt-dialog-container .owl-dt-timer{min-width:250px;max-width:750px}@media all and (orientation:landscape){.owl-dt-dialog-container .owl-dt-calendar{width:58vh;height:62vh}.owl-dt-dialog-container .owl-dt-timer{width:58vh}}@media all and (orientation:portrait){.owl-dt-dialog-container .owl-dt-calendar{width:80vw;height:80vw}.owl-dt-dialog-container .owl-dt-timer{width:80vw}}.owl-dt-container-buttons{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;width:100%;height:2em;color:#3f51b5}.owl-dt-container-control-button{font-size:1em;width:50%;height:100%;-moz-border-radius:0;border-radius:0}.owl-dt-container-control-button .owl-dt-control-button-content{height:100%;width:100%;-webkit-transition:background-color .1s linear;-o-transition:background-color .1s linear;-moz-transition:background-color .1s linear;transition:background-color .1s linear}.owl-dt-container-control-button:hover .owl-dt-control-button-content{background-color:rgba(0,0,0,.1)}.owl-dt-container-info{padding:0 .5em;cursor:pointer;-webkit-tap-highlight-color:transparent}.owl-dt-container-info .owl-dt-container-range{outline:0}.owl-dt-container-info .owl-dt-container-range .owl-dt-container-range-content{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-moz-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:.5em 0;font-size:.8em}.owl-dt-container-info .owl-dt-container-range:last-child{border-top:1px solid rgba(0,0,0,.12)}.owl-dt-container-info .owl-dt-container-info-active{color:#3f51b5}.owl-dt-container-disabled,.owl-dt-trigger-disabled{opacity:.35;filter:Alpha(Opacity=35);background-image:none;cursor:default!important}.owl-dt-timer-hour12{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;color:#3f51b5}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box{border:1px solid currentColor;-moz-border-radius:2px;border-radius:2px;-webkit-transition:background .2s ease;-o-transition:background .2s ease;-moz-transition:background .2s ease;transition:background .2s ease}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box .owl-dt-control-button-content{width:100%;height:100%;padding:.5em}.owl-dt-timer-hour12 .owl-dt-timer-hour12-box:focus .owl-dt-control-button-content,.owl-dt-timer-hour12 .owl-dt-timer-hour12-box:hover .owl-dt-control-button-content{background:#3f51b5;color:#fff}.owl-dt-calendar-only-current-month .owl-dt-calendar-cell-out{visibility:hidden;cursor:default}.owl-dt-inline{display:inline-block}.owl-dt-control{outline:0;cursor:pointer}.owl-dt-control .owl-dt-control-content{outline:0}.owl-dt-control:focus>.owl-dt-control-content{background-color:rgba(0,0,0,.12)}.owl-dt-control:not(:-moz-focusring):focus>.owl-dt-control-content{-moz-box-shadow:none;box-shadow:none}.owl-hidden-accessible{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}","@use 'sass:map';\n@use 'typography-utils';\n@use '../theming/theming';\n\n/// Defines a typography level from the Material Design spec.\n/// @param {String} $font-size The font-size for this level.\n/// @param {String | Number} $line-height The line-height for this level.\n/// @param {String | Number} $font-weight The font-weight for this level.\n/// @param {String} $font-family The font-family for this level.\n/// @param {String} $letter-spacing The letter-spacing for this level.\n/// @returns {Map} A map representing the definition of this typographic level.\n@function define-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n/// Defines a collection of typography levels to configure typography for an application.\n/// Any level not specified defaults to the values defined in the Material Design specification:\n/// https://material.io/guidelines/style/typography.html.\n///\n/// Note that the Material Design specification does not describe explicit letter-spacing values.\n/// The values here come from reverse engineering the Material Design examples.\n/// @param {String} $font-family Default font-family for levels that don't specify font-family.\n/// @param {Map} $display-4 Configuration for the \"display-4\" typographic level.\n/// @param {Map} $display-3 Configuration for the \"display-3\" typographic level.\n/// @param {Map} $display-2 Configuration for the \"display-2\" typographic level.\n/// @param {Map} $display-1 Configuration for the \"display-1\" typographic level.\n/// @param {Map} $headline Configuration for the \"headline\" typographic level.\n/// @param {Map} $title Configuration for the \"title\" typographic level.\n/// @param {Map} $subheading-2 Configuration for the \"subheading-2\" typographic level.\n/// @param {Map} $subheading-1 Configuration for the \"subheading-1\" typographic level.\n/// @param {Map} $body-2 Configuration for the \"body-2\" typographic level.\n/// @param {Map} $body-1 Configuration for the \"body-1\" typographic level.\n/// @param {Map} $caption Configuration for the \"caption\" typographic level.\n/// @param {Map} $button Configuration for the \"button\" typographic level.\n/// @param {Map} $input Configuration for the \"input\" typographic level.\n/// @returns {Map} A typography config for the application.\n///\n/// @deprecated Use `mat.define-typography-config` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@function define-legacy-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     define-typography-level(34px, 40px, 400),\n  $headline:      define-typography-level(24px, 32px, 400),\n  $title:         define-typography-level(20px, 32px, 500),\n  $subheading-2:  define-typography-level(16px, 28px, 400),\n  $subheading-1:  define-typography-level(15px, 24px, 400),\n  $body-2:        define-typography-level(14px, 24px, 500),\n  $body-1:        define-typography-level(14px, 20px, 400),\n  $caption:       define-typography-level(12px, 20px, 400),\n  $button:        define-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         define-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map.get($level, font-family) == null {\n      $new-level: map.merge($level, (font-family: $font-family));\n      $config: map.merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map.merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function private-typography-is-2018-config($config) {\n  @return map.get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function private-typography-is-2014-config($config) {\n  @return map.get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n//\n// Components using this function should be migrated to normalize to the 2018 style config instead.\n// New components should not use this function.\n@function private-typography-to-2014-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2014-config($config) {\n    $args: (\n        display-4: map.get($config, headline-1),\n        display-3: map.get($config, headline-2),\n        display-2: map.get($config, headline-3),\n        display-1: map.get($config, headline-4),\n        headline: map.get($config, headline-5),\n        title: map.get($config, headline-6),\n        subheading-2: map.get($config, subtitle-1),\n        subheading-1: map.get($config, subtitle-2),\n        body-2: map.get($config, body-1),\n        body-1: map.get($config, body-2),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        font-family: map.get($config, font-family),\n    );\n    $non-null-args: ();\n    @each $key, $value in $args {\n      @if $value != null {\n        $non-null-args: map.merge($non-null-args, ($key: $value));\n      }\n    }\n    @return define-legacy-typography-config($non-null-args...);\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function private-typography-to-2018-config($config) {\n  @if $config == null {\n    @return null;\n  }\n  @if not private-typography-is-2018-config($config) {\n    @return (\n        headline-1: map.get($config, display-4),\n        headline-2: map.get($config, display-3),\n        headline-3: map.get($config, display-2),\n        headline-4: map.get($config, display-1),\n        headline-5: map.get($config, headline),\n        headline-6: map.get($config, title),\n        subtitle-1: map.get($config, subheading-2),\n        font-famiy: map.get($config, font-family),\n\n        // These mappings are odd, but body-2 in the 2014 system actually looks closer to subtitle-2\n        // in the 2018 system, and subeading-1 in the 2014 system looks more like body-1 in the 2018\n        // system.\n        subtitle-2: map.get($config, body-2),\n        body-1: map.get($config, subheading-1),\n\n        body-2: map.get($config, body-1),\n        button: map.get($config, button),\n        caption: map.get($config, caption),\n        overline: if(map.get($config, overline), map.get($config, overline),\n            define-typography-level(12px, 32px, 500)\n        )\n    );\n  }\n  @return $config;\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n@mixin typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2018-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline-5,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline-5,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline-5);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-headline-6,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-headline-6,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, headline-6);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subtitle-1,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subtitle-1,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subtitle-1);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-body-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-body-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, body-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.83),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-2)} * 0.67),\n      typography-utils.font-weight($config, body-2),\n      typography-utils.line-height($config, body-2),\n      typography-utils.font-family($config, body-2)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-subtitle-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-subtitle-2 {\n    @include typography-utils.typography-level($config, subtitle-2);\n  }\n\n  .mat-body,\n  .mat-body-2,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-2,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-2);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-headline-1,\n  #{$selector} .mat-headline-1 {\n    @include typography-utils.typography-level($config, headline-1);\n    margin: 0 0 56px;\n  }\n\n  .mat-headline-2,\n  #{$selector} .mat-headline-2 {\n    @include typography-utils.typography-level($config, headline-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-3,\n  #{$selector} .mat-headline-3 {\n    @include typography-utils.typography-level($config, headline-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-headline-4,\n  #{$selector} .mat-headline-4 {\n    @include typography-utils.typography-level($config, headline-4);\n    margin: 0 0 64px;\n  }\n}\n\n/// Emits baseline typographic styles based on a given config.\n/// @param {Map} $config-or-theme A typography config for an entire theme.\n/// @param {String} $selector Ancestor selector under which native elements, such as h1, will\n///     be styled.\n/// @deprecated Use `mat.typography-hierarchy` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography-hierarchy($config-or-theme, $selector: '.mat-typography') {\n  $config: private-typography-to-2014-config(theming.get-typography-config($config-or-theme));\n\n  // Note that it seems redundant to prefix the class rules with the `$selector`, however it's\n  // necessary if we want to allow people to overwrite the tag selectors. This is due to\n  // selectors like `#{$selector} h1` being more specific than ones like `.mat-title`.\n  .mat-h1,\n  .mat-headline,\n  #{$selector} .mat-h1,\n  #{$selector} .mat-headline,\n  #{$selector} h1 {\n    @include typography-utils.typography-level($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2,\n  .mat-title,\n  #{$selector} .mat-h2,\n  #{$selector} .mat-title,\n  #{$selector} h2 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3,\n  .mat-subheading-2,\n  #{$selector} .mat-h3,\n  #{$selector} .mat-subheading-2,\n  #{$selector} h3 {\n    @include typography-utils.typography-level($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4,\n  .mat-subheading-1,\n  #{$selector} .mat-h4,\n  #{$selector} .mat-subheading-1,\n  #{$selector} h4 {\n    @include typography-utils.typography-level($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5,\n  #{$selector} .mat-h5,\n  #{$selector} h5 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.83),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6,\n  #{$selector} .mat-h6,\n  #{$selector} h6 {\n    @include typography-utils.font-shorthand(\n       // calc is used here to support css variables\n      calc(#{typography-utils.font-size($config, body-1)} * 0.67),\n      typography-utils.font-weight($config, body-1),\n      typography-utils.line-height($config, body-1),\n      typography-utils.font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong,\n  .mat-body-2,\n  #{$selector} .mat-body-strong,\n  #{$selector} .mat-body-2 {\n    @include typography-utils.typography-level($config, body-2);\n  }\n\n  .mat-body,\n  .mat-body-1,\n  #{$selector} .mat-body,\n  #{$selector} .mat-body-1,\n  #{$selector} {\n    @include typography-utils.typography-level($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small,\n  .mat-caption,\n  #{$selector} .mat-small,\n  #{$selector} .mat-caption {\n    @include typography-utils.typography-level($config, caption);\n  }\n\n  .mat-display-4,\n  #{$selector} .mat-display-4 {\n    @include typography-utils.typography-level($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3,\n  #{$selector} .mat-display-3 {\n    @include typography-utils.typography-level($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2,\n  #{$selector} .mat-display-2 {\n    @include typography-utils.typography-level($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1,\n  #{$selector} .mat-display-1 {\n    @include typography-utils.typography-level($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  // we deliberately do not use the font shorthand here because it overrides\n  // certain font properties that can't be configured in the current typography\n  // config, e.g. the font-variant-caps or font-feature-settings property\n  font-size: font-size($config, $level);\n  font-weight: font-weight($config, $level);\n  line-height: line-height($config, $level);\n  font-family: font-family($config, $level);\n\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","@import \"~ng-pick-datetime/assets/style/picker.min.css\";\n@import 'material';\n@import 'variables';\n@import 'base';\n@import 'component/landing-page';\n@import 'component/list';\n@import 'component/message-dialog';\n@import 'component/comments-table';\n@import 'component/side-panel';\n@import 'component/search-bar';\n@import 'component/filters';\n@import 'component/sort';\n@import 'component/unauthorized-page';\n@import 'smk';\n@import 'lightgallery/scss/lightgallery';\n\n\n.snackbar-error{\n   background-color: $colour-errors;\n   color: $colour-white;\n   font-family: Roboto, \"Helvetica Neue\", sans-serif;\n   font-size: 14px;\n   max-width: 80vw !important;\n   word-break: break-word;\n }\n\n.columns-menu{\n  display: flex;\n  flex: 0 0 auto;\n  div.mat-form-field-wrapper {\n    padding-bottom: 0;\n\n    div.mat-form-field-underline {\n      display: none;\n    }\n\n    div.mat-form-field-infix {\n      width: 50px;\n      border-top: 0;\n      padding: 0;\n\n      mat-select,\n      input{\n        width: 100%;\n      }\n\n      .mat-select-arrow-wrapper{\n        visibility: hidden;\n      }\n    }\n\n    span {\n      font-size: small;\n      top: -.35rem;\n    }\n  }\n}\n\n.display-columns-selector.mat-select-panel{\n  max-height: unset;\n\n  .mat-option{\n    height: 22px;\n    font-size: small;\n    padding: 10px;\n  }\n\n  button{\n    margin: 10px;\n    padding: 10px;\n    font-family: Roboto, \"Helvetica Neue\", sans-serif;\n    font-size: 14px;\n    border-radius: 5px;\n    border: solid 1px darkgrey;\n    background-color: lightgray;\n  }\n}\n\n#core-interface-container {\n  font-family: $font-family-main;\n\n  .mat-paginator-container {\n    justify-content: center;\n    font-size: $font-size;\n  }\n\n}\n\n.owl-dt-popup-container{\n  font-family: $font-family-main;\n}\n\n//.mat-snack-bar-container{\n//  position: relative;\n//  top: 60px;\n//}\n\n// .snackbar-error {\n//   background-color: rgba(246, 189, 189, 1);\n//   color: $colour-black;\n//   position: inherit;\n\n//   .mat-simple-snackbar{\n//     font-family: $font-family-main;\n//     font-size: 13px;\n//   }\n//   .mat-simple-snackbar-action{\n//     color: $colour-errors;\n//   }\n// }\n\n.snackbar-warning {\n  background-color: rgba(244, 230, 195, 1);\n  color: $colour-black;\n  position: inherit;\n  .mat-simple-snackbar{\n    font-family: $font-family-main;\n    font-size: 13px;\n  }\n  .mat-simple-snackbar-action{\n    color: #f1780e;\n  }\n}\n\n.snackbar-success {\n  background-color: #2e703e;\n  color: $colour-white;\n  position: inherit;\n  .mat-simple-snackbar{\n    font-family: $font-family-main;\n    font-size: 13px;\n  }\n  .mat-button-wrapper{\n    color:$colour-white;\n  }\n}\n\n.snackbar-success-v2 {\n  background-color: $colour-success;\n  color: $colour-white;\n  position: inherit;\n  padding: 18px 16px!important;\n  .mat-simple-snackbar{\n    font-family: $font-family-main;\n    font-size: 13px;\n  }\n  .mat-button-wrapper{\n    color:$colour-white;\n  }\n  .mat-simple-snackbar-action{\n    border: 1px solid white;\n    border-radius: 5px;\n  }\n}\n\n\n.snackbar-success-v2:before {\n  content: '';\n  position: absolute;\n  height: 100%;\n  width: 60px;\n  background-color: white;\n  top: 0;\n  left: -55px;\n  color: #2E7940;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z' fill='%232e7940'/%3E%3C/svg%3E\");\n  background-size: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n\n.snackbar-info {\n  background-color: $colour-info-grey;\n  color: $colour-white;\n  position: inherit;\n  padding: 18px 16px!important;\n  .mat-simple-snackbar{\n    font-family: $font-family-main;\n    font-size: 13px;\n  }\n  .mat-button-wrapper{\n    color:$colour-white;\n  }\n  .mat-simple-snackbar-action{\n    border: 1px solid white;\n    border-radius: 5px;\n  }\n}\n\n\n.snackbar-info:before {\n  content: '';\n  position: absolute;\n  height: 100%;\n  width: 60px;\n  background-color: white;\n  top: 0;\n  left: -55px;\n  color: $colour-info-grey;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 0 24 24' width='24px' fill='%2337464F'%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3Cpath d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z'/%3E%3C/svg%3E\");\n  background-size: 24px;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n\n.full-snack-bar-online{\n  //width: 100%;\n  //background-color: rgba(149, 206, 170, 1);\n  //color: $colour-black;\n  //max-width: calc(var(--vw, 1vw) * 80) !important;\n  //word-break: break-word;\n  //\n  //.mat-simple-snackbar{\n  //  font-family: $font-family-main;\n  //  font-size: 13px;\n  //}\n  .mat-simple-snackbar-action{\n    color: #acdbac;\n  }\n}\n\n.full-snack-bar-offline{\n  background-color: $colour-errors;\n  color: $colour-white;\n  font-family: $font-family-main;\n  font-size: 13px;\n  max-width: calc(var(--vw, 1vw) * 80) !important;\n  word-break: break-word;\n}\n\n//.mat-tab-body{\n//  position: relative !important;\n//  overflow-x: hidden !important;\n//  overflow-y: auto !important;\n//  z-index: 1 !important;\n//  flex-grow: 1 !important;\n//}\n\n@media print {\n\n  mat-table,\n  tr,\n  mat-sidenav-content{\n    width: 750px !important;\n  }\n  mat-table{\n    display: block;\n  }\n\n  .mat-table .mat-cell,\n  .mat-table .mat-header-cell{\n    padding: 0 !important;\n  }\n\n  .nav-menu-button fa-icon,\n  mat-tab-header,\n  .review-item-header .header-icons,\n  td.select-cell,\n  .bottom-toolbar,\n  wf1-search-bar,\n  wf1-filters,\n  wf1-public-application-header,\n  wf1-application-header{\n    display: none !important;\n  }\n\n  #core-interface-container .mat-header-cell,\n  .review-item .mat-expansion-panel-content .fixed-table-layout td,\n  mat-expansion-panel .review-item-header .review-item-status,\n  mat-expansion-panel .review-item-header mat-panel-description.mat-expansion-panel-header-description{\n    font-size: 10px !important;\n  }\n\n  .cdk-overlay-pane{\n    display: none;\n  }\n\n  //mat-expansion-panel{\n  //  page-break-inside: avoid;\n  //}\n}\n\n.float-right{\n  float: right;\n}\n\n.padding-right{\n  padding-right: 16px;\n}\n\n.wfone-base-container .table-wrapper .options-bar-header{\n  >div.label{\n    padding-bottom: 10px;\n    padding-top: 10px;\n    padding-left: 0;\n  }\n  select,\n  input {\n    border-radius: 5px;\n    border: solid 1px grey;\n  }\n\n  >div{\n    padding: 0 10px;\n    display: inline-block;\n\n    .select{\n      width: auto;\n\n      .select-value{\n        min-width: 150px;\n      }\n    }\n\n  }\n}\n.display-columns-selector.select-panel{\n  max-height: unset;\n\n  .option{\n    height: 30px;\n    font-family: $font-family-main;\n    font-size: $font-size;\n    padding: 10px;\n  }\n\n  button{\n    margin: 10px;\n    padding: 10px;\n    font-family: $font-family-main;\n    font-size: $font-size;\n    border-radius: 5px;\n    border: solid 1px grey;\n    background-color: $colour-lighter-grey;\n  }\n}\n\n.mat-accordion {\n  &>wfone-base-expansion-panel .mat-expansion-panel-spacing:last-child,\n  &>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing {\n    margin-bottom: var(--wf1-gutter-space) !important;\n  }\n\n  mat-expansion-panel:not(.mat-expanded),\n  mat-expansion-panel.mat-expansion-panel-spacing {\n    margin: var(--wf1-gutter-space) var(--wf1-gutter-space);\n\n    .mat-expansion-panel-header {\n      padding-left: var(--wf1-gutter-space);\n      padding-right: var(--wf1-gutter-space);\n      height: unset !important;\n      min-height: 50px !important;\n      border-bottom: 1px solid $colour-light-grey;\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n      font-family: $font-family-main;\n\n      .expansion-header{\n        align-items: center;\n        padding: 5px 0;\n      }\n\n      mat-panel-description{\n        flex-grow: unset;\n        margin-right: 5px;\n        margin-left: -5px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n\n      &[aria-disabled=true]{\n        color: unset;\n      }\n\n      h1{\n        padding: 0;\n        margin: 0;\n      }\n\n    }\n\n    .mat-expansion-panel-content{\n      font-family: $font-family-main;\n      .mat-expansion-panel-body{\n        padding: 0;\n      }\n    }\n\n    .wf1-expansion-panel-body {\n      padding: 0 var(--wf1-gutter-space) var(--wf1-gutter-space);\n      font-size: $font-size;\n      font-family: $font-family-main;\n\n      .expansion-header-sub{\n        display: flex;\n        justify-content: flex-end;\n\n        h3{\n          margin-bottom: 0;\n        }\n      }\n\n      .table-wrapper{\n        margin: var(--wf1-gutter-space) 0;\n        width: 100%;\n      }\n\n      .summary-card{\n        margin: var(--wf1-gutter-space) 0 0 0;\n      }\n\n      mat-card.mat-card.wf1-vendor-portal-header-bar {\n        padding: 0;\n      }\n\n      mat-expansion-panel.mat-expansion-panel-spacing{\n        margin: var(--wf1-gutter-space) 0 0 0;\n      }\n\n      .card-wrapper{\n        margin: 0;\n      }\n    }\n\n    .mat-tab-body{\n      .table-wrapper{\n        margin: var(--wf1-gutter-space);\n        width: calc(100% - 2*var(--wf1-gutter-space));\n      }\n    }\n\n    .mat-action-row {\n      border-bottom: 1px solid $colour-lighter-grey;\n      padding: var(--wf1-gutter-space);\n      background-color: $colour-lighter-grey;\n    }\n\n\n  }\n\n  .mat-expansion-panel-spacing:last-child, .mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing {\n    margin-bottom: var(--wf1-gutter-space);\n  }\n}\n\n.smk-popup {\n  font-family: 'BCSans', 'Open Sans', Verdana, Arial, sans-serif;\n  padding-bottom: 10px;\n}\n\n.popup-header {\n  border-bottom: 1px solid #1a5a96;\n  color: #1a5a96;\n  font-weight: 700;\n  font-size: 14px;\n  padding: 5px;\n}\n\n.popup-title {\n  color: black;\n  font-size: 16px;\n  padding: 5px;\n}\n\n.title-label {\n  position: absolute;\n  margin-top: 2px;\n  margin-left: 5px;\n}\n\n.popup-attributes {\n  display: flex;\n  padding-left: 5px;\n\n  .label {\n    margin-right: auto;\n    font-size: 11px;\n    color: #71757C;\n    letter-spacing: 1.5px;\n    text-transform: uppercase;\n    width: 40%;\n  }\n  .attribute {\n    margin-left: auto;\n    font-size: 14px;\n    color: black;\n    width: 60%;\n  }\n  .attribute-red {\n    color: #B60000;\n  }\n}\n\n.popup-button-container {\n  margin-top: 10px;\n  margin-left: 5px;\n}\n\n.popup-button {\n  padding-left: 6px;\n  padding-right: 6px;\n  border: 1px solid #1e5d98;\n  border-radius: 5px;\n  color: #1e5d98;\n  font-size: 14px;\n  text-decoration: none;\n  transition: 0.3s;\n}\n\n.popup-button:hover {\n  border: 1px solid #1e5d98;\n  background-color: #e0e0e0;\n}\n\n.smk-position {\n  white-space: nowrap;\n  display: inline-block;\n  font-weight: 700;\n  margin: 0 5px;\n  font-size: 14px;\n}\n\n.mat-dialog-container {\n  padding: 0px 0px 24px 0px !important;\n  overflow: hidden !important;\n}\n\n.dialog-container {\n  h1 {\n    background-color: #003366;\n    color: white;\n    padding: 10px;\n    font-size: 20px;\n  }\n  .dialog-content {\n    color: black;\n    background-color: white;\n    padding: 0px 32px 0px 32px;\n  }\n  .dialog-actions {\n    background-color: #eeeeee;\n    flex-flow: row-reverse;\n    button {\n      margin-right: 7px;\n    }\n  }\n}\n\n.lg-fullscreen:after {\n  content: \"\\e20c\";\n}\n\n.property-list {\n  z-index: 2000;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  width: 350px;\n  padding: 12px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  overflow-x: hidden;\n  overflow-y: auto;\n  outline: 0;\n  min-height: inherit;\n  max-height: inherit;\n  background: #fff;\n  color: rgba(0,0,0,.87);\n}\n\n.lg-toolbar .lg-icon {\n  color: #fff!important;\n  font-size: 36px !important;\n}\n\n.lg-outer .lg-thumb-item.active, .lg-outer .lg-thumb-item:hover {\n  border-color:white !important;\n  border-radius: 4px !important;\n  border: 2px solid #fff !important;\n  -webkit-transition: border-color 0.25s ease;\n  -o-transition: border-color 0.25s ease;\n  transition: border-color 0.25s ease;\n}\n\n.lg-outer .lg-thumb-item {\n  border-radius: 0 !important;\n  border: 0 !important;\n}\n\n.property-list h2 {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.property-list h2 .close-button {\n  cursor: pointer;\n}\n\n\n\n@media (min-width: 768px)and (max-width: 1023px) {\n  wf-menu-bar{\n    .nav-items .nav-item{\n      border: none!important;\n    }\n\n    .nav-items .nav-item span{\n      min-width: calc(25vw - 1px)!important\n    }\n    .nav-items .nav-item:not(:last-child){\n\n      border-right: 1px solid var(--wf-menu-bar-divider-color)!important;\n    }\n  }\n}\n\n\n\nwf-admin-incident-desktop{\n  height: auto!important;\n}\n\n.preview-warning {\n  font-size: 10px;\n  color:red;\n  font-weight: 400;\n}","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../button/icon-button-theme';\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Regardless of the user-passed density, we want the calendar previous/next buttons to remain at\n  // density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.option-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-option {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: theming.get-color-from-palette($background, hover);\n    }\n\n    &.mat-active {\n      background: theming.get-color-from-palette($background, hover);\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: theming.get-color-from-palette($warn, text);\n  }\n}\n\n/// @deprecated Use `mat.option-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-option {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.option-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../core/theming/theming';\n@use '../../core/typography/typography';\n@use '../../core/typography/typography-utils';\n\n/// @deprecated Use `mat.optgroup-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: theming.get-color-from-palette($foreground, hint-text);\n  }\n}\n\n/// @deprecated Use `mat.optgroup-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-optgroup-label {\n    @include typography-utils.typography-level($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.optgroup-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../datepicker/datepicker-legacy-compat';\n\n$_ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _focus-overlay-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: theming.get-color-from-palette($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $hue, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _ripple-color($theme, $hue, $opacity: $_ripple-opacity) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _theme-property($theme, $property, $hue) {\n  $primary: map.get($theme, primary);\n  $accent: map.get($theme, accent);\n  $warn: map.get($theme, warn);\n  $background: map.get($theme, background);\n  $foreground: map.get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: theming.get-color-from-palette($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: theming.get-color-from-palette($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: theming.get-color-from-palette($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: theming.get-color-from-palette($palette, disabled-button);\n    }\n  }\n}\n\n/// @deprecated Use `mat.button-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _theme-property($config, 'color', text);\n    @include _focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map.get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: theming.get-color-from-palette($foreground, text);\n    background-color: theming.get-color-from-palette($background, raised-button);\n\n    @include _theme-property($config, 'color', default-contrast);\n    @include _theme-property($config, 'background-color', default);\n    @include _ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include private.private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include private.private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include private.private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include private.private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: $config,\n      typography: null,\n      density: null,\n  ));\n}\n\n/// @deprecated Use `mat.button-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: $config,\n      density: null,\n  ));\n}\n\n@mixin _density($config-or-theme) {\n  @include datepicker-legacy-compat.legacy-button-compat-theme((\n      color: null,\n      typography: null,\n      density: theming.get-density-config($config-or-theme)\n  ));\n}\n\n/// @deprecated Use `mat.button-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        top: 50%;\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.card-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-card {\n    @include private.private-theme-overridable-elevation(1, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include private.private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n}\n\n/// @deprecated Use `mat.card-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-card {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: typography-utils.font-size($config, headline);\n      weight: typography-utils.font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: typography-utils.font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.card-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$target-height: 22px;\n$font-size: 10px;\n$vertical-padding: math.div($target-height - $font-size, 2);\n\n$handset-target-height: 30px;\n$handset-font-size: 14px;\n$handset-vertical-padding: math.div($handset-target-height - $handset-font-size, 2);\n\n/// @deprecated Use `mat.tooltip-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  .mat-tooltip {\n    background: theming.get-color-from-palette($background, tooltip, 0.9);\n  }\n}\n\n/// @deprecated Use `mat.tooltip-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tooltip {\n    font-family: typography-utils.font-family($config);\n    font-size: $font-size;\n    padding-top: $vertical-padding;\n    padding-bottom: $vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $handset-font-size;\n    padding-top: $handset-vertical-padding;\n    padding-bottom: $handset-vertical-padding;\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tooltip-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/vendor-prefixes';\n\n\n/// @deprecated Use `mat.input-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: theming.get-color-from-palette($primary, text);\n\n    @include vendor-prefixes.input-placeholder {\n      color: form-common.private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map.get($config, is-dark)) {\n      &:not(.mat-native-select-inline) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: theming.get-color-from-palette($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: theming.get-color-from-palette($warn, text);\n  }\n\n  .mat-form-field-disabled {\n    .mat-form-field-prefix,\n    .mat-form-field-suffix {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.input-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: typography-utils.private-coerce-unitless-to-em(-$line-spacing);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.input-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-input') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@use './form-field-fill-theme.scss';\n@use './form-field-legacy-theme.scss';\n@use './form-field-outline-theme.scss';\n@use './form-field-standard-theme.scss';\n\n// Color styles that apply to all appearances of the form-field.\n/// @deprecated Use `mat.form-field-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color:\n    theming.get-color-from-palette($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: theming.get-color-from-palette($primary, text);\n  $required-label-color: theming.get-color-from-palette($accent, text);\n\n  // Underline colors.\n  $underline-color-base:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: theming.get-color-from-palette($accent, text);\n  $underline-color-warn: theming.get-color-from-palette($warn, text);\n  $underline-focused-color: theming.get-color-from-palette($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include form-field-legacy-theme.legacy-color($config);\n  @include form-field-standard-theme.standard-color($config);\n  @include form-field-fill-theme.fill-color($config);\n  @include form-field-outline-theme.outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $dedupe;\n\n  $dedupe: $dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top: $subscript-font-scale *\n      typography-utils.private-coerce-unitless-to-em($line-height);\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include typography-utils.typography-level($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: typography-utils.private-coerce-unitless-to-em($line-height);\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n  }\n\n  @include form-field-legacy-theme.legacy-typography($config);\n  @include form-field-standard-theme.standard-typography($config);\n  @include form-field-fill-theme.fill-typography($config);\n  @include form-field-outline-theme.outline-typography($config);\n}\n\n/// @deprecated Use `mat.form-field-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-legacy-theme.private-form-field-legacy-density($density-scale);\n  @include form-field-standard-theme.private-form-field-standard-density($density-scale);\n  @include form-field-fill-theme.private-form-field-fill-density($density-scale);\n  @include form-field-outline-theme.private-form-field-outline-density($density-scale);\n}\n\n/// @deprecated Use `mat.form-field-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-legacy-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-color: theming.get-color-from-palette($foreground, secondary-text);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $legacy-dedupe);\n  width: math.div(100%, $font-scale) + $legacy-dedupe;\n\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $legacy-dedupe: $legacy-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-legacy-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: math.div($line-height - 1, 2);\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  // If the line-height is given as a unitless number, coerce it to `em`.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale) - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{math.div($wrapper-padding-bottom, $subscript-font-scale)});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label] + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-legacy-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-legacy-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-legacy-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin legacy-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include legacy-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include legacy-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-fill-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $fill-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background:\n    theming.get-color-from-palette($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $fill-dedupe)\n             scale($font-scale);\n  width: math.div(100%, $font-scale) + $fill-dedupe;\n\n  $fill-dedupe: $fill-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-fill-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-fill-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-fill-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-fill-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin fill-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include fill-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include fill-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-outline-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $label-disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n  $outline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: theming.get-color-from-palette($primary);\n  $outline-color-accent: theming.get-color-from-palette($accent);\n  $outline-color-warn: theming.get-color-from-palette($warn);\n  $outline-color-disabled:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $outline-dedupe)\n  scale($font-scale);\n  width: math.div(100%, $font-scale) + $outline-dedupe;\n\n  $outline-dedupe: $outline-dedupe + 0.00001 !global;\n}\n\n/// @deprecated Use `mat.form-field-outline-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top:\n      $subscript-font-scale * typography-utils.private-coerce-unitless-to-em($line-height);\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: math.div(0.5em, $subscript-font-scale);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label] + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-private-form-field-outline-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-outline-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-outline-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin outline-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include outline-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include outline-typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/style/form-common';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.select-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-select-value {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: form-common.private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: theming.get-color-from-palette($background, card);\n    @include private.private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: theming.get-color-from-palette($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: theming.get-color-from-palette($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: theming.get-color-from-palette($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n/// @deprecated Use `mat.select-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  // The unit-less line-height from the font config.\n  $line-height: typography-utils.line-height($config, input);\n\n  .mat-select {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: typography-utils.private-coerce-unitless-to-em($line-height);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.select-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.checkbox-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: theming.get-color-from-palette($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: theming.get-color-from-palette($foreground, disabled);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map.get(map.get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.checkbox-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-checkbox {\n    font-family: typography-utils.font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: typography-utils.line-height($config, body-2);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.checkbox-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.dialog-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-dialog-container {\n    @include private.private-theme-elevation(24, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.dialog-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-dialog-title {\n    @include typography-utils.typography-level($config, title);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.dialog-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$chip-remove-font-size: 18px;\n\n@mixin _element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: theming.get-color-from-palette($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (meta.type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  @include _element-color(theming.get-color-from-palette($palette, default-contrast),\n    theming.get-color-from-palette($palette));\n\n  .mat-ripple-element {\n    @include _ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n/// @deprecated Use `mat.chips-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $unselected-background: theming.get-color-from-palette($background, unselected-chip);\n  $unselected-foreground: theming.get-color-from-palette($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include private.private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map.get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n  }\n}\n\n/// @deprecated Use `mat.chips-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-chip {\n    font-size: typography-utils.font-size($config, body-2);\n    font-weight: typography-utils.font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.chips-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _checked-color($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: theming.get-color-from-palette($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark: map.get($config, is-dark);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: theming.get-color-from-palette($foreground, disabled);\n  $ripple-unchecked-color: theming.get-color-from-palette($foreground, base);\n\n  .mat-slide-toggle {\n    @include _checked-color($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _checked-color($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _checked-color($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include private.private-theme-elevation(1, $config);\n    background-color: theming.get-color-from-palette(palette.$grey-palette, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n/// @deprecated Use `mat.slide-toggle-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slide-toggle-content {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slide-toggle-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.tabs-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $header-border: 1px solid theming.get-color-from-palette($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] > .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _ink-bar-color($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _ink-bar-color($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _label-focus-color($foreground, $color);\n        @include _tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _ink-bar-color($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: theming.get-color-from-palette($color, $hue);\n  }\n}\n\n@mixin _label-focus-color($foreground, $tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      background-color: theming.get-color-from-palette($tab-focus-color, lighter, 0.3);\n\n      &.mat-tab-disabled {\n        background-color: theming.get-color-from-palette($foreground, disabled, 0.1);\n      }\n    }\n  }\n}\n\n@mixin _tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: theming.get-color-from-palette($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: theming.get-color-from-palette($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: theming.get-color-from-palette($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-link-container .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: theming.get-color-from-palette($background-color, default-contrast);\n  }\n\n  > .mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    border-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.4;\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element,\n  > .mat-tab-header-pagination .mat-ripple-element {\n    // Set the color opacity via `opacity`, rather than `rgba`, because it may be a CSS variable.\n    background-color: theming.get-color-from-palette($background-color, default-contrast, 1);\n    opacity: 0.12;\n  }\n}\n\n/// @deprecated Use `mat.tabs-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tab-group {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: typography-utils.font-family($config, button);\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.tabs-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: theming.get-color-from-palette($palette);\n  }\n}\n\n/// @deprecated Use `mat.radio-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _color($primary);\n    }\n\n    &.mat-accent {\n      @include _color($accent);\n    }\n\n    &.mat-warn {\n      @include _color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: theming.get-color-from-palette($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: theming.get-color-from-palette($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map.get($foreground, base);\n    }\n  }\n}\n\n/// @deprecated Use `mat.radio-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-radio-button {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.radio-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n@mixin _inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: theming.get-color-from-palette($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: theming.get-color-from-palette($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $mat-slider-off-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-off-focused-color: theming.get-color-from-palette($foreground, slider-off-active);\n  $mat-slider-disabled-color: theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color:\n    theming.get-color-from-palette($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color:\n    theming.get-color-from-palette($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color:\n    theming.get-color-from-palette($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-slider {\n    &.mat-primary {\n      @include _inner-content-theme($primary);\n    }\n\n    &.mat-accent {\n      @include _inner-content-theme($accent);\n    }\n\n    &.mat-warn {\n      @include _inner-content-theme($warn);\n    }\n  }\n\n  .mat-slider:hover,\n  .mat-slider.cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider.mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider.mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: theming.get-color-from-palette($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (meta.type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (meta.type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n/// @deprecated Use `mat.slider-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-slider-thumb-label-text {\n    font: {\n      family: typography-utils.font-family($config);\n      size: typography-utils.font-size($config, caption);\n      weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.slider-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n\n/// @deprecated Use `mat.menu-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-menu-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: theming.get-color-from-palette($foreground, 'text');\n\n    &[disabled] {\n      &,\n      .mat-menu-submenu-icon,\n      .mat-icon-no-color {\n        color: theming.get-color-from-palette($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-submenu-icon {\n    color: theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n}\n\n/// @deprecated Use `mat.menu-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-menu-item {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.menu-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n/// @deprecated Use `mat.list-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-list-option {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-subheader {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-list-item-disabled {\n      background-color: theming.get-color-from-palette($background, disabled-list-option);\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: theming.get-color-from-palette($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: theming.get-color-from-palette($background, hover, 0.12);\n    }\n  }\n}\n\n/// @deprecated Use `mat.list-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  $font-family: typography-utils.font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, subheading-2);\n      @include list-common.base(typography-utils.font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: typography-utils.font-family($config, body-2);\n      font-size: typography-utils.font-size($config, body-2);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: typography-utils.font-size($config, caption);\n      @include list-common.base(typography-utils.font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: typography-utils.font-size($config, caption);\n      font-weight: typography-utils.font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.list-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './paginator-variables';\n\n/// @deprecated Use `mat.paginator-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-paginator {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n    border-right: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid theming.get-color-from-palette($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: theming.get-color-from-palette($foreground, 'disabled');\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: typography-utils.font-family($config, caption);\n      size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(paginator-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n/// @deprecated Use `mat.paginator-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.snack-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, palette.$dark-primary-text, palette.$light-secondary-text);\n    background: if($is-dark-theme, map.get(palette.$grey-palette, 50), #323232);\n\n    @include private.private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, theming.get-color-from-palette($accent, text));\n  }\n}\n\n/// @deprecated Use `mat.snack-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-simple-snackbar {\n    font: {\n      family: typography-utils.font-family($config, body-1);\n      size: typography-utils.font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.snack-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n/// @deprecated Use `mat.table-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-table {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n/// @deprecated Use `mat.table-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-table {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: typography-utils.font-size($config, caption);\n    font-weight: typography-utils.font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.table-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'variables';\n@use '@material/elevation/elevation-theme' as mdc-elevation;\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: null) {\n  @if meta.type-of($color) == color and $opacity == null {\n    @include mdc-elevation.elevation($zValue, $color);\n  }\n  @else {\n    // Copied from @material/elevation/_elevation-theme.scss#_box-shadow\n    // TODO(mmalerba): Add support for graceful handling of CSS var color to MDC.\n    $shadow-color:\n      if(meta.type-of($color) == color and $opacity != null, rgba($color, $opacity), $color);\n    $umbra-z-value: map.get(mdc-elevation.$umbra-map, $zValue);\n    $penumbra-z-value: map.get(mdc-elevation.$penumbra-map, $zValue);\n    $ambient-z-value: map.get(mdc-elevation.$ambient-map, $zValue);\n    $box-shadow: (\n      #{'#{$umbra-z-value} #{$shadow-color}'},\n      #{'#{$penumbra-z-value} #{$shadow-color}'},\n      #{$ambient-z-value} $shadow-color\n    );\n    @include mdc-elevation.shadow($box-shadow);\n  }\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation($zValue, $color: $color) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/icon-button/mixins' as mdc-icon-button;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n\n    .mat-mdc-icon-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n\n      &.mat-primary {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(primary)));\n      }\n\n      &.mat-accent {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(secondary)));\n      }\n\n      &.mat-warn {\n        @include mdc-icon-button-theme.theme((icon-color: (mdc-theme-color.prop-value(error))));\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-icon-button-theme.theme((\n          icon-color: $disabled-color,\n          disabled-icon-color: $disabled-color,\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-icon-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    @include mdc-icon-button.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: calc(($size - $icon-size) / 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $size;\n      max-width: $size;\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if math.unit($size) == 'px' and ($size >= 40px and $size <= 48px) {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    .mdc-icon-button__focus-ring {\n      @include feature-targeting.targets($feat-structure) {\n        max-height: $component-size;\n        max-width: $component-size;\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include ink-color_($color, $query: $query);\n    @include ripple-theme.states(\n      $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  .mdc-button__icon {\n    @include theme.property(font-size, $size);\n  }\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/custom-properties';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @if keys.is-key($touch-target-height) or\n      keys.is-key($component-height) or\n      custom-properties.is-custom-prop($touch-target-height) or\n      custom-properties.is-custom-prop($component-height)\n    {\n      // Custom properties\n      @include theme.property(\n        margin-top,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n      @include theme.property(\n        margin-bottom,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n    } @else {\n      // Static values\n      $vertical-margin-value: math.div(\n        $touch-target-height - $component-height,\n        2\n      );\n      margin-top: $vertical-margin-value;\n      margin-bottom: $vertical-margin-value;\n    }\n  }\n\n  @if $component-width {\n    @include feature-targeting.targets($feat-structure) {\n      @if keys.is-key($touch-target-width) or\n        keys.is-key($component-width) or\n        custom-properties.is-custom-prop($touch-target-width) or\n        custom-properties.is-custom-prop($component-width)\n      {\n        // Custom properties\n        @include theme.property(\n          margin-right,\n          'max((touch-target-width - component-width) / 2, 0px)',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n        @include theme.property(\n          margin-left,\n          'max((touch-target-width - component-width) / 2), 0px',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n      } @else {\n        // Static values\n        $horizontal-margin-value: math.div(\n          $touch-target-width - $component-width,\n          2\n        );\n        margin-right: $horizontal-margin-value;\n        margin-left: $horizontal-margin-value;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/ripple/ripple-theme';\n@use '../core/selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use '../core/style/elevation';\n@use '../core/style/private';\n\n/// @deprecated Use `mat.core-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{elevation.$prefix}#{$zValue} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n/// @deprecated Use `mat.core-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-core') {\n    // Legacy-specific themes.\n    @include option-theme.theme($theme);\n    @include optgroup-theme.theme($theme);\n\n    // Non-legacy themes that are forwarded.\n    @include ripple-theme.theme($theme);\n    @include pseudo-checkbox-theme.theme($theme);\n\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use '../core/theming/theming';\n\n// Approximates the correct buffer color by using a mix between the theme color\n// and the theme's background color.\n@function _get-buffer-color($theme, $background) {\n  $theme-color: theming.get-color-from-palette($theme);\n  // Return fallback color if the theme uses variables to define colors.\n  @if (meta.type-of($theme-color) != 'color' or meta.type-of($background) != 'color') {\n    @return theming.get-color-from-palette($theme, lighter);\n  }\n  @return color.mix($theme-color, $background, $weight: 25%);\n}\n\n/// @deprecated Use `mat.progress-bar-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get(map.get($config, background), background);\n\n  .mat-progress-bar-background {\n    fill: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: _get-buffer-color($primary, $background);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: theming.get-color-from-palette($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($accent, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: _get-buffer-color($warn, $background);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-bar-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-bar-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.progress-spinner-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: theming.get-color-from-palette($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: theming.get-color-from-palette($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: theming.get-color-from-palette($warn);\n    }\n  }\n}\n\n/// @deprecated Use `mat.progress-spinner-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.progress-spinner-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// stylelint-disable material/no-prefixes\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  // Note: this isn't necessary anymore since we don't support\n  // IE, but it caused some presubmit failures in #23416.\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin color-adjust($value) {\n  -webkit-print-color-adjust: $value;\n  color-adjust: $value;\n}\n\n@mixin private-background-clip($value) {\n  -webkit-background-clip: $value;\n  background-clip: $value;\n}\n\n@mixin clip-path($value) {\n  -webkit-clip-path: $value;\n  clip-path: $value;\n}\n// stylelint-enable\n","@use 'sass:map';\n@use '../theming/theming';\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function private-control-placeholder-color($config) {\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  @return theming.get-color-from-palette($foreground, secondary-text,\n    if($is-dark-theme, 0.5, 0.42));\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n@use '../core/style/form-common';\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n/// @deprecated Use `mat.form-field-standard-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $is-dark-theme: map.get($config, is-dark);\n  $underline-color:\n    theming.get-color-from-palette($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include form-common.private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n/// @deprecated Use `mat.form-field-standard-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-typography($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-private-form-field-standard-density` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin private-form-field-standard-density($config-or-theme) {}\n\n/// @deprecated Use `mat.form-field-standard-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin standard-theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include standard-color($color);\n    }\n    @if $density != null {\n      @include private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include standard-typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n/// @deprecated Use `mat.autocomplete-color` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n\n  .mat-autocomplete-panel {\n    @include private.private-theme-overridable-elevation(4, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: theming.get-color-from-palette($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: theming.get-color-from-palette($foreground, text);\n      }\n    }\n  }\n}\n\n/// @deprecated Use `mat.autocomplete-typography` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n/// @deprecated Use `mat.autocomplete-theme` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n/// @breaking-change 17.0.0\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-legacy-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","/**\n Colour Variables\n */\n$opacity-grey: rgba(0, 0, 0, 0.13);\n$opacity-dark-grey: rgba(0, 0, 0, 0.54);\n$background-color: $opacity-grey;\n$colour-info-grey: #37464F;\n$colour-dark-grey: #003366;\n$colour-medium-grey: #d7d7d7;\n$colour-light-grey: #a7a9ac;\n$colour-toolbar-grey: #bdbdbd;\n$colour-yellow: #e69f00;\n$colour-light-yellow: #f9ca81;\n$colour-lighter-yellow: #f9f9cd;\n$colour-black: #000000;\n$colour-red: #ff4545;\n$colour-green: #009e73;\n$colour-blue: #003366;\n$colour-white: #ffffff;\n$colour-errors: #f44336;\n$colour-warnings: orange;\n$colour-orange: #F59A23;\n$colour-lighter-grey: #f3f5f6;\n$opacity-light-grey: rgba(0, 0, 0, 0.06);\n$colour-light-orange: #FFD3A0;\n\n\n\n\n$colour-toolbar-background: rgb(192, 198, 202);\n\n$colour-incident-default: $colour-dark-grey;\n$colour-incident-out: $colour-light-grey;\n$colour-incident-being-held: $colour-yellow;\n$colour-incident-not-set: $colour-black;\n$colour-incident-out-of-control: $colour-red;\n$colour-incident-under-control: $colour-green;\n$colour-incident-interface: $colour-red;\n$colour-incident-non-interface: $colour-green;\n\n$colour-incident-with-status-active: $colour-green;\n$colour-incident-with-status-completed: $colour-light-grey;\n\n$colour-incident-agency-assist-active: $colour-green;\n$colour-incident-agency-assist-completed: $colour-light-grey;\n\n$colour-incident-field-activity-active: $colour-green;\n$colour-incident-field-activity-completed: $colour-light-grey;\n\n$colour-rof-default: $colour-dark-grey;\n$colour-rof-draft: $colour-light-grey;\n$colour-rof-general: $colour-blue;\n$colour-rof-interface: $colour-red;\n$colour-rof-campfire: $colour-yellow;\n$colour-rof-cigarette: $colour-black;\n\n$colour-sidebar-title: $colour-white;\n$colour-sidebar-title-background: $colour-medium-grey;\n$colour-sidebar-toolbar: $colour-black;\n$colour-sidebar-toolbar-background: $colour-toolbar-grey;\n$colour-sidebar-filter: $colour-dark-grey;\n$colour-sidebar-filter-background: $colour-white;\n\n$colour-header-background: #003366;\n\n$colour-success: #2E7940;\n$colour-button-primary: $colour-blue;\n\n\n/**\n Spacing Variables\n */\n\n// Standard measurements\n$wf1-app-header-height: 72px;\n$wf1-toolbar-height: 3rem;\n$wf1-sidebar-title-height: 2.75rem;\n$wf1-filter-toolbar-content-height: 12.5rem;\n$wf1-filter-toolbar-total-height: $wf1-toolbar-height + $wf1-filter-toolbar-content-height;\n\n// Side panel related measurements for sidebar interfaces\n$wf1-total-app-header-height: calc( #{ $wf1-app-header-height } + #{ $wf1-toolbar-height } );\n$wf1-header-plus-toolbar-total-height: $wf1-sidebar-title-height + $wf1-toolbar-height;\n$wf1-header-plus-toolbar-and-filter-total-height: $wf1-header-plus-toolbar-total-height + $wf1-toolbar-height;\n$wf1-header-plus-toolbar-and-filter-content-total-height: $wf1-header-plus-toolbar-total-height + $wf1-toolbar-height + $wf1-filter-toolbar-content-height;\n$wf1-app-map-panel-height: calc(100vh - #{$wf1-total-app-header-height});\n$wf1-app-side-panel-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-sidebar-title-height } );\n$wf1-app-side-panel-with-toolbar-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-header-plus-toolbar-total-height } );\n// TODO: Fix filter styling issue that requires .1rem to be added to below variables to hide vertical scrollbar.\n$wf1-app-side-panel-with-toolbar-and-filter-height: calc( 100vh - #{ $wf1-total-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-total-height } + .1rem );\n$wf1-app-side-panel-with-toolbar-and-filter-content-height: calc( 100vh - #{ $wf1-total-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-content-total-height } + .1rem);\n\n// Main panel related measurements for full screen interfaces. (No top-level toolbar)\n$wf1-app-main-panel-container-height: calc(100vh - $wf1-app-header-height);\n$wf1-app-main-panel-tab-panel-height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-toolbar-height } - 1.1rem);\n// TODO: Fix filter styling issue that requires .1rem to be added to below variables to hide vertical scrollbar.\n// $wf1-app-main-panel-table-height: calc(100vh - #{$wf1-total-app-header-height + $wf1-toolbar-height});\n// $wf1-app-main-panel-table-with-filter-content-height: calc(100vh - #{$wf1-total-app-header-height + $wf1-toolbar-height + $wf1-filter-toolbar-content-height + .1rem});\n\n// Other measurements\n$wf1-app-header-mobile-height: 4rem;\n$wf1-app-map-mobile-height: calc(100vh - (7rem));\n$wf1-loading-screen-height: calc(100vh - (6rem));\n$max-component-width: 65rem;\n\n// Tables measurements\n$font-family-main: 'BCSans', 'Open Sans', 'Verdana', 'Arial', 'sans-serif';\n$font-size: 15px;\n$colour-button-primary: $colour-blue;\n$colour-intermediate-action: $colour-success;\n$colour-table-background-odd: $colour-lighter-grey;\n$font-family-emphasis: 'BCSans', 'Open Sans', 'Verdana', 'Arial', 'sans-serif';\n$font-size-small: 12px;\n$wf1-border-radius: 5px;\n$font-weight-emphasis: 400;\n$font-weight: 200;\n$colour-table-background-even: $colour-white;\n$colour-table-background-hover: $colour-medium-grey;\n\n\n","@import \"@angular/material/theming\";\n@import \"./variables\";\n\nbody {\n    margin: 0;\n    // min-height: 100vh;\n}\n\n.wf1-loading-screen {\n    height: $wf1-loading-screen-height;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\nbutton.mat-fab.mat-primary,\nbutton.mat-raised-button.mat-primary {\n  background-color: $colour-button-primary;\n  color: $colour-white;\n\n  &:not([disabled]).intermediate-action{\n    background-color: $colour-intermediate-action;\n  }\n}\n\nmat-toolbar.wf1-application-header.mat-primary {\n    background-color: $colour-header-background;\n    border-bottom: $colour-orange;\n    border-bottom-style: solid;\n    border-bottom-width: 2px;\n    height: $wf1-app-header-height;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .bc-logo-div {\n        img { display: none; }\n\n        flex-shrink: 0;\n        background-image: url( '../assets/images/logo/bcwfservice-logo.png' );\n    \tbackground-size: auto 70px;\n        background-position: center;\n        background-repeat: no-repeat;\n        height: 70px;\n        width: 185px;\n    }\n\n    .app-logo-and-title-div {\n        flex-grow: 1;\n\n        display: flex;\n        justify-content: center;\n        align-items: flex-end;\n\n        .mat-title {\n            font-size: 1.4rem;\n            color: $colour-white;\n            white-space: nowrap;\n            margin-left: 0.4rem;\n            margin-bottom: 0.575rem;\n        }\n    }\n\n    .system-and-user-info {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        margin-right: 20px;\n\n        & > div {\n            display: flex;\n            justify-content: flex-start;\n            align-items: center;\n\n            .header-caption-label {\n                width: 4rem;\n                align-self: flex-end;\n            }\n\n            .header-caption-text {\n                min-width: 8rem;\n                align-self: flex-start;\n            }\n        }\n    }\n\n    .header-caption-label,\n    .header-caption-text {\n        font-size: 0.75rem;\n        margin-bottom: 0.4rem;\n    }\n\n    .header-caption-label {\n        text-align: right;\n        color: #9db1bb;\n        margin-right: 0.5rem;\n    }\n}\n\nmat-toolbar.wf1-application-toolbar {\n    height: $wf1-toolbar-height;\n    .right-text {\n        margin-left: auto;\n        font-size: 0.75rem;\n        font-weight: normal;\n    }\n    .wf1-menu-button {\n        max-height: $wf1-toolbar-height;\n        min-width: 2rem;\n        min-height: 2rem;\n        padding: 0.5rem;\n\n        .mat-icon {\n            width: 2rem;\n            height: 2rem;\n            font-size: 2rem;\n        }\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    mat-button-toggle.mat-button-toggle,\n    mat-button-toggle.mat-button-toggle-checked {\n        max-height: $wf1-toolbar-height;\n        min-width: 2rem;\n        padding: 0;\n        box-shadow: none;\n        color: $colour-dark-grey;\n    }\n\n    .wf1-toolbar-spacer {\n        flex: 1 1 auto;\n    }\n}\n\n#core-interface-container {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n\n    mat-toolbar.wf1-application-header,\n    mat-toolbar.wf1-application-toolbar {\n        flex: 0 0 auto;\n        box-sizing: border-box;\n    }\n\n    mat-sidenav-container {\n        flex: 1 1 auto;\n        display: flex;\n        align-items: stretch;\n\n        mat-sidenav {\n            width: 440px;\n            overflow-x: hidden;\n        }\n\n        mat-sidenav-content {\n            position: relative;\n            height: unset;\n            flex-grow: 1;\n\n            #side-nav-toggle {\n                width: 16px;\n                height: 40px;\n                background: #ff0000;\n                color: #ffffff;\n                position: absolute;\n                top: 1rem;\n                left: 0;\n                border-top-right-radius: 6px;\n                border-bottom-right-radius: 6px;\n                z-index: 500;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                cursor: pointer;\n\n                mat-icon {\n                    font-size: 18px;\n                    line-height: 18px;\n                    height: 18px;\n                    width: 12px;\n                }\n            }\n        }\n    }\n}\n\n.wf1-application-icon {\n    position: relative;\n\n    &.wf1-icon-size-toolbar {\n        width: 2rem;\n        height: 2rem;\n\n        .wf1-cancelled-icon,\n        .wf1-assigned-to-incident-icon {\n            position: absolute;\n            top: -0.2rem;\n            left: -0.25rem;\n\n            .mat-icon {\n                font-size: 2.5rem;\n            }\n        }\n    }\n\n    &.wf1-icon-size-list-small {\n        width: 2rem;\n        height: 2rem;\n\n        .wf1-cancelled-icon,\n        .wf1-assigned-to-incident-icon {\n            position: absolute;\n            top: -0.3rem;\n            left: -0.3rem;\n\n            .mat-icon {\n                font-size: 2.7rem;\n            }\n        }\n    }\n\n    &.wf1-icon-size-list-large {\n        width: 3rem;\n        height: 3rem;\n\n        .wf1-cancelled-icon,\n        .wf1-assigned-to-incident-icon {\n            position: absolute;\n            top: -0.5rem;\n            left: -0.5rem;\n\n            .mat-icon {\n                font-size: 4rem;\n            }\n        }\n    }\n\n    .wf1-main-icon {\n        position: absolute;\n        top: 0;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        z-index: 10;\n        width: 100%;\n        height: 100%;\n\n        .mat-icon {\n            width: 100%;\n            height: 100%;\n\n            svg {\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n\n    .wf1-halo-icon {\n        position: absolute;\n        top: 0;\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        z-index: 5;\n        width: 100%;\n        height: 100%;\n\n        .mat-icon {\n            width: 100%;\n            height: 100%;\n\n            svg {\n                color: $colour-white;\n                fill: $colour-white;\n                width: 100%;\n                height: 100%;\n            }\n        }\n    }\n\n    .wf1-icon-contained {\n        transform: scale(0.75);\n    }\n\n    .wf1-cancelled-icon,\n    .wf1-assigned-to-incident-icon {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        z-index: 15;\n        width: 100%;\n    }\n\n    .wf1-cancelled-icon {\n        color: $colour-red;\n    }\n\n    .wf1-assigned-to-incident-icon {\n        color: $colour-green;\n    }\n\n    .wf1-icon-blink {\n        animation: blink-animation 1s infinite ease-in-out;\n    }\n    @keyframes blink-animation {\n        25% {\n            opacity: 1;\n        }\n        50% {\n            opacity: 0;\n        }\n        75% {\n            opacity: 1;\n        }\n    }\n\n    .wf1-incident-icon-default {\n        svg {\n            color: $colour-incident-default;\n            fill: $colour-incident-default;\n        }\n    }\n\n    .wf1-incident-icon-out {\n        svg {\n            color: $colour-incident-out;\n            fill: $colour-incident-out;\n        }\n    }\n\n    .wf1-incident-icon-being-held {\n        svg {\n            color: $colour-incident-being-held;\n            fill: $colour-incident-being-held;\n        }\n    }\n\n    .wf1-incident-icon-not-set {\n        svg {\n            color: $colour-incident-not-set;\n            fill: $colour-incident-not-set;\n        }\n    }\n\n    .wf1-incident-icon-out-of-control {\n        svg {\n            color: $colour-incident-out-of-control;\n            fill: $colour-incident-out-of-control;\n        }\n    }\n\n    .wf1-incident-icon-under-control {\n        svg {\n            color: $colour-incident-under-control;\n            fill: $colour-incident-under-control;\n        }\n    }\n\n    .wf1-incident-with-status-icon-active {\n        svg {\n            color: $colour-incident-with-status-active;\n            fill: $colour-incident-with-status-active;\n        }\n    }\n\n    .wf1-incident-with-status-icon-completed {\n        svg {\n            color: $colour-incident-with-status-completed;\n            fill: $colour-incident-with-status-completed;\n        }\n    }\n\n    .wf1-incident-agency-assist-icon-active {\n        svg {\n            color: $colour-incident-agency-assist-active;\n            fill: $colour-incident-agency-assist-active;\n        }\n    }\n\n    .wf1-incident-agency-assist-icon-completed {\n        svg {\n            color: $colour-incident-agency-assist-completed;\n            fill: $colour-incident-agency-assist-completed;\n        }\n    }\n\n    .wf1-incident-field-activity-icon-active {\n        svg {\n            color: $colour-incident-field-activity-active;\n            fill: $colour-incident-field-activity-active;\n        }\n    }\n\n    .wf1-incident-field-activity-icon-completed {\n        svg {\n            color: $colour-incident-field-activity-completed;\n            fill: $colour-incident-field-activity-completed;\n        }\n    }\n\n    .wf1-rof-icon-default {\n        svg {\n            color: $colour-rof-default;\n            fill: $colour-rof-default;\n        }\n    }\n\n    .wf1-rof-icon-general {\n        svg {\n            color: $colour-rof-general;\n            fill: $colour-rof-general;\n        }\n    }\n\n    .wf1-rof-icon-interface {\n        svg {\n            color: $colour-rof-interface;\n            fill: $colour-rof-interface;\n        }\n    }\n\n    .wf1-rof-icon-campfire {\n        svg {\n            color: $colour-rof-campfire;\n            fill: $colour-rof-campfire;\n        }\n    }\n\n    .wf1-rof-icon-cigarette {\n        svg {\n            color: $colour-rof-cigarette;\n            fill: $colour-rof-cigarette;\n        }\n    }\n\n    .wf1-rof-icon-draft {\n        svg {\n            color: $colour-rof-draft;\n            fill: $colour-rof-draft;\n        }\n    }\n}\n//\n//mat-list-item.list-item {\n//  .list-item-icon-section {\n//    wf1-application-icon,\n//    .wf1-application-icon,\n//    .wf1-main-icon,\n//    .list-item-icon .mat-icon {\n//      width: 3rem;\n//      height: 3rem;\n//\n//      svg {\n//        width: 3rem;\n//        height: 3rem;\n//      }\n//    }\n//  }\n//}\n\nwf1-list-container mat-list.mat-list {\n    padding-top: 0;\n    height: 100%;\n    cdk-virtual-scroll-viewport {\n        height: 100%;\n    }\n}\n\nwf1-list-container wf1-spinner {\n    height: 75vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nmat-list-item.list-item {\n    .mat-list-item-content {\n        align-items: center;\n        padding: 0 !important;\n    }\n}\n\n#map {\n    width: 100%;\n    min-height: $wf1-app-map-panel-height;\n}\n\n.wf1-layer-tree ul {\n    padding-left: 20px;\n}\n\n.wf1-layer-tree ul,\n.wf1-layer-tree li {\n    list-style-type: none;\n}\n\niframe#login-iframe {\n    z-index: 10000;\n    position: absolute;\n    width: 800px !important;\n    right: calc(50% - 350px) !important;\n    background-color: white;\n}\n\n@media screen and (max-width: 900px) {\n    mat-toolbar.wf1-application-header {\n        height: $wf1-app-header-mobile-height;\n\n        img[alt=\"BC Gov\"] {\n            width: 6rem;\n        }\n\n        img[alt=\"Wildfire ONE\"] {\n            width: 8.5rem;\n            padding-bottom: 0.2rem;\n        }\n\n        #header-title {\n            font-size: 0.9rem;\n            margin-left: 0.25rem;\n            margin-bottom: 0.25rem;\n        }\n\n        .header-caption-label,\n        .header-caption-text {\n            margin-bottom: 0.2rem;\n        }\n\n        .header-caption-label {\n            margin-right: 0.5rem;\n        }\n    }\n\n    #map {\n        min-height: $wf1-app-map-mobile-height;\n    }\n}\n\n.details {\n    transition: all .2s linear;\n    width: 600px;\n}\n\n.details.close {\n    width: 0px;\n    min-width: 0px!important;\n}\n\n.location-results{\n    position: absolute!important;\n    width: auto!important;\n    top: 15px;\n    border-radius: 5px;\n    box-shadow: 0px 0px 11px 4px #00000033!important;\n    max-height: none!important;\n}\n\n.location-mat-option  {\n    line-height: 2.5 !important;\n    height: auto!important;\n}\n\n.location-option {\n    font-size: 12px;\n    line-height: 1.3;\n    display: flex;\n    flex-direction: column;\n    padding: 3px 0 5px 0;\n}\n.location-option .mat-icon{\n    color: #9e9e9e;\n    font-size: 14px;\n    margin-right: 10px!important;\n    height: 14px;\n    width: 14px;\n}\n.location-option .address{\n    font-size: 15px;\n}\n\n.search-location {\n    border: 1px solid black;\n    border-radius: 5px;\n    padding-left: 15px;\n    padding-right: 15px;\n    min-width: 260px;\n    height: 38px;\n    transition: 0.5s;\n}\n.search-location-close-container{\n    border:1px solid black;\n    border-left: none;\n    border-radius: 5px;\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    height: calc(100% + 2px);\n    display: flex;\n    align-items: center;\n    color: black;\n}\n.search-location-close-container mat-icon{\n    padding-left: 4px;\n    padding-right: 4px;\n\n}\n.search-location-close{\n    border-left: 1px solid #dddddd;\n    cursor: pointer;\n}\n\n.smk-toolbar {\n    box-shadow: none !important;\n}\n\n.signpost {\n\tposition: relative;\n}\n\n.signpost:before {\n\tcontent: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z' fill='%234f4f52'/%3E%3C/svg%3E\");\n    position: absolute;\n\twidth: calc(100% - 10px);\n\theight:100%;\n\ttop:0;\n}\n\n.item.active .signpost:before {\n\tcontent: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3C!-- Font Awesome Free 5.15.4 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) --%3E%3Cpath d='M507.31 84.69L464 41.37c-6-6-14.14-9.37-22.63-9.37H288V16c0-8.84-7.16-16-16-16h-32c-8.84 0-16 7.16-16 16v16H56c-13.25 0-24 10.75-24 24v80c0 13.25 10.75 24 24 24h385.37c8.49 0 16.62-3.37 22.63-9.37l43.31-43.31c6.25-6.26 6.25-16.38 0-22.63zM224 496c0 8.84 7.16 16 16 16h32c8.84 0 16-7.16 16-16V384h-64v112zm232-272H288v-32h-64v32H70.63c-8.49 0-16.62 3.37-22.63 9.37L4.69 276.69c-6.25 6.25-6.25 16.38 0 22.63L48 342.63c6 6 14.14 9.37 22.63 9.37H456c13.25 0 24-10.75 24-24v-80c0-13.25-10.75-24-24-24z' fill='%231A5A96'/%3E%3C/svg%3E\");\n}\n\n.smk-highlight.material-icons.smk-command.smk-icon {\n    display: none;\n}\n",".wf1-list-container {\n    \n    &__header {\n\n        display:flex;\n        align-items: center;\n        justify-content: center;\n\n        position: relative;\n        min-height: 52px;\n\n        &__actions {\n            position: absolute;\n            right: 0;\n\n            &--left {\n                left: 0;\n            }\n        }\n        \n        &__title {\n            font-size: 1.15rem;\n        }\n    }\n\n}","@import '../variables';\n\n.error-dialog {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: center;\n\n  h1 {\n    color: $colour-red;\n    font-size: large;\n    text-align: center;\n  }\n}\n",".comment-table-row {\n  width: 100%;\n}","@import '../variables';\n\n.side-panel-container {\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  .side-panel-title-section {\n    color: $colour-sidebar-title;\n    background-color: $colour-sidebar-title-background;\n    box-sizing: border-box;\n    height: $wf1-sidebar-title-height;\n    position: relative;\n\n    .side-panel-link-button {\n      position: absolute;\n      top: .25rem;\n      padding-bottom: 0.5rem;\n\n      .mat-button {\n        min-width: 2rem;\n        padding: 0;\n      }\n    }\n\n    .side-panel-link-button-right {\n      right: .25rem;\n    }\n\n    .side-panel-link-button-left {\n      left: .25rem;\n    }\n\n    .side-panel-title {\n      width: 100%;\n      padding-top: 0.5rem;\n      padding-bottom: 0.5rem;\n      margin: 0 auto;\n      text-align: center;\n    }\n  }\n\n  .side-panel-toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: .4rem 1rem;\n    color: $colour-sidebar-toolbar;\n    background-color: $colour-sidebar-toolbar-background;\n    box-sizing: border-box;\n    height: $wf1-toolbar-height;\n  }\n\n  .side-panel-filter {\n    color: $colour-sidebar-filter;\n    background-color: $colour-sidebar-filter-background;\n    box-sizing: border-box;\n    height: $wf1-toolbar-height;\n\n    .mat-tab-group .mat-tab-header {\n      width: 100%;\n    }\n  }\n\n  .side-panel-content,\n  .side-panel-with-toolbar-content,\n  .side-panel-with-toolbar-and-filter-content,\n  .side-panel-with-toolbar-and-filter-and-filter-content {\n    box-sizing: border-box;\n    overflow-y: hidden;\n    position: relative;\n\n    .interior-panel {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      overflow-x: hidden;\n      overflow-y: auto;\n    }\n  }\n\n  .side-panel-content {\n    height: $wf1-app-side-panel-height;\n  }\n\n  .side-panel-with-toolbar-content {\n    height: $wf1-app-side-panel-with-toolbar-height;\n  }\n\n  .side-panel-with-toolbar-and-filter-content {\n    height: calc( 100vh - #{ $wf1-app-header-height } - #{ $wf1-header-plus-toolbar-and-filter-total-height } - .1rem );\n  }\n\n  .side-panel-with-toolbar-and-filter-and-filter-content {\n    height: $wf1-app-side-panel-with-toolbar-and-filter-content-height;\n  }\n\n  .location-toolbar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: .4rem 1rem;\n    background-color: $colour-toolbar-grey;\n    height: $wf1-toolbar-height;\n    box-sizing: border-box;\n\n    .selected-location {\n      div.mat-form-field-wrapper {\n        padding-bottom: 0;\n\n        div.mat-form-field-underline {\n          bottom: .25rem;\n        }\n      }\n    }\n\n    .location-section-header-button {\n      min-width: 1.5rem;\n    }\n  }\n}\n","@import '../variables';\n\n.search {\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-around;\n  align-items: center;\n  padding: 0.25rem;\n\n  & > div {\n    margin: 0 0.625rem;\n  }\n\n  &__sort {\n    height: 1.5rem;\n    width: 1.5rem;\n    cursor: pointer;\n\n    &__icon {\n      max-height: 1.5rem;\n      max-width: 1.5rem;\n    }\n  }\n\n  &__count {\n    font-size: 1rem;\n    background-color: $colour-white;\n    color: $colour-light-grey;\n    border-radius: .375rem;\n    padding: .125rem .25rem;\n    text-align: center;\n    user-select: none;\n  }\n\n  &__input {\n    flex-grow: 1;\n    div.mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      div.mat-form-field-underline {\n        bottom: .25rem;\n      }\n\n      div.mat-form-field-infix {\n        border-top-width: .5rem;\n      }\n\n      span.mat-form-field-label-wrapper {\n        font-size: small;\n        top: -.35rem;\n      }\n    }\n\n    &__control {\n      font-size: 1rem;\n      width: 100%;\n      border: none;\n      outline: none;\n    }\n  }\n  &__refresh,\n  &__cancel,\n  &__clear-filters {\n    cursor: pointer;\n  }\n\n  &__clear-filters .wf1-application-icon .wf1-main-icon .mat-icon {\n    width: 1.2rem;\n    height: 1.8rem;\n  }\n\n}\n","@import '../variables';\n\n.wf1-filters {\n  .mat-tab-label.mat-tab-label-active {\n    background-color: $opacity-grey;\n  }\n\n  mat-tab-body .mat-tab-body-content.slidedown {\n      max-height: unset!important;\n      overflow-y: auto!important;\n  }\n\n  .filter-tab {\n    &__header,\n    &__body,\n    &__body__options,\n    &__body__radiogroup {\n      display: flex;\n      flex-direction: column;\n    }\n\n    &__header {\n      padding: 0 .5rem;\n      box-sizing: border-box;\n      height: $wf1-toolbar-height;\n      width: 100%;\n      justify-content: center;\n\n      &__title,\n      &__subtitle {\n        font-size: small;\n      }\n\n      &__subtitle {\n        color: $colour-red;\n      }\n    }\n\n    &__body {\n      box-sizing: border-box;\n      padding: 1rem 2rem;\n      height: $wf1-filter-toolbar-content-height;\n\n      &__clear,\n      .wf1-application-icon.wf1-icon-size-toolbar {\n        cursor: pointer;\n        align-self: flex-end;\n        width: 1.2rem;\n        height: 1.8rem;\n      }\n    }\n\n    &__body__radiogroup__radiobutton__label {\n        line-height: 24px;\n    }\n  }\n\n  // Hide tab content\n  .mat-tab-group {\n    &--hidden .filter-tab__body {\n      display: none;\n    }\n\n    &--hidden {\n      .mat-tab-body,\n      .mat-tab-body-wrapper {\n        display: none;\n      }\n    }\n\n    .mat-tab-label {\n      box-sizing: border-box;\n      padding: 0;\n      min-width: 1rem;\n      flex: 1 1 auto;\n\n      &-content {\n        height: 100%;\n        width: 100%;\n      }\n    }\n\n    .mat-tab-label:hover {\n      background-color: $colour-toolbar-grey;\n    }\n  }\n}\n","@import '../variables';\n\n$header-color: $colour-light-grey;\n\n.sort-popup {\n  display: none;\n  flex-flow: column nowrap;\n  position: absolute;\n  color: $colour-black;\n  min-width: 15rem;\n  border: 0.0625rem solid rgba($colour-black, 0.5);\n  z-index: 15;\n  user-select: none;\n\n  &--visible {\n    display: flex;\n  }\n\n  &__header,\n  &__item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 1rem;\n\n    &__text {\n      font-weight: 500;\n      line-height: 1.5;\n    }\n  }\n\n  &__header {\n    background-color: $header-color;\n\n    &__text {\n      font-size: 1.25rem;\n    }\n\n    &__icon {\n      cursor: pointer;\n    }\n  }\n\n  &__item {\n    font-size: 0.9rem;\n    background-color: $colour-white;\n    cursor: pointer;\n    transition: all 0.2s;\n\n    &:not(#{&}--active):hover {\n      background-color: $colour-light-grey;\n    }\n\n    &--active {\n      color: $colour-white;\n      background-color: $colour-red;\n    }\n\n    &__text {\n      font-size: 1rem;\n    }\n  }\n}\n","@import \"../variables\";\n\n.unauthorized-page {\n  height: $wf1-app-main-panel-container-height;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-family: Roboto, \"Helvetica Neue\", sans-serif;\n\n  h1 {\n\n  }\n\n  p {\n\n  }\n\n  h2 {\n    font-size: large;\n    color: red;\n  }\n}",".wfim-application.orientation-portrait {\n    .smk-map-frame.smk-theme-wf.smk-device-mobile {\n        .smk-overlay {\n            .smk-toolbar {\n                right: unset;\n            }\n\n            .smk-actionbar {\n                top: calc( var( --overlay-padding ) + var( --toolbar-height ) );\n            }\n        }\n    }\n}\n\n.wfim-application.orientation-landscape {\n    .smk-map-frame.smk-theme-wf.smk-device-mobile {\n        .smk-overlay {\n            .smk-toolbar {\n                right: unset;\n            }\n        }\n\n        .smk-sidepanel {\n            position: absolute;\n            top: calc(var(--toolbar-height) + 10px);\n            left: 0;\n            right: unset;\n            bottom: var(--panel-bottom);\n            width: var(--panel-width);\n\n            border-bottom: unset;\n            margin-top: unset;\n            background-color: unset;\n\n            .smk-elastic-panel {\n                height: auto;\n            }\n        }\n    }\n}\n\n.smk-feature-list .smk-layer .smk-feature {\n  text-decoration: underline;\n  color: #1a5a96;\n  font-family: 'BCSans', 'Open Sans', Verdana, Arial, sans-serif;\n}\n","@font-face {\n    font-family: 'lg';\n    src: url('#{$lg-path-fonts}/lg.woff2?io9a6k') format('woff2'),\n        url('#{$lg-path-fonts}/lg.ttf?io9a6k') format('truetype'),\n        url('#{$lg-path-fonts}/lg.woff?io9a6k') format('woff'),\n        url('#{$lg-path-fonts}/lg.svg?io9a6k#lg') format('svg');\n    font-weight: normal;\n    font-style: normal;\n    font-display: block;\n}\n\n.lg-icon {\n    /* use !important to prevent issues with browser extensions that change fonts */\n    font-family: 'lg' !important;\n    speak: never;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    line-height: 1;\n\n    /* Better Font Rendering =========== */\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n",".lg-container {\n    font-family: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue',\n        Arial, 'Open Sans', 'Liberation Sans', sans-serif, 'Apple Color Emoji',\n        'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n}\n// default theme\n.lg-next,\n.lg-prev {\n    background-color: $lg-next-prev-bg;\n    border-radius: $lg-border-radius-base;\n    color: $lg-next-prev-color;\n    cursor: pointer;\n    display: block;\n    font-size: 22px;\n    margin-top: -10px;\n    padding: 8px 10px 9px;\n    position: absolute;\n    top: 50%;\n    z-index: $zindex-controls;\n    outline: none;\n    border: none;\n\n    &.disabled {\n        opacity: 0 !important;\n        cursor: default;\n    }\n\n    &:hover:not(.disabled) {\n        color: $lg-next-prev-hover-color;\n    }\n    .lg-single-item & {\n        display: none;\n    }\n}\n\n.lg-next {\n    right: 20px;\n\n    &:before {\n        content: '\\e095';\n    }\n}\n\n.lg-prev {\n    left: 20px;\n\n    &:after {\n        content: '\\e094';\n    }\n}\n\n@include keyframes(lg-right-end) {\n    0% {\n        left: 0;\n    }\n\n    50% {\n        left: -30px;\n    }\n\n    100% {\n        left: 0;\n    }\n}\n\n@include keyframes(lg-left-end) {\n    0% {\n        left: 0;\n    }\n\n    50% {\n        left: 30px;\n    }\n\n    100% {\n        left: 0;\n    }\n}\n\n.lg-outer {\n    &.lg-right-end {\n        .lg-object {\n            @include animation(lg-right-end 0.3s);\n            position: relative;\n        }\n    }\n\n    &.lg-left-end {\n        .lg-object {\n            @include animation(lg-left-end 0.3s);\n            position: relative;\n        }\n    }\n}\n\n// lg toolbar\n.lg-toolbar {\n    z-index: $zindex-toolbar;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    .lg-media-overlap & {\n        background-image: $lg-toolbar-bg;\n    }\n\n    .lg-icon {\n        color: $lg-toolbar-icon-color;\n        cursor: pointer;\n        float: right;\n        font-size: 24px;\n        height: 47px;\n        line-height: 27px;\n        padding: 10px 0;\n        text-align: center;\n        width: 50px;\n        text-decoration: none !important;\n        outline: medium none;\n        will-change: color;\n        @include transition(color 0.2s linear);\n        background: none;\n        border: none;\n        box-shadow: none;\n        &.lg-icon-18 {\n            font-size: 18px;\n        }\n        &:hover {\n            color: $lg-toolbar-icon-hover-color;\n        }\n    }\n\n    .lg-close {\n        &:after {\n            content: '\\e070';\n        }\n    }\n    .lg-maximize {\n        font-size: 22px;\n        &:after {\n            content: '\\e90a';\n        }\n    }\n\n    .lg-download {\n        &:after {\n            content: '\\e0f2';\n        }\n    }\n}\n\n// lightGallery title\n.lg-sub-html {\n    color: $lg-sub-html-color;\n    font-size: 16px;\n    padding: 10px 40px;\n    text-align: center;\n    z-index: $zindex-subhtml;\n    opacity: 0;\n    @include transition(opacity 0.2s ease-out 0s);\n\n    h4 {\n        margin: 0;\n        font-size: 13px;\n        font-weight: bold;\n    }\n\n    p {\n        font-size: 12px;\n        margin: 5px 0 0;\n    }\n    a {\n        color: inherit;\n        &:hover {\n            text-decoration: underline;\n        }\n    }\n    .lg-media-overlap & {\n        background-image: $lg-sub-html-bg;\n    }\n    .lg-item & {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        left: 0;\n    }\n}\n\n.lg-error-msg {\n    font-size: 14px;\n    color: #999;\n}\n\n// lg image counter\n.lg-counter {\n    color: $lg-icon-color;\n    display: inline-block;\n    font-size: $lg-counter-font-size;\n    padding-left: 20px;\n    padding-top: 12px;\n    height: 47px;\n    vertical-align: middle;\n}\n\n.lg-closing {\n    .lg-toolbar,\n    .lg-prev,\n    .lg-next,\n    .lg-sub-html {\n        opacity: 0;\n        @include transitionCustom(\n            transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s,\n            opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s,\n            color 0.08 linear\n        );\n    }\n}\n\n// Starting effect\nbody:not(.lg-from-hash) {\n    .lg-outer {\n        &.lg-start-zoom {\n            .lg-item:not(.lg-zoomable) {\n                .lg-img-wrap,\n                .lg-video-cont {\n                    opacity: 0;\n                    @include transform(scale3d(0.5, 0.5, 0.5));\n                    will-change: transform, opacity;\n                    @include transitionCustom(\n                        transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s,\n                        opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important\n                    );\n                }\n                &.lg-complete {\n                    .lg-img-wrap,\n                    .lg-video-cont {\n                        opacity: 1;\n                        @include transform(scale3d(1, 1, 1));\n                    }\n                }\n            }\n        }\n    }\n}\n\n.lg-icon {\n    &:focus-visible {\n        color: #fff;\n        border-radius: 3px;\n        outline: 1px dashed rgba(255, 255, 255, 0.6);\n    }\n}\n.lg-toolbar {\n    .lg-icon {\n        &:focus-visible {\n            border-radius: 8px;\n            outline-offset: -5px;\n        }\n    }\n}\n","$backdrop-opacity: 1 !default;\n$lg-toolbar-bg: linear-gradient(\n    0deg,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.4)\n) !default;\n$lg-border-radius-base: 2px !default;\n$lg-theme-highlight: rgb(169, 7, 7) !default;\n$lg-theme-color: #000 !default;\n\n// basic icon colours\n$lg-icon-bg: rgba(0, 0, 0, 0.45) !default;\n$lg-icon-color: #999 !default;\n$lg-icon-hover-color: #fff !default;\n\n// counter\n$lg-counter-color: #e6e6e6 !default;\n$lg-counter-font-size: 16px !default;\n\n// Next prev icons\n$lg-next-prev-bg: $lg-icon-bg !default;\n$lg-next-prev-color: $lg-icon-color !default;\n$lg-next-prev-hover-color: $lg-icon-hover-color !default;\n\n// toolbar icons\n$lg-toolbar-icon-color: $lg-icon-color !default;\n$lg-toolbar-icon-hover-color: $lg-icon-hover-color !default;\n$lg-toolbar-icon-disabled-opacity: 0.75 !default;\n\n// autoplay progress bar\n$lg-progress-bar-bg: #333 !default;\n$lg-progress-bar-active-bg: $lg-theme-highlight !default;\n$lg-progress-bar-height: 5px !default;\n\n// paths\n$lg-path-fonts: '../fonts' !default;\n$lg-path-images: '../images' !default;\n\n// Zoom plugin\n$zoom-transition-duration: 0.5s !default;\n\n// Sub html - titile\n$lg-sub-html-bg: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.6)\n) !default;\n$lg-sub-html-color: #eee !default;\n\n// thumbnail toggle button\n$lg-thumb-toggle-bg: #0d0a0a !default;\n$lg-thumb-toggle-color: $lg-icon-color !default;\n$lg-thumb-bg: #0d0a0a !default;\n$lg-thumb-container-height: 100px;\n\n// Pager\n\n// z-index\n$zindex-outer: 1050 !default;\n$zindex-progressbar: 1083 !default;\n$zindex-controls: 1084 !default;\n$zindex-toolbar: 1082 !default;\n$zindex-subhtml: 1080 !default;\n$zindex-components: 1080 !default;\n$zindex-pager: 1080 !default;\n$zindex-playbutton: 1080 !default;\n$zindex-item: 1060 !default;\n$zindex-backdrop: 1040 !default;\n","// Vendor Prefixes\n//\n// All vendor mixins are deprecated as of v3.2.0 due to the introduction of\n// Autoprefixer in our Gruntfile. They will be removed in v4.\n\n// - Animations\n// - Backface visibility\n// - Box shadow\n// - Box sizing\n// - Content columns\n// - Hyphens\n// - Placeholder text\n// - Transformations\n// - Transitions\n// - User Select\n// - cursor grab\n\n// Animations\n@mixin animation($animation) {\n    -webkit-animation: $animation;\n    -o-animation: $animation;\n    animation: $animation;\n}\n\n@mixin animation-name($name) {\n    -webkit-animation-name: $name;\n    animation-name: $name;\n}\n\n@mixin animation-duration($duration) {\n    -webkit-animation-duration: $duration;\n    animation-duration: $duration;\n}\n\n@mixin animation-timing-function($timing-function) {\n    -webkit-animation-timing-function: $timing-function;\n    animation-timing-function: $timing-function;\n}\n\n@mixin animation-delay($delay) {\n    -webkit-animation-delay: $delay;\n    animation-delay: $delay;\n}\n\n@mixin animation-iteration-count($iteration-count) {\n    -webkit-animation-iteration-count: $iteration-count;\n    animation-iteration-count: $iteration-count;\n}\n\n@mixin animation-direction($direction) {\n    -webkit-animation-direction: $direction;\n    animation-direction: $direction;\n}\n\n@mixin animation-fill-mode($fill-mode) {\n    -webkit-animation-fill-mode: $fill-mode;\n    animation-fill-mode: $fill-mode;\n}\n\n@mixin keyframes($name) {\n    @-webkit-keyframes #{$name} {\n        @content;\n    }\n\n    @-moz-keyframes #{$name} {\n        @content;\n    }\n\n    @-ms-keyframes #{$name} {\n        @content;\n    }\n\n    @keyframes #{$name} {\n        @content;\n    }\n}\n\n// Backface visibility\n// Prevent browsers from flickering when using CSS 3D transforms.\n// Default value is `visible`, but can be changed to `hidden`\n\n@mixin backface-visibility($visibility) {\n    -webkit-backface-visibility: $visibility;\n    -moz-backface-visibility: $visibility;\n    backface-visibility: $visibility;\n}\n\n// Drop shadows\n//\n// Note: Deprecated `.box-shadow()` as of v3.1.0 since all of Bootstrap's\n// supported browsers that have box shadow capabilities now support it.\n\n@mixin box-shadow($shadow...) {\n    -webkit-box-shadow: $shadow; // iOS <4.3 & Android <4.1\n    box-shadow: $shadow;\n}\n\n// Box sizing\n@mixin box-sizing($boxmodel) {\n    -webkit-box-sizing: $boxmodel;\n    -moz-box-sizing: $boxmodel;\n    box-sizing: $boxmodel;\n}\n\n// CSS3 Content Columns\n@mixin content-columns($column-count, $column-gap: $grid-gutter-width) {\n    -webkit-column-count: $column-count;\n    -moz-column-count: $column-count;\n    column-count: $column-count;\n    -webkit-column-gap: $column-gap;\n    -moz-column-gap: $column-gap;\n    column-gap: $column-gap;\n}\n\n// Optional hyphenation\n@mixin hyphens($mode: auto) {\n    word-wrap: break-word;\n    -webkit-hyphens: $mode;\n    -moz-hyphens: $mode;\n    -ms-hyphens: $mode; // IE10+\n    -o-hyphens: $mode;\n    hyphens: $mode;\n}\n\n// Transformations\n@mixin scale($ratio...) {\n    -webkit-transform: scale($ratio);\n    -ms-transform: scale($ratio); // IE9 only\n    -o-transform: scale($ratio);\n    transform: scale($ratio);\n}\n\n@mixin scaleX($ratio) {\n    -webkit-transform: scaleX($ratio);\n    -ms-transform: scaleX($ratio); // IE9 only\n    -o-transform: scaleX($ratio);\n    transform: scaleX($ratio);\n}\n\n@mixin scaleY($ratio) {\n    -webkit-transform: scaleY($ratio);\n    -ms-transform: scaleY($ratio); // IE9 only\n    -o-transform: scaleY($ratio);\n    transform: scaleY($ratio);\n}\n\n@mixin skew($x, $y) {\n    -webkit-transform: skewX($x) skewY($y);\n    -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+\n    -o-transform: skewX($x) skewY($y);\n    transform: skewX($x) skewY($y);\n}\n\n@mixin translate($x, $y) {\n    -webkit-transform: translate($x, $y);\n    -ms-transform: translate($x, $y); // IE9 only\n    -o-transform: translate($x, $y);\n    transform: translate($x, $y);\n}\n\n@mixin translate3d($x, $y, $z) {\n    -webkit-transform: translate3d($x, $y, $z);\n    transform: translate3d($x, $y, $z);\n}\n\n@mixin scale3d($x, $y, $z) {\n    -webkit-transform: scale3d($x, $y, $z);\n    transform: scale3d($x, $y, $z);\n}\n\n@mixin rotate($degrees) {\n    -webkit-transform: rotate($degrees);\n    -ms-transform: rotate($degrees); // IE9 only\n    -o-transform: rotate($degrees);\n    transform: rotate($degrees);\n}\n\n@mixin rotateX($degrees) {\n    -webkit-transform: rotateX($degrees);\n    -ms-transform: rotateX($degrees); // IE9 only\n    -o-transform: rotateX($degrees);\n    transform: rotateX($degrees);\n}\n\n@mixin rotateY($degrees) {\n    -webkit-transform: rotateY($degrees);\n    -ms-transform: rotateY($degrees); // IE9 only\n    -o-transform: rotateY($degrees);\n    transform: rotateY($degrees);\n}\n\n@mixin perspective($perspective) {\n    -webkit-perspective: $perspective;\n    -moz-perspective: $perspective;\n    perspective: $perspective;\n}\n\n@mixin perspective-origin($perspective) {\n    -webkit-perspective-origin: $perspective;\n    -moz-perspective-origin: $perspective;\n    perspective-origin: $perspective;\n}\n\n@mixin transform-origin($origin) {\n    -webkit-transform-origin: $origin;\n    -moz-transform-origin: $origin;\n    -ms-transform-origin: $origin; // IE9 only\n    transform-origin: $origin;\n}\n\n@mixin transform($transforms) {\n    -moz-transform: $transforms;\n    -o-transform: $transforms;\n    -ms-transform: $transforms;\n    -webkit-transform: $transforms;\n    transform: $transforms;\n}\n\n// Transitions\n\n@mixin transition($transition...) {\n    -webkit-transition: $transition;\n    -o-transition: $transition;\n    transition: $transition;\n}\n\n@mixin transition-property($transition-property...) {\n    -webkit-transition-property: $transition-property;\n    transition-property: $transition-property;\n}\n\n@mixin transition-delay($transition-delay) {\n    -webkit-transition-delay: $transition-delay;\n    transition-delay: $transition-delay;\n}\n\n@mixin transition-duration($transition-duration...) {\n    -webkit-transition-duration: $transition-duration;\n    transition-duration: $transition-duration;\n}\n\n@mixin transition-timing-function($timing-function) {\n    -webkit-transition-timing-function: $timing-function;\n    transition-timing-function: $timing-function;\n}\n\n@mixin transition-transform($transition...) {\n    -webkit-transition: -webkit-transform $transition;\n    -moz-transition: -moz-transform $transition;\n    -o-transition: -o-transform $transition;\n    transition: transform $transition;\n}\n\n// transition custom\n\n@function prefix($property, $prefixes: webkit moz o ms) {\n    $vendor-prefixed-properties: transform background-clip background-size;\n    $result: ();\n\n    @each $prefix in $prefixes {\n        @if index($vendor-prefixed-properties, $property) {\n            $property: -#{$prefix}-#{$property};\n        }\n        $result: append($result, $property);\n    }\n    @return $result;\n}\n\n@function trans-prefix($transition, $prefix: moz) {\n    $prefixed: ();\n\n    @each $trans in $transition {\n        $prop-name: nth($trans, 1);\n        $vendor-prop-name: prefix($prop-name, $prefix);\n        $prop-vals: nth($trans, 2);\n        $prefixed: append($prefixed, $vendor-prop-name $prop-vals, comma);\n    }\n    @return $prefixed;\n}\n\n@mixin transitionCustom($values...) {\n    $transitions: ();\n\n    @each $declaration in $values {\n        $prop: nth($declaration, 1);\n        $prop-opts: ();\n        $length: length($declaration);\n\n        @if $length >= 2 {\n            @for $i from 2 through $length {\n                $prop-opts: append($prop-opts, nth($declaration, $i));\n            }\n        }\n        $trans: $prop, $prop-opts;\n        $transitions: append($transitions, $trans, comma);\n    }\n    -webkit-transition: trans-prefix($transitions, webkit);\n    -moz-transition: trans-prefix($transitions, moz);\n    -o-transition: trans-prefix($transitions, o);\n    transition: $values;\n}\n\n// User select\n// For selecting text on the page\n\n@mixin user-select($select) {\n    -webkit-user-select: $select;\n    -moz-user-select: $select;\n    -ms-user-select: $select; // IE10+\n    user-select: $select;\n}\n\n// mouse grab\n\n@mixin grab-cursor {\n    cursor: -webkit-grab;\n    cursor: -moz-grab;\n    cursor: -o-grab;\n    cursor: -ms-grab;\n    cursor: grab;\n}\n\n@mixin grabbing-cursor {\n    cursor: move;\n    cursor: -webkit-grabbing;\n    cursor: -moz-grabbing;\n    cursor: -o-grabbing;\n    cursor: -ms-grabbing;\n    cursor: grabbing;\n}\n","@import 'lg-variables';\n@import 'lg-mixins';\n// Clearfix\n.lg-group:after {\n    content: '';\n    display: table;\n    clear: both;\n}\n\n// lightgallery core\n\n.lg-container {\n    display: none;\n    outline: none;\n    &.lg-show {\n        display: block;\n    }\n}\n.lg-on {\n    scroll-behavior: unset;\n}\n.lg-overlay-open {\n    overflow: hidden;\n}\n\n// for idle state\n.lg-toolbar,\n.lg-prev,\n.lg-next,\n.lg-pager-outer,\n.lg-hide-sub-html .lg-sub-html {\n    opacity: 0;\n    will-change: transform, opacity;\n    @include transitionCustom(\n        transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s,\n        opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s\n    );\n}\n// for idle state\n.lg-show-in {\n    .lg-toolbar,\n    .lg-prev,\n    .lg-next,\n    .lg-pager-outer {\n        opacity: 1;\n    }\n    &.lg-hide-sub-html {\n        .lg-sub-html {\n            opacity: 1;\n        }\n    }\n    .lg-hide-items {\n        .lg-prev {\n            opacity: 0;\n            @include translate3d(-10px, 0, 0);\n        }\n\n        .lg-next {\n            opacity: 0;\n            @include translate3d(10px, 0, 0);\n        }\n\n        .lg-toolbar {\n            opacity: 0;\n            @include translate3d(0, -10px, 0);\n        }\n\n        &.lg-hide-sub-html {\n            .lg-sub-html {\n                opacity: 0;\n                @include translate3d(0, 20px, 0);\n            }\n        }\n    }\n}\n\n.lg-outer {\n    width: 100%;\n    height: 100%;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: $zindex-outer;\n    text-align: left;\n    opacity: 0.001;\n    outline: none;\n    will-change: auto;\n    overflow: hidden;\n    // For start/end transition\n    @include transition(opacity 0.15s ease 0s);\n\n    * {\n        @include box-sizing(border-box);\n    }\n\n    &.lg-zoom-from-image {\n        opacity: 1;\n    }\n\n    &.lg-visible {\n        opacity: 1;\n    }\n\n    // Set transition speed and timing function\n    &.lg-css3 {\n        .lg-item:not(.lg-start-end-progress) {\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transition-duration(inherit !important);\n                @include transition-timing-function(inherit !important);\n            }\n        }\n    }\n\n    // Remove transition while dragging\n    &.lg-css3.lg-dragging {\n        .lg-item {\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transition-duration(0s !important);\n                opacity: 1;\n            }\n        }\n    }\n\n    // Set cursor grab while dragging\n    &.lg-grab {\n        img.lg-object {\n            @include grab-cursor;\n        }\n    }\n\n    &.lg-grabbing {\n        img.lg-object {\n            @include grabbing-cursor;\n        }\n    }\n\n    .lg-content {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n    }\n\n    .lg-inner {\n        width: 100%;\n        position: absolute;\n        left: 0;\n        top: 0;\n        bottom: 0;\n        @include transition(opacity 0s);\n        white-space: nowrap;\n    }\n\n    .lg-item {\n        &:not(.lg-start-end-progress) {\n            background: url('#{$lg-path-images}/loading.gif') no-repeat scroll\n                center center transparent;\n        }\n        display: none !important;\n    }\n    &.lg-css3 {\n        .lg-prev-slide,\n        .lg-current,\n        .lg-next-slide {\n            display: inline-block !important;\n        }\n    }\n    &.lg-css {\n        .lg-current {\n            display: inline-block !important;\n        }\n    }\n\n    .lg-item,\n    .lg-img-wrap {\n        display: inline-block;\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n\n        &:before {\n            content: '';\n            display: inline-block;\n            height: 100%;\n            vertical-align: middle;\n        }\n    }\n\n    .lg-img-wrap {\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n\n        white-space: nowrap;\n        font-size: 0;\n    }\n\n    .lg-item {\n        &.lg-complete {\n            background-image: none;\n        }\n\n        &.lg-current {\n            z-index: $zindex-item;\n        }\n    }\n\n    .lg-object {\n        display: inline-block;\n        vertical-align: middle;\n        max-width: 100%;\n        max-height: 100%;\n        width: auto;\n        height: auto;\n        position: relative;\n    }\n\n    // Hide title div if empty\n    .lg-empty-html {\n        &.lg-sub-html,\n        .lg-sub-html {\n            display: none;\n        }\n    }\n\n    &.lg-hide-download {\n        .lg-download {\n            opacity: $lg-toolbar-icon-disabled-opacity;\n            pointer-events: none;\n        }\n    }\n\n    .lg-first-slide {\n        .lg-dummy-img {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n        }\n    }\n\n    &.lg-components-open {\n        &:not(.lg-zoomed) {\n            .lg-components {\n                @include translate3d(0, 0%, 0);\n                opacity: 1;\n            }\n            .lg-sub-html {\n                opacity: 1;\n                transition: opacity 0.2s ease-out 0.15s;\n            }\n        }\n    }\n}\n\n.lg-backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: $zindex-backdrop;\n    background-color: $lg-theme-color;\n    opacity: 0;\n    will-change: auto;\n    @include transition(opacity 333ms ease-in 0s);\n    &.in {\n        opacity: $backdrop-opacity;\n    }\n}\n\n// Default slide animations. Should be placed at the bottom of the animation css\n.lg-css3 {\n    // Remove all transition effects\n    &.lg-no-trans {\n        .lg-prev-slide,\n        .lg-next-slide,\n        .lg-current {\n            @include transitionCustom(none 0s ease 0s !important);\n        }\n    }\n\n    &.lg-use-css3 {\n        .lg-item {\n            @include backface-visibility(hidden);\n        }\n    }\n\n    // Fade mode\n    &.lg-fade {\n        .lg-item {\n            opacity: 0;\n\n            &.lg-current {\n                opacity: 1;\n            }\n\n            // transition timing property and duration will be over written from javascript\n            &.lg-prev-slide,\n            &.lg-next-slide,\n            &.lg-current {\n                @include transitionCustom(opacity 0.1s ease 0s);\n            }\n        }\n    }\n    &.lg-use-css3 {\n        .lg-item {\n            &.lg-start-progress {\n                @include transitionCustom(\n                    transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s\n                        //transform 1s cubic-bezier(0.34, 1.56, 0.64, 1) 0s,\n                );\n            }\n            &.lg-start-end-progress {\n                @include transitionCustom(\n                    transform 1s cubic-bezier(0, 0, 0.25, 1) 0s\n                );\n            }\n        }\n    }\n\n    &.lg-slide {\n        &.lg-use-css3 {\n            .lg-item {\n                opacity: 0;\n\n                &.lg-prev-slide {\n                    @include translate3d(-100%, 0, 0);\n                }\n\n                &.lg-next-slide {\n                    @include translate3d(100%, 0, 0);\n                }\n\n                &.lg-current {\n                    @include translate3d(0, 0, 0);\n                    opacity: 1;\n                }\n\n                // transition timing property and duration will be over written from javascript\n                &.lg-prev-slide,\n                &.lg-next-slide,\n                &.lg-current {\n                    @include transitionCustom(\n                        transform 1s cubic-bezier(0, 0, 0.25, 1) 0s,\n                        opacity 0.1s ease 0s\n                    );\n                }\n            }\n        }\n    }\n}\n\n.lg-container {\n    display: none;\n    &.lg-show {\n        display: block;\n    }\n\n    // Remove transition while dragging\n    &.lg-dragging-vertical {\n        .lg-backdrop {\n            @include transition-duration(0s !important);\n        }\n        .lg-css3 {\n            .lg-item {\n                &.lg-current {\n                    @include transition-duration(0s !important);\n                    opacity: 1;\n                }\n            }\n        }\n    }\n}\n\n// Inline Gallery\n\n.lg-inline {\n    .lg-backdrop,\n    .lg-outer {\n        position: absolute;\n    }\n    .lg-backdrop {\n        z-index: 1;\n    }\n    .lg-outer {\n        z-index: 2;\n    }\n    .lg-maximize {\n        &:after {\n            content: '\\e909';\n        }\n    }\n}\n\n// Components\n.lg-components {\n    @include translate3d(0, 100%, 0);\n    will-change: transform;\n    @include transitionCustom(transform 0.35s ease-out 0s);\n    z-index: $zindex-components;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    left: 0;\n}\n","/* required styles */\r\n\r\n.leaflet-pane,\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-tile-container,\r\n.leaflet-pane > svg,\r\n.leaflet-pane > canvas,\r\n.leaflet-zoom-box,\r\n.leaflet-image-layer,\r\n.leaflet-layer {\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\t}\r\n.leaflet-container {\r\n\toverflow: hidden;\r\n\t}\r\n.leaflet-tile,\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\t-webkit-user-select: none;\r\n\t   -moz-user-select: none;\r\n\t        user-select: none;\r\n\t  -webkit-user-drag: none;\r\n\t}\r\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\r\n.leaflet-safari .leaflet-tile {\r\n\timage-rendering: -webkit-optimize-contrast;\r\n\t}\r\n/* hack that prevents hw layers \"stretching\" when loading new tiles */\r\n.leaflet-safari .leaflet-tile-container {\r\n\twidth: 1600px;\r\n\theight: 1600px;\r\n\t-webkit-transform-origin: 0 0;\r\n\t}\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow {\r\n\tdisplay: block;\r\n\t}\r\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\r\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\r\n.leaflet-container .leaflet-overlay-pane svg,\r\n.leaflet-container .leaflet-marker-pane img,\r\n.leaflet-container .leaflet-shadow-pane img,\r\n.leaflet-container .leaflet-tile-pane img,\r\n.leaflet-container img.leaflet-image-layer {\r\n\tmax-width: none !important;\r\n\tmax-height: none !important;\r\n\t}\r\n\r\n.leaflet-container.leaflet-touch-zoom {\r\n\t-ms-touch-action: pan-x pan-y;\r\n\ttouch-action: pan-x pan-y;\r\n\t}\r\n.leaflet-container.leaflet-touch-drag {\r\n\t-ms-touch-action: pinch-zoom;\r\n\t/* Fallback for FF which doesn't support pinch-zoom */\r\n\ttouch-action: none;\r\n\ttouch-action: pinch-zoom;\r\n}\r\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\r\n\t-ms-touch-action: none;\r\n\ttouch-action: none;\r\n}\r\n.leaflet-container {\r\n\t-webkit-tap-highlight-color: transparent;\r\n}\r\n.leaflet-container a {\r\n\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\r\n}\r\n.leaflet-tile {\r\n\tfilter: inherit;\r\n\tvisibility: hidden;\r\n\t}\r\n.leaflet-tile-loaded {\r\n\tvisibility: inherit;\r\n\t}\r\n.leaflet-zoom-box {\r\n\twidth: 0;\r\n\theight: 0;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\tz-index: 800;\r\n\t}\r\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\r\n.leaflet-overlay-pane svg {\r\n\t-moz-user-select: none;\r\n\t}\r\n\r\n.leaflet-pane         { z-index: 400; }\r\n\r\n.leaflet-tile-pane    { z-index: 200; }\r\n.leaflet-overlay-pane { z-index: 400; }\r\n.leaflet-shadow-pane  { z-index: 500; }\r\n.leaflet-marker-pane  { z-index: 600; }\r\n.leaflet-tooltip-pane   { z-index: 650; }\r\n.leaflet-popup-pane   { z-index: 700; }\r\n\r\n.leaflet-map-pane canvas { z-index: 100; }\r\n.leaflet-map-pane svg    { z-index: 200; }\r\n\r\n.leaflet-vml-shape {\r\n\twidth: 1px;\r\n\theight: 1px;\r\n\t}\r\n.lvml {\r\n\tbehavior: url(#default#VML);\r\n\tdisplay: inline-block;\r\n\tposition: absolute;\r\n\t}\r\n\r\n\r\n/* control positioning */\r\n\r\n.leaflet-control {\r\n\tposition: relative;\r\n\tz-index: 800;\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-top,\r\n.leaflet-bottom {\r\n\tposition: absolute;\r\n\tz-index: 1000;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-top {\r\n\ttop: 0;\r\n\t}\r\n.leaflet-right {\r\n\tright: 0;\r\n\t}\r\n.leaflet-bottom {\r\n\tbottom: 0;\r\n\t}\r\n.leaflet-left {\r\n\tleft: 0;\r\n\t}\r\n.leaflet-control {\r\n\tfloat: left;\r\n\tclear: both;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tfloat: right;\r\n\t}\r\n.leaflet-top .leaflet-control {\r\n\tmargin-top: 10px;\r\n\t}\r\n.leaflet-bottom .leaflet-control {\r\n\tmargin-bottom: 10px;\r\n\t}\r\n.leaflet-left .leaflet-control {\r\n\tmargin-left: 10px;\r\n\t}\r\n.leaflet-right .leaflet-control {\r\n\tmargin-right: 10px;\r\n\t}\r\n\r\n\r\n/* zoom and fade animations */\r\n\r\n.leaflet-fade-anim .leaflet-tile {\r\n\twill-change: opacity;\r\n\t}\r\n.leaflet-fade-anim .leaflet-popup {\r\n\topacity: 0;\r\n\t-webkit-transition: opacity 0.2s linear;\r\n\t   -moz-transition: opacity 0.2s linear;\r\n\t     -o-transition: opacity 0.2s linear;\r\n\t        transition: opacity 0.2s linear;\r\n\t}\r\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\r\n\topacity: 1;\r\n\t}\r\n.leaflet-zoom-animated {\r\n\t-webkit-transform-origin: 0 0;\r\n\t    -ms-transform-origin: 0 0;\r\n\t        transform-origin: 0 0;\r\n\t}\r\n.leaflet-zoom-anim .leaflet-zoom-animated {\r\n\twill-change: transform;\r\n\t}\r\n.leaflet-zoom-anim .leaflet-zoom-animated {\r\n\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t     -o-transition:      -o-transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\r\n\t}\r\n.leaflet-zoom-anim .leaflet-tile,\r\n.leaflet-pan-anim .leaflet-tile {\r\n\t-webkit-transition: none;\r\n\t   -moz-transition: none;\r\n\t     -o-transition: none;\r\n\t        transition: none;\r\n\t}\r\n\r\n.leaflet-zoom-anim .leaflet-zoom-hide {\r\n\tvisibility: hidden;\r\n\t}\r\n\r\n\r\n/* cursors */\r\n\r\n.leaflet-interactive {\r\n\tcursor: pointer;\r\n\t}\r\n.leaflet-grab {\r\n\tcursor: -webkit-grab;\r\n\tcursor:    -moz-grab;\r\n\t}\r\n.leaflet-crosshair,\r\n.leaflet-crosshair .leaflet-interactive {\r\n\tcursor: crosshair;\r\n\t}\r\n.leaflet-popup-pane,\r\n.leaflet-control {\r\n\tcursor: auto;\r\n\t}\r\n.leaflet-dragging .leaflet-grab,\r\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\r\n.leaflet-dragging .leaflet-marker-draggable {\r\n\tcursor: move;\r\n\tcursor: -webkit-grabbing;\r\n\tcursor:    -moz-grabbing;\r\n\t}\r\n\r\n/* marker & overlays interactivity */\r\n.leaflet-marker-icon,\r\n.leaflet-marker-shadow,\r\n.leaflet-image-layer,\r\n.leaflet-pane > svg path,\r\n.leaflet-tile-container {\r\n\tpointer-events: none;\r\n\t}\r\n\r\n.leaflet-marker-icon.leaflet-interactive,\r\n.leaflet-image-layer.leaflet-interactive,\r\n.leaflet-pane > svg path.leaflet-interactive {\r\n\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\r\n\tpointer-events: auto;\r\n\t}\r\n\r\n/* visual tweaks */\r\n\r\n.leaflet-container {\r\n\tbackground: #ddd;\r\n\toutline: 0;\r\n\t}\r\n.leaflet-container a {\r\n\tcolor: #0078A8;\r\n\t}\r\n.leaflet-container a.leaflet-active {\r\n\toutline: 2px solid orange;\r\n\t}\r\n.leaflet-zoom-box {\r\n\tborder: 2px dotted #38f;\r\n\tbackground: rgba(255,255,255,0.5);\r\n\t}\r\n\r\n\r\n/* general typography */\r\n.leaflet-container {\r\n\tfont: 12px/1.5 \"Helvetica Neue\", Arial, Helvetica, sans-serif;\r\n\t}\r\n\r\n\r\n/* general toolbar styles */\r\n\r\n.leaflet-bar {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\r\n\tborder-radius: 4px;\r\n\t}\r\n.leaflet-bar a,\r\n.leaflet-bar a:hover {\r\n\tbackground-color: #fff;\r\n\tborder-bottom: 1px solid #ccc;\r\n\twidth: 26px;\r\n\theight: 26px;\r\n\tline-height: 26px;\r\n\tdisplay: block;\r\n\ttext-align: center;\r\n\ttext-decoration: none;\r\n\tcolor: black;\r\n\t}\r\n.leaflet-bar a,\r\n.leaflet-control-layers-toggle {\r\n\tbackground-position: 50% 50%;\r\n\tbackground-repeat: no-repeat;\r\n\tdisplay: block;\r\n\t}\r\n.leaflet-bar a:hover {\r\n\tbackground-color: #f4f4f4;\r\n\t}\r\n.leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 4px;\r\n\tborder-top-right-radius: 4px;\r\n\t}\r\n.leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 4px;\r\n\tborder-bottom-right-radius: 4px;\r\n\tborder-bottom: none;\r\n\t}\r\n.leaflet-bar a.leaflet-disabled {\r\n\tcursor: default;\r\n\tbackground-color: #f4f4f4;\r\n\tcolor: #bbb;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-bar a {\r\n\twidth: 30px;\r\n\theight: 30px;\r\n\tline-height: 30px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:first-child {\r\n\tborder-top-left-radius: 2px;\r\n\tborder-top-right-radius: 2px;\r\n\t}\r\n.leaflet-touch .leaflet-bar a:last-child {\r\n\tborder-bottom-left-radius: 2px;\r\n\tborder-bottom-right-radius: 2px;\r\n\t}\r\n\r\n/* zoom control */\r\n\r\n.leaflet-control-zoom-in,\r\n.leaflet-control-zoom-out {\r\n\tfont: bold 18px 'Lucida Console', Monaco, monospace;\r\n\ttext-indent: 1px;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\r\n\tfont-size: 22px;\r\n\t}\r\n\r\n\r\n/* layers control */\r\n\r\n.leaflet-control-layers {\r\n\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\r\n\tbackground: #fff;\r\n\tborder-radius: 5px;\r\n\t}\r\n.leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers.png);\r\n\twidth: 36px;\r\n\theight: 36px;\r\n\t}\r\n.leaflet-retina .leaflet-control-layers-toggle {\r\n\tbackground-image: url(images/layers-2x.png);\r\n\tbackground-size: 26px 26px;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers-toggle {\r\n\twidth: 44px;\r\n\theight: 44px;\r\n\t}\r\n.leaflet-control-layers .leaflet-control-layers-list,\r\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\r\n\tdisplay: none;\r\n\t}\r\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\r\n\tdisplay: block;\r\n\tposition: relative;\r\n\t}\r\n.leaflet-control-layers-expanded {\r\n\tpadding: 6px 10px 6px 6px;\r\n\tcolor: #333;\r\n\tbackground: #fff;\r\n\t}\r\n.leaflet-control-layers-scrollbar {\r\n\toverflow-y: scroll;\r\n\toverflow-x: hidden;\r\n\tpadding-right: 5px;\r\n\t}\r\n.leaflet-control-layers-selector {\r\n\tmargin-top: 2px;\r\n\tposition: relative;\r\n\ttop: 1px;\r\n\t}\r\n.leaflet-control-layers label {\r\n\tdisplay: block;\r\n\t}\r\n.leaflet-control-layers-separator {\r\n\theight: 0;\r\n\tborder-top: 1px solid #ddd;\r\n\tmargin: 5px -10px 5px -6px;\r\n\t}\r\n\r\n/* Default icon URLs */\r\n.leaflet-default-icon-path {\r\n\tbackground-image: url(images/marker-icon.png);\r\n\t}\r\n\r\n\r\n/* attribution and scale controls */\r\n\r\n.leaflet-container .leaflet-control-attribution {\r\n\tbackground: #fff;\r\n\tbackground: rgba(255, 255, 255, 0.7);\r\n\tmargin: 0;\r\n\t}\r\n.leaflet-control-attribution,\r\n.leaflet-control-scale-line {\r\n\tpadding: 0 5px;\r\n\tcolor: #333;\r\n\t}\r\n.leaflet-control-attribution a {\r\n\ttext-decoration: none;\r\n\t}\r\n.leaflet-control-attribution a:hover {\r\n\ttext-decoration: underline;\r\n\t}\r\n.leaflet-container .leaflet-control-attribution,\r\n.leaflet-container .leaflet-control-scale {\r\n\tfont-size: 11px;\r\n\t}\r\n.leaflet-left .leaflet-control-scale {\r\n\tmargin-left: 5px;\r\n\t}\r\n.leaflet-bottom .leaflet-control-scale {\r\n\tmargin-bottom: 5px;\r\n\t}\r\n.leaflet-control-scale-line {\r\n\tborder: 2px solid #777;\r\n\tborder-top: none;\r\n\tline-height: 1.1;\r\n\tpadding: 2px 5px 1px;\r\n\tfont-size: 11px;\r\n\twhite-space: nowrap;\r\n\toverflow: hidden;\r\n\t-moz-box-sizing: border-box;\r\n\t     box-sizing: border-box;\r\n\r\n\tbackground: #fff;\r\n\tbackground: rgba(255, 255, 255, 0.5);\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child) {\r\n\tborder-top: 2px solid #777;\r\n\tborder-bottom: none;\r\n\tmargin-top: -2px;\r\n\t}\r\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\r\n\tborder-bottom: 2px solid #777;\r\n\t}\r\n\r\n.leaflet-touch .leaflet-control-attribution,\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tbox-shadow: none;\r\n\t}\r\n.leaflet-touch .leaflet-control-layers,\r\n.leaflet-touch .leaflet-bar {\r\n\tborder: 2px solid rgba(0,0,0,0.2);\r\n\tbackground-clip: padding-box;\r\n\t}\r\n\r\n\r\n/* popup */\r\n\r\n.leaflet-popup {\r\n\tposition: absolute;\r\n\ttext-align: center;\r\n\tmargin-bottom: 20px;\r\n\t}\r\n.leaflet-popup-content-wrapper {\r\n\tpadding: 1px;\r\n\ttext-align: left;\r\n\tborder-radius: 12px;\r\n\t}\r\n.leaflet-popup-content {\r\n\tmargin: 13px 19px;\r\n\tline-height: 1.4;\r\n\t}\r\n.leaflet-popup-content p {\r\n\tmargin: 18px 0;\r\n\t}\r\n.leaflet-popup-tip-container {\r\n\twidth: 40px;\r\n\theight: 20px;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\tmargin-left: -20px;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\t}\r\n.leaflet-popup-tip {\r\n\twidth: 17px;\r\n\theight: 17px;\r\n\tpadding: 1px;\r\n\r\n\tmargin: -10px auto 0;\r\n\r\n\t-webkit-transform: rotate(45deg);\r\n\t   -moz-transform: rotate(45deg);\r\n\t    -ms-transform: rotate(45deg);\r\n\t     -o-transform: rotate(45deg);\r\n\t        transform: rotate(45deg);\r\n\t}\r\n.leaflet-popup-content-wrapper,\r\n.leaflet-popup-tip {\r\n\tbackground: white;\r\n\tcolor: #333;\r\n\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tpadding: 4px 4px 0 0;\r\n\tborder: none;\r\n\ttext-align: center;\r\n\twidth: 18px;\r\n\theight: 14px;\r\n\tfont: 16px/14px Tahoma, Verdana, sans-serif;\r\n\tcolor: #c3c3c3;\r\n\ttext-decoration: none;\r\n\tfont-weight: bold;\r\n\tbackground: transparent;\r\n\t}\r\n.leaflet-container a.leaflet-popup-close-button:hover {\r\n\tcolor: #999;\r\n\t}\r\n.leaflet-popup-scrolled {\r\n\toverflow: auto;\r\n\tborder-bottom: 1px solid #ddd;\r\n\tborder-top: 1px solid #ddd;\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-popup-content-wrapper {\r\n\tzoom: 1;\r\n\t}\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\twidth: 24px;\r\n\tmargin: 0 auto;\r\n\r\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\";\r\n\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\r\n\t}\r\n.leaflet-oldie .leaflet-popup-tip-container {\r\n\tmargin-top: -1px;\r\n\t}\r\n\r\n.leaflet-oldie .leaflet-control-zoom,\r\n.leaflet-oldie .leaflet-control-layers,\r\n.leaflet-oldie .leaflet-popup-content-wrapper,\r\n.leaflet-oldie .leaflet-popup-tip {\r\n\tborder: 1px solid #999;\r\n\t}\r\n\r\n\r\n/* div icon */\r\n\r\n.leaflet-div-icon {\r\n\tbackground: #fff;\r\n\tborder: 1px solid #666;\r\n\t}\r\n\r\n\r\n/* Tooltip */\r\n/* Base styles for the element that has a tooltip */\r\n.leaflet-tooltip {\r\n\tposition: absolute;\r\n\tpadding: 6px;\r\n\tbackground-color: #fff;\r\n\tborder: 1px solid #fff;\r\n\tborder-radius: 3px;\r\n\tcolor: #222;\r\n\twhite-space: nowrap;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n\tpointer-events: none;\r\n\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\r\n\t}\r\n.leaflet-tooltip.leaflet-clickable {\r\n\tcursor: pointer;\r\n\tpointer-events: auto;\r\n\t}\r\n.leaflet-tooltip-top:before,\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\tposition: absolute;\r\n\tpointer-events: none;\r\n\tborder: 6px solid transparent;\r\n\tbackground: transparent;\r\n\tcontent: \"\";\r\n\t}\r\n\r\n/* Directions */\r\n\r\n.leaflet-tooltip-bottom {\r\n\tmargin-top: 6px;\r\n}\r\n.leaflet-tooltip-top {\r\n\tmargin-top: -6px;\r\n}\r\n.leaflet-tooltip-bottom:before,\r\n.leaflet-tooltip-top:before {\r\n\tleft: 50%;\r\n\tmargin-left: -6px;\r\n\t}\r\n.leaflet-tooltip-top:before {\r\n\tbottom: 0;\r\n\tmargin-bottom: -12px;\r\n\tborder-top-color: #fff;\r\n\t}\r\n.leaflet-tooltip-bottom:before {\r\n\ttop: 0;\r\n\tmargin-top: -12px;\r\n\tmargin-left: -6px;\r\n\tborder-bottom-color: #fff;\r\n\t}\r\n.leaflet-tooltip-left {\r\n\tmargin-left: -6px;\r\n}\r\n.leaflet-tooltip-right {\r\n\tmargin-left: 6px;\r\n}\r\n.leaflet-tooltip-left:before,\r\n.leaflet-tooltip-right:before {\r\n\ttop: 50%;\r\n\tmargin-top: -6px;\r\n\t}\r\n.leaflet-tooltip-left:before {\r\n\tright: 0;\r\n\tmargin-right: -12px;\r\n\tborder-left-color: #fff;\r\n\t}\r\n.leaflet-tooltip-right:before {\r\n\tleft: 0;\r\n\tmargin-left: -12px;\r\n\tborder-right-color: #fff;\r\n\t}\r\n","@font-face {\n  font-family: \"lg\";\n  src: url(\"../fonts/lg.woff2?io9a6k\") format(\"woff2\"), url(\"../fonts/lg.ttf?io9a6k\") format(\"truetype\"), url(\"../fonts/lg.woff?io9a6k\") format(\"woff\"), url(\"../fonts/lg.svg?io9a6k#lg\") format(\"svg\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n.lg-icon {\n  /* use !important to prevent issues with browser extensions that change fonts */\n  font-family: \"lg\" !important;\n  speak: never;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  /* Better Font Rendering =========== */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.lg-container {\n  font-family: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Open Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n}\n\n.lg-next,\n.lg-prev {\n  background-color: rgba(0, 0, 0, 0.45);\n  border-radius: 2px;\n  color: #999;\n  cursor: pointer;\n  display: block;\n  font-size: 22px;\n  margin-top: -10px;\n  padding: 8px 10px 9px;\n  position: absolute;\n  top: 50%;\n  z-index: 1084;\n  outline: none;\n  border: none;\n}\n.lg-next.disabled,\n.lg-prev.disabled {\n  opacity: 0 !important;\n  cursor: default;\n}\n.lg-next:hover:not(.disabled),\n.lg-prev:hover:not(.disabled) {\n  color: #fff;\n}\n.lg-single-item .lg-next,\n.lg-single-item .lg-prev {\n  display: none;\n}\n\n.lg-next {\n  right: 20px;\n}\n.lg-next:before {\n  content: \"\\e095\";\n}\n\n.lg-prev {\n  left: 20px;\n}\n.lg-prev:after {\n  content: \"\\e094\";\n}\n\n@-webkit-keyframes lg-right-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: -30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-moz-keyframes lg-right-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: -30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-ms-keyframes lg-right-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: -30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@keyframes lg-right-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: -30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-webkit-keyframes lg-left-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: 30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-moz-keyframes lg-left-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: 30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@-ms-keyframes lg-left-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: 30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n@keyframes lg-left-end {\n  0% {\n    left: 0;\n  }\n  50% {\n    left: 30px;\n  }\n  100% {\n    left: 0;\n  }\n}\n.lg-outer.lg-right-end .lg-object {\n  -webkit-animation: lg-right-end 0.3s;\n  -o-animation: lg-right-end 0.3s;\n  animation: lg-right-end 0.3s;\n  position: relative;\n}\n.lg-outer.lg-left-end .lg-object {\n  -webkit-animation: lg-left-end 0.3s;\n  -o-animation: lg-left-end 0.3s;\n  animation: lg-left-end 0.3s;\n  position: relative;\n}\n\n.lg-toolbar {\n  z-index: 1082;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n.lg-media-overlap .lg-toolbar {\n  background-image: linear-gradient(0deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4));\n}\n.lg-toolbar .lg-icon {\n  color: #999;\n  cursor: pointer;\n  float: right;\n  font-size: 24px;\n  height: 47px;\n  line-height: 27px;\n  padding: 10px 0;\n  text-align: center;\n  width: 50px;\n  text-decoration: none !important;\n  outline: medium none;\n  will-change: color;\n  -webkit-transition: color 0.2s linear;\n  -o-transition: color 0.2s linear;\n  transition: color 0.2s linear;\n  background: none;\n  border: none;\n  box-shadow: none;\n}\n.lg-toolbar .lg-icon.lg-icon-18 {\n  font-size: 18px;\n}\n.lg-toolbar .lg-icon:hover {\n  color: #fff;\n}\n.lg-toolbar .lg-close:after {\n  content: \"\\e070\";\n}\n.lg-toolbar .lg-maximize {\n  font-size: 22px;\n}\n.lg-toolbar .lg-maximize:after {\n  content: \"\\e90a\";\n}\n.lg-toolbar .lg-download:after {\n  content: \"\\e0f2\";\n}\n\n.lg-sub-html {\n  color: #eee;\n  font-size: 16px;\n  padding: 10px 40px;\n  text-align: center;\n  z-index: 1080;\n  opacity: 0;\n  -webkit-transition: opacity 0.2s ease-out 0s;\n  -o-transition: opacity 0.2s ease-out 0s;\n  transition: opacity 0.2s ease-out 0s;\n}\n.lg-sub-html h4 {\n  margin: 0;\n  font-size: 13px;\n  font-weight: bold;\n}\n.lg-sub-html p {\n  font-size: 12px;\n  margin: 5px 0 0;\n}\n.lg-sub-html a {\n  color: inherit;\n}\n.lg-sub-html a:hover {\n  text-decoration: underline;\n}\n.lg-media-overlap .lg-sub-html {\n  background-image: linear-gradient(180deg, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));\n}\n.lg-item .lg-sub-html {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  left: 0;\n}\n\n.lg-error-msg {\n  font-size: 14px;\n  color: #999;\n}\n\n.lg-counter {\n  color: #999;\n  display: inline-block;\n  font-size: 16px;\n  padding-left: 20px;\n  padding-top: 12px;\n  height: 47px;\n  vertical-align: middle;\n}\n\n.lg-closing .lg-toolbar,\n.lg-closing .lg-prev,\n.lg-closing .lg-next,\n.lg-closing .lg-sub-html {\n  opacity: 0;\n  -webkit-transition: -webkit-transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, color 0.08 linear;\n  -moz-transition: -moz-transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, color 0.08 linear;\n  -o-transition: -o-transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, color 0.08 linear;\n  transition: transform 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.08 cubic-bezier(0, 0, 0.25, 1) 0s, color 0.08 linear;\n}\n\nbody:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable) .lg-img-wrap,\nbody:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable) .lg-video-cont {\n  opacity: 0;\n  -moz-transform: scale3d(0.5, 0.5, 0.5);\n  -o-transform: scale3d(0.5, 0.5, 0.5);\n  -ms-transform: scale3d(0.5, 0.5, 0.5);\n  -webkit-transform: scale3d(0.5, 0.5, 0.5);\n  transform: scale3d(0.5, 0.5, 0.5);\n  will-change: transform, opacity;\n  -webkit-transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;\n  -moz-transition: -moz-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;\n  -o-transition: -o-transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;\n  transition: transform 250ms cubic-bezier(0, 0, 0.25, 1) 0s, opacity 250ms cubic-bezier(0, 0, 0.25, 1) !important;\n}\nbody:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable).lg-complete .lg-img-wrap,\nbody:not(.lg-from-hash) .lg-outer.lg-start-zoom .lg-item:not(.lg-zoomable).lg-complete .lg-video-cont {\n  opacity: 1;\n  -moz-transform: scale3d(1, 1, 1);\n  -o-transform: scale3d(1, 1, 1);\n  -ms-transform: scale3d(1, 1, 1);\n  -webkit-transform: scale3d(1, 1, 1);\n  transform: scale3d(1, 1, 1);\n}\n\n.lg-icon:focus-visible {\n  color: #fff;\n  border-radius: 3px;\n  outline: 1px dashed rgba(255, 255, 255, 0.6);\n}\n\n.lg-toolbar .lg-icon:focus-visible {\n  border-radius: 8px;\n  outline-offset: -5px;\n}\n\n.lg-group:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n.lg-container {\n  display: none;\n  outline: none;\n}\n.lg-container.lg-show {\n  display: block;\n}\n\n.lg-on {\n  scroll-behavior: unset;\n}\n\n.lg-overlay-open {\n  overflow: hidden;\n}\n\n.lg-toolbar,\n.lg-prev,\n.lg-next,\n.lg-pager-outer,\n.lg-hide-sub-html .lg-sub-html {\n  opacity: 0;\n  will-change: transform, opacity;\n  -webkit-transition: -webkit-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;\n  -moz-transition: -moz-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;\n  -o-transition: -o-transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;\n  transition: transform 0.25s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.25s cubic-bezier(0, 0, 0.25, 1) 0s;\n}\n\n.lg-show-in .lg-toolbar,\n.lg-show-in .lg-prev,\n.lg-show-in .lg-next,\n.lg-show-in .lg-pager-outer {\n  opacity: 1;\n}\n.lg-show-in.lg-hide-sub-html .lg-sub-html {\n  opacity: 1;\n}\n.lg-show-in .lg-hide-items .lg-prev {\n  opacity: 0;\n  -webkit-transform: translate3d(-10px, 0, 0);\n  transform: translate3d(-10px, 0, 0);\n}\n.lg-show-in .lg-hide-items .lg-next {\n  opacity: 0;\n  -webkit-transform: translate3d(10px, 0, 0);\n  transform: translate3d(10px, 0, 0);\n}\n.lg-show-in .lg-hide-items .lg-toolbar {\n  opacity: 0;\n  -webkit-transform: translate3d(0, -10px, 0);\n  transform: translate3d(0, -10px, 0);\n}\n.lg-show-in .lg-hide-items.lg-hide-sub-html .lg-sub-html {\n  opacity: 0;\n  -webkit-transform: translate3d(0, 20px, 0);\n  transform: translate3d(0, 20px, 0);\n}\n\n.lg-outer {\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1050;\n  text-align: left;\n  opacity: 0.001;\n  outline: none;\n  will-change: auto;\n  overflow: hidden;\n  -webkit-transition: opacity 0.15s ease 0s;\n  -o-transition: opacity 0.15s ease 0s;\n  transition: opacity 0.15s ease 0s;\n}\n.lg-outer * {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n.lg-outer.lg-zoom-from-image {\n  opacity: 1;\n}\n.lg-outer.lg-visible {\n  opacity: 1;\n}\n.lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-prev-slide, .lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-next-slide, .lg-outer.lg-css3 .lg-item:not(.lg-start-end-progress).lg-current {\n  -webkit-transition-duration: inherit !important;\n  transition-duration: inherit !important;\n  -webkit-transition-timing-function: inherit !important;\n  transition-timing-function: inherit !important;\n}\n.lg-outer.lg-css3.lg-dragging .lg-item.lg-prev-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-next-slide, .lg-outer.lg-css3.lg-dragging .lg-item.lg-current {\n  -webkit-transition-duration: 0s !important;\n  transition-duration: 0s !important;\n  opacity: 1;\n}\n.lg-outer.lg-grab img.lg-object {\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: -o-grab;\n  cursor: -ms-grab;\n  cursor: grab;\n}\n.lg-outer.lg-grabbing img.lg-object {\n  cursor: move;\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: -o-grabbing;\n  cursor: -ms-grabbing;\n  cursor: grabbing;\n}\n.lg-outer .lg-content {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}\n.lg-outer .lg-inner {\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  -webkit-transition: opacity 0s;\n  -o-transition: opacity 0s;\n  transition: opacity 0s;\n  white-space: nowrap;\n}\n.lg-outer .lg-item {\n  display: none !important;\n}\n.lg-outer .lg-item:not(.lg-start-end-progress) {\n  background: url(\"../images/loading.gif\") no-repeat scroll center center transparent;\n}\n.lg-outer.lg-css3 .lg-prev-slide,\n.lg-outer.lg-css3 .lg-current,\n.lg-outer.lg-css3 .lg-next-slide {\n  display: inline-block !important;\n}\n.lg-outer.lg-css .lg-current {\n  display: inline-block !important;\n}\n.lg-outer .lg-item,\n.lg-outer .lg-img-wrap {\n  display: inline-block;\n  text-align: center;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.lg-outer .lg-item:before,\n.lg-outer .lg-img-wrap:before {\n  content: \"\";\n  display: inline-block;\n  height: 100%;\n  vertical-align: middle;\n}\n.lg-outer .lg-img-wrap {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  white-space: nowrap;\n  font-size: 0;\n}\n.lg-outer .lg-item.lg-complete {\n  background-image: none;\n}\n.lg-outer .lg-item.lg-current {\n  z-index: 1060;\n}\n.lg-outer .lg-object {\n  display: inline-block;\n  vertical-align: middle;\n  max-width: 100%;\n  max-height: 100%;\n  width: auto;\n  height: auto;\n  position: relative;\n}\n.lg-outer .lg-empty-html.lg-sub-html,\n.lg-outer .lg-empty-html .lg-sub-html {\n  display: none;\n}\n.lg-outer.lg-hide-download .lg-download {\n  opacity: 0.75;\n  pointer-events: none;\n}\n.lg-outer .lg-first-slide .lg-dummy-img {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n}\n.lg-outer.lg-components-open:not(.lg-zoomed) .lg-components {\n  -webkit-transform: translate3d(0, 0%, 0);\n  transform: translate3d(0, 0%, 0);\n  opacity: 1;\n}\n.lg-outer.lg-components-open:not(.lg-zoomed) .lg-sub-html {\n  opacity: 1;\n  transition: opacity 0.2s ease-out 0.15s;\n}\n\n.lg-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 1040;\n  background-color: #000;\n  opacity: 0;\n  will-change: auto;\n  -webkit-transition: opacity 333ms ease-in 0s;\n  -o-transition: opacity 333ms ease-in 0s;\n  transition: opacity 333ms ease-in 0s;\n}\n.lg-backdrop.in {\n  opacity: 1;\n}\n\n.lg-css3.lg-no-trans .lg-prev-slide,\n.lg-css3.lg-no-trans .lg-next-slide,\n.lg-css3.lg-no-trans .lg-current {\n  -webkit-transition: none 0s ease 0s !important;\n  -moz-transition: none 0s ease 0s !important;\n  -o-transition: none 0s ease 0s !important;\n  transition: none 0s ease 0s !important;\n}\n.lg-css3.lg-use-css3 .lg-item {\n  -webkit-backface-visibility: hidden;\n  -moz-backface-visibility: hidden;\n  backface-visibility: hidden;\n}\n.lg-css3.lg-fade .lg-item {\n  opacity: 0;\n}\n.lg-css3.lg-fade .lg-item.lg-current {\n  opacity: 1;\n}\n.lg-css3.lg-fade .lg-item.lg-prev-slide, .lg-css3.lg-fade .lg-item.lg-next-slide, .lg-css3.lg-fade .lg-item.lg-current {\n  -webkit-transition: opacity 0.1s ease 0s;\n  -moz-transition: opacity 0.1s ease 0s;\n  -o-transition: opacity 0.1s ease 0s;\n  transition: opacity 0.1s ease 0s;\n}\n.lg-css3.lg-use-css3 .lg-item.lg-start-progress {\n  -webkit-transition: -webkit-transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n  -moz-transition: -moz-transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n  -o-transition: -o-transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n}\n.lg-css3.lg-use-css3 .lg-item.lg-start-end-progress {\n  -webkit-transition: -webkit-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;\n  -moz-transition: -moz-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;\n  -o-transition: -o-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;\n  transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;\n}\n.lg-css3.lg-slide.lg-use-css3 .lg-item {\n  opacity: 0;\n}\n.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide {\n  -webkit-transform: translate3d(-100%, 0, 0);\n  transform: translate3d(-100%, 0, 0);\n}\n.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide {\n  -webkit-transform: translate3d(100%, 0, 0);\n  transform: translate3d(100%, 0, 0);\n}\n.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {\n  -webkit-transform: translate3d(0, 0, 0);\n  transform: translate3d(0, 0, 0);\n  opacity: 1;\n}\n.lg-css3.lg-slide.lg-use-css3 .lg-item.lg-prev-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-next-slide, .lg-css3.lg-slide.lg-use-css3 .lg-item.lg-current {\n  -webkit-transition: -webkit-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;\n  -moz-transition: -moz-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;\n  -o-transition: -o-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;\n  transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s, opacity 0.1s ease 0s;\n}\n\n.lg-container {\n  display: none;\n}\n.lg-container.lg-show {\n  display: block;\n}\n.lg-container.lg-dragging-vertical .lg-backdrop {\n  -webkit-transition-duration: 0s !important;\n  transition-duration: 0s !important;\n}\n.lg-container.lg-dragging-vertical .lg-css3 .lg-item.lg-current {\n  -webkit-transition-duration: 0s !important;\n  transition-duration: 0s !important;\n  opacity: 1;\n}\n\n.lg-inline .lg-backdrop,\n.lg-inline .lg-outer {\n  position: absolute;\n}\n.lg-inline .lg-backdrop {\n  z-index: 1;\n}\n.lg-inline .lg-outer {\n  z-index: 2;\n}\n.lg-inline .lg-maximize:after {\n  content: \"\\e909\";\n}\n\n.lg-components {\n  -webkit-transform: translate3d(0, 100%, 0);\n  transform: translate3d(0, 100%, 0);\n  will-change: transform;\n  -webkit-transition: -webkit-transform 0.35s ease-out 0s;\n  -moz-transition: -moz-transform 0.35s ease-out 0s;\n  -o-transition: -o-transform 0.35s ease-out 0s;\n  transition: transform 0.35s ease-out 0s;\n  z-index: 1080;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  left: 0;\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,78,79,80,81,82,83,84]}