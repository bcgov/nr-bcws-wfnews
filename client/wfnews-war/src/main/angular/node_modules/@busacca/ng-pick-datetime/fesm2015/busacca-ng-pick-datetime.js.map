{"version":3,"file":"busacca-ng-pick-datetime.js","sources":["../../../projects/ng-pick-datetime/src/lib/date-time/adapter/date-time-adapter.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/date-time-format.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/moment-adapter/moment-date-time-format.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/moment-adapter/moment-date-time.module.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker-trigger.directive.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker-intl.service.ts","../../../projects/ng-pick-datetime/src/lib/date-time/calendar.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/timer.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker.animations.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker-container.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time.class.ts","../../../projects/ng-pick-datetime/src/lib/dialog/dialog-config.class.ts","../../../projects/ng-pick-datetime/src/lib/dialog/dialog-ref.class.ts","../../../projects/ng-pick-datetime/src/lib/dialog/dialog-container.component.ts","../../../projects/ng-pick-datetime/src/lib/utils/object.utils.ts","../../../projects/ng-pick-datetime/src/lib/utils/index.ts","../../../projects/ng-pick-datetime/src/lib/dialog/dialog.service.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-picker-input.directive.ts","../../../projects/ng-pick-datetime/src/lib/date-time/calendar-body.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/calendar-month-view.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/calendar-year-view.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/calendar-multi-year-view.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/timer-box.component.ts","../../../projects/ng-pick-datetime/src/lib/date-time/numberedFixLen.pipe.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time-inline.component.ts","../../../projects/ng-pick-datetime/src/lib/dialog/dialog.module.ts","../../../projects/ng-pick-datetime/src/lib/date-time/date-time.module.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/native-date-time-adapter.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/native-date-time-format.class.ts","../../../projects/ng-pick-datetime/src/lib/date-time/adapter/native-date-time.module.ts","../../../projects/ng-pick-datetime/src/public-api.ts","../../../projects/ng-pick-datetime/src/busacca-ng-pick-datetime.ts"],"sourcesContent":["/**\r\n * date-time-adapter.class\r\n */\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { inject, InjectionToken, LOCALE_ID } from '@angular/core';\r\n\r\n/** InjectionToken for date time picker that can be used to override default locale code. */\r\nexport const OWL_DATE_TIME_LOCALE = new InjectionToken<string>('OWL_DATE_TIME_LOCALE', {\r\n    providedIn: 'root',\r\n    factory: OWL_DATE_TIME_LOCALE_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function OWL_DATE_TIME_LOCALE_FACTORY(): string {\r\n    return inject(LOCALE_ID);\r\n}\r\n\r\n/** Provider for OWL_DATE_TIME_LOCALE injection token. */\r\nexport const OWL_DATE_TIME_LOCALE_PROVIDER = {provide: OWL_DATE_TIME_LOCALE, useExisting: LOCALE_ID};\r\n\r\nexport abstract class DateTimeAdapter<T> {\r\n\r\n    /** The locale to use for all dates. */\r\n    protected locale: any;\r\n\r\n    /** A stream that emits when the locale changes. */\r\n    protected _localeChanges = new Subject<void>();\r\n    get localeChanges(): Observable<void> {\r\n        return this._localeChanges;\r\n    }\r\n\r\n    /** total milliseconds in a day. */\r\n    protected readonly millisecondsInDay = 86400000;\r\n\r\n    /** total milliseconds in a minute. */\r\n    protected readonly milliseondsInMinute = 60000;\r\n\r\n    /**\r\n     * Get the year of the given date\r\n     * @param date\r\n     * @return {number}\r\n     * */\r\n    abstract getYear( date: T ): number;\r\n\r\n    /**\r\n     * Get the month of the given date\r\n     * @param date\r\n     * @return {number} -- from 0-11\r\n     * 0 -- January\r\n     * 11 -- December\r\n     * */\r\n    abstract getMonth( date: T ): number;\r\n\r\n    /**\r\n     * Get the day of the week of the given date\r\n     * @param date\r\n     * @return {number} -- from 0-6\r\n     * 0 -- Sunday\r\n     * 6 -- Saturday\r\n     * */\r\n    abstract getDay( date: T ): number;\r\n\r\n    /**\r\n     * Get the day num of the given date\r\n     * @param date\r\n     * @return {number} -- from 1-31\r\n     * */\r\n    abstract getDate( date: T ): number;\r\n\r\n    /**\r\n     * Get the hours of the given date\r\n     * @param date\r\n     * @return {number} -- from 0-23\r\n     * */\r\n    abstract getHours( date: T ): number;\r\n\r\n    /**\r\n     * Get the minutes of the given date\r\n     * @param date\r\n     * @return {number} -- from 0-59\r\n     * */\r\n    abstract getMinutes( date: T ): number;\r\n\r\n    /**\r\n     * Get the seconds of the given date\r\n     * @param date\r\n     * @return {number} -- from 0-59\r\n     * */\r\n    abstract getSeconds( date: T ): number;\r\n\r\n    /**\r\n     * Get the milliseconds timestamp of the given date\r\n     * @param  date\r\n     * @return {number}\r\n     * */\r\n    abstract getTime( date: T ): number;\r\n\r\n    /**\r\n     * Gets the number of days in the month of the given date.\r\n     * @param date -- The date whose month should be checked.\r\n     * @return {number} -- The number of days in the month of the given date.\r\n     */\r\n    abstract getNumDaysInMonth( date: T ): number;\r\n\r\n    /**\r\n     * Get the number of calendar days between the given dates.\r\n     * If dateLeft is before dateRight, it would return positive value\r\n     * If dateLeft is after dateRight, it would return negative value\r\n     * @param dateLeft -- the first date\r\n     * @param dateRight -- the second date\r\n     * @return {number} -- the number of calendar days between two given dates\r\n     *\r\n     * */\r\n    abstract differenceInCalendarDays( dateLeft: T, dateRight: T ): number;\r\n\r\n    /**\r\n     * Gets the name for the year of the given date.\r\n     * @param date The date to get the year name for.\r\n     * @returns The name of the given year (e.g. '2017').\r\n     */\r\n    abstract getYearName( date: T ): string;\r\n\r\n    /**\r\n     * Get a list of month names\r\n     * @param {'long' | 'short' | 'narrow'} style -- e.g. long = 'January', short = 'Jan', narrow = 'J'\r\n     * @return {string[]} -- An ordered list of all month names, starting with January.\r\n     * */\r\n    abstract getMonthNames( style: 'long' | 'short' | 'narrow' ): string[];\r\n\r\n    /**\r\n     * Get a list of week names\r\n     * @param {'long' | 'short' | 'narrow'} style -- e.g. long = 'Sunday', short = 'Sun', narrow = 'S'\r\n     * @return {string[]} -- An ordered list of all week names, starting with Sunday.\r\n     * */\r\n    abstract getDayOfWeekNames( style: 'long' | 'short' | 'narrow' ): string[];\r\n\r\n    /**\r\n     * Gets a list of names for the dates of the month.\r\n     * @returns An ordered list of all date of the month names, starting with '1'.\r\n     */\r\n    abstract getDateNames(): string[];\r\n\r\n    /**\r\n     * Return a Date object as a string, using the ISO standard\r\n     * @param date -- The date to get the ISO date string for.\r\n     * @return {string} -- The ISO date string date string.\r\n     * */\r\n    abstract toIso8601( date: T ): string;\r\n\r\n    /**\r\n     * Check if the give dates are equal\r\n     * @param dateLeft\r\n     * @param dateRight\r\n     * @return {boolean}\r\n     * */\r\n    abstract isEqual( dateLeft: T, dateRight: T ): boolean;\r\n\r\n    /**\r\n     * Check if the give dates are the same day\r\n     * @param {Date} dateLeft\r\n     * @param {Date} dateRight\r\n     * @return {boolean}\r\n     * */\r\n    abstract isSameDay( dateLeft: T, dateRight: T ): boolean;\r\n\r\n    /**\r\n     * Checks whether the given date is valid.\r\n     * @param date The date to check.\r\n     * @returns Whether the date is valid.\r\n     */\r\n    abstract isValid( date: T ): boolean;\r\n\r\n    /**\r\n     * Gets date instance that is not valid.\r\n     * @returns An invalid date.\r\n     */\r\n    abstract invalid(): T;\r\n\r\n    /**\r\n     * Checks whether the given object is considered a date instance by this DateTimeAdapter.\r\n     * @param obj The object to check\r\n     * @returns Whether the object is a date instance.\r\n     */\r\n    abstract isDateInstance( obj: any ): boolean;\r\n\r\n    /**\r\n     * Add the specified number of years to the given date\r\n     * @param date -- The date to add years to.\r\n     * @param {number} amount -- The number of years to add (may be negative).\r\n     * @returns A new date equal to the given one with the specified number of years added.\r\n     * */\r\n    abstract addCalendarYears( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Add the specified number of months to the given date\r\n     * @param date -- The date to add months to.\r\n     * @param {number} amount -- The number of months to add (may be negative).\r\n     * @return A new date equal to the given one with the specified number of months added.\r\n     * */\r\n    abstract addCalendarMonths( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Add the specified number of days to the given date\r\n     * @param date -- The date to add days to.\r\n     * @param {number} amount -- The number of days to add (may be negative).\r\n     * @return A new date equal to the given one with the specified number of days added.\r\n     * */\r\n    abstract addCalendarDays( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Set the hours to the given date.\r\n     * @param date -- The date to set hours to.\r\n     * @param {number} amount -- The number of hours to set (0 - 23).\r\n     * @return A new date equal to the given one with the specified hour value\r\n     * */\r\n    abstract setHours( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Set the minutes to the given date.\r\n     * @param date -- The date to set minutes to.\r\n     * @param {number} amount -- The number of minutes to set (0 - 59).\r\n     * @return A new date equal to the given one with the specified minute value\r\n     * */\r\n    abstract setMinutes( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Set the seconds to the given date.\r\n     * @param date -- The date to set seconds to.\r\n     * @param {number} amount -- The number of seconds to set (0 - 59).\r\n     * @return A new date equal to the given one with the specified second value\r\n     * */\r\n    abstract setSeconds( date: T, amount: number ): T;\r\n\r\n    /**\r\n     * Creates a date with the given year, month, date, hour, minute and second. Does not allow over/under-flow of the\r\n     * month and date.\r\n     * @param {number} year -- The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\n     * @param {number} month -- The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\n     * @param {number} date -- The date of month of the date. Must be an integer 1 - length of the given month.\r\n     * @param {number} hours -- The hours of the date. Must 0 - 23\r\n     * @param {number} minutes -- The minutes of the date. Must 0 - 59\r\n     * @param {number} seconds -- The seconds of the date. Must 0 - 59\r\n     * @returns The new date, or null if invalid.\r\n     */\r\n    abstract createDate( year: number, month: number, date: number ): T;\r\n    abstract createDate( year: number, month: number, date: number, hours: number, minutes: number, seconds: number ): T;\r\n\r\n    /**\r\n     * Clone the given date\r\n     * @param date -- The date to clone\r\n     * @return a new date object equal to the given one\r\n     * */\r\n    abstract clone( date: T ): T;\r\n\r\n    /**\r\n     * Get a new moment\r\n     * @return a date object with now value\r\n     * */\r\n    abstract now(): T;\r\n\r\n    /**\r\n     * Formats a date as a string according to the given format.\r\n     * @param date -- The value to format.\r\n     * @param displayFormat -- The format to use to display the date as a string.\r\n     * @returns The formatted date string.\r\n     */\r\n    abstract format( date: T, displayFormat: any ): string;\r\n\r\n    /**\r\n     * Parse a user-provided value to a Date Object\r\n     * @param value -- The value to parse\r\n     * @param {any} parseFormat -- The expected format of the value being parsed\r\n     * @return Thar parsed date\r\n     * */\r\n    abstract parse( value: any, parseFormat: any ): T | null;\r\n\r\n    /**\r\n     * Compare two given dates\r\n     * @return {number} -- 1, 0 or -1\r\n     * 1 if the first date is after the second,\r\n     * -1 if the first date is before the second\r\n     * 0 if dates are equal.\r\n     * */\r\n    compare( first: T, second: T ): number {\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n\r\n        const dateFirst = this.clone(first);\r\n        const dateSecond = this.clone(second);\r\n\r\n        const diff = this.getTime(dateFirst) - this.getTime(dateSecond);\r\n\r\n        if (diff < 0) {\r\n            return -1;\r\n        } else if (diff > 0) {\r\n            return 1;\r\n        } else {\r\n            // Return 0 if diff is 0; return NaN if diff is NaN\r\n            return diff;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if two given dates are in the same year\r\n     * @return {number} -- 1, 0 or -1\r\n     * 1 if the first date's year is after the second,\r\n     * -1 if the first date's year is before the second\r\n     * 0 if two given dates are in the same year\r\n     * */\r\n    compareYear( first: T, second: T ): number {\r\n\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n\r\n        const yearLeft = this.getYear(first);\r\n        const yearRight = this.getYear(second);\r\n\r\n        const diff = yearLeft - yearRight;\r\n\r\n        if (diff < 0) {\r\n            return -1;\r\n        } else if (diff > 0) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param value The value to be deserialized into a date object.\r\n     * @returns The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    deserialize( value: any ): T | null {\r\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    }\r\n\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param locale The new locale.\r\n     */\r\n    setLocale( locale: any ) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    }\r\n\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param date The date to clamp.\r\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    clampDate( date: T, min?: T | null, max?: T | null ): T {\r\n        if (min && this.compare(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compare(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    }\r\n}\r\n","/**\r\n * date-time-format.class\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport type OwlDateTimeFormats = {\r\n    parseInput: any,\r\n    fullPickerInput: any,\r\n    datePickerInput: any,\r\n    timePickerInput: any,\r\n    monthYearLabel: any,\r\n    dateA11yLabel: any,\r\n    monthYearA11yLabel: any,\r\n};\r\n\r\n/** InjectionToken for date time picker that can be used to override default format. */\r\nexport const OWL_DATE_TIME_FORMATS = new InjectionToken<OwlDateTimeFormats>('OWL_DATE_TIME_FORMATS');\r\n","/**\r\n * moment-date-time-adapter.class\r\n */\r\n\r\nimport { Inject, Injectable, Optional, InjectionToken } from '@angular/core';\r\n// import { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\r\nimport * as _moment from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '../date-time-adapter.class';\r\n\r\nconst moment = (_moment as any).default ? (_moment as any).default : _moment;\r\n\r\n/** Configurable options for {@see MomentDateAdapter}. */\r\nexport interface OwlMomentDateTimeAdapterOptions {\r\n    /**\r\n     * Turns the use of utc dates on or off.\r\n     * Changing this will change how the DateTimePicker output value.\r\n     * {@default false}\r\n     */\r\n    useUtc: boolean;\r\n}\r\n\r\n/** InjectionToken for moment date adapter to configure options. */\r\nexport const OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS = new InjectionToken<OwlMomentDateTimeAdapterOptions>(\r\n    'OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS', {\r\n        providedIn: 'root',\r\n        factory: OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY\r\n    });\r\n\r\n/** @docs-private */\r\nexport function OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY(): OwlMomentDateTimeAdapterOptions {\r\n    return {\r\n        useUtc: false\r\n    };\r\n}\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class MomentDateTimeAdapter extends DateTimeAdapter<Moment> {\r\n\r\n    private _localeData: {\r\n        longMonths: string[],\r\n        shortMonths: string[],\r\n        longDaysOfWeek: string[],\r\n        shortDaysOfWeek: string[],\r\n        narrowDaysOfWeek: string[],\r\n        dates: string[],\r\n    };\r\n\r\n    constructor( @Optional() @Inject(OWL_DATE_TIME_LOCALE) private owlDateTimeLocale: string,\r\n                 @Optional() @Inject(OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS) private options?: OwlMomentDateTimeAdapterOptions ) {\r\n        super();\r\n        this.setLocale(owlDateTimeLocale || moment.locale());\r\n    }\r\n\r\n    public setLocale( locale: string ) {\r\n        super.setLocale(locale);\r\n\r\n        const momentLocaleData = moment.localeData(locale);\r\n        this._localeData = {\r\n            longMonths: momentLocaleData.months(),\r\n            shortMonths: momentLocaleData.monthsShort(),\r\n            longDaysOfWeek: momentLocaleData.weekdays(),\r\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\r\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\r\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\r\n        };\r\n    }\r\n\r\n\r\n    public getYear( date: Moment ): number {\r\n        return this.clone(date).year();\r\n    }\r\n\r\n    public getMonth( date: Moment ): number {\r\n        return this.clone(date).month();\r\n    }\r\n\r\n    public getDay( date: Moment ): number {\r\n        return this.clone(date).day();\r\n    }\r\n\r\n    public getDate( date: Moment ): number {\r\n        return this.clone(date).date();\r\n    }\r\n\r\n    public getHours( date: Moment ): number {\r\n        return this.clone(date).hours();\r\n    }\r\n\r\n    public getMinutes( date: Moment ): number {\r\n        return this.clone(date).minutes();\r\n    }\r\n\r\n    public getSeconds( date: Moment ): number {\r\n        return this.clone(date).seconds();\r\n    }\r\n\r\n    public getTime( date: Moment ): number {\r\n        return this.clone(date).valueOf();\r\n    }\r\n\r\n    public getNumDaysInMonth( date: Moment ): number {\r\n        return this.clone(date).daysInMonth();\r\n    }\r\n\r\n    public differenceInCalendarDays( dateLeft: Moment, dateRight: Moment ): number {\r\n        return this.clone(dateLeft).diff(dateRight, 'days');\r\n    }\r\n\r\n    public getYearName( date: Moment ): string {\r\n        return this.clone(date).format('YYYY');\r\n    }\r\n\r\n    public getMonthNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        return style === 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\r\n    }\r\n\r\n    public getDayOfWeekNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        if (style === 'long') {\r\n            return this._localeData.longDaysOfWeek;\r\n        }\r\n        if (style === 'short') {\r\n            return this._localeData.shortDaysOfWeek;\r\n        }\r\n        return this._localeData.narrowDaysOfWeek;\r\n    }\r\n\r\n    public getDateNames(): string[] {\r\n        return this._localeData.dates;\r\n    }\r\n\r\n    public toIso8601( date: Moment ): string {\r\n        return this.clone(date).format();\r\n    }\r\n\r\n    public isEqual( dateLeft: Moment, dateRight: Moment ): boolean {\r\n\r\n        if (dateLeft && dateRight) {\r\n            return this.clone(dateLeft).isSame(this.clone(dateRight));\r\n        }\r\n\r\n        return dateLeft === dateRight;\r\n    }\r\n\r\n    public isSameDay( dateLeft: Moment, dateRight: Moment ): boolean {\r\n\r\n        if (dateLeft && dateRight) {\r\n            return this.clone(dateLeft).isSame(this.clone(dateRight), 'day');\r\n        }\r\n\r\n        return dateLeft === dateRight;\r\n    }\r\n\r\n    public isValid( date: Moment ): boolean {\r\n        return this.clone(date).isValid();\r\n    }\r\n\r\n    public invalid(): Moment {\r\n        return moment.invalid();\r\n    }\r\n\r\n    public isDateInstance( obj: any ): boolean {\r\n        return moment.isMoment(obj);\r\n    }\r\n\r\n    public addCalendarYears( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({years: amount});\r\n    }\r\n\r\n    public addCalendarMonths( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({months: amount});\r\n    }\r\n\r\n    public addCalendarDays( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).add({days: amount});\r\n    }\r\n\r\n    public setHours( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).hours(amount);\r\n    }\r\n\r\n    public setMinutes( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).minutes(amount);\r\n    }\r\n\r\n    public setSeconds( date: Moment, amount: number ): Moment {\r\n        return this.clone(date).seconds(amount);\r\n    }\r\n\r\n    public createDate( year: number, month: number, date: number ): Moment;\r\n    public createDate( year: number, month: number, date: number, hours: number = 0, minutes: number = 0, seconds: number = 0 ): Moment {\r\n        if (month < 0 || month > 11) {\r\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n        }\r\n\r\n        if (date < 1) {\r\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n        }\r\n\r\n        if (hours < 0 || hours > 23) {\r\n            throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\r\n        }\r\n\r\n        if (minutes < 0 || minutes > 59) {\r\n            throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\r\n        }\r\n\r\n        if (seconds < 0 || seconds > 59) {\r\n            throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\r\n        }\r\n\r\n        const result = this.createMoment({year, month, date, hours, minutes, seconds}).locale(this.locale);\r\n\r\n        // If the result isn't valid, the date must have been out of bounds for this month.\r\n        if (!result.isValid()) {\r\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public clone( date: Moment ): Moment {\r\n        return this.createMoment(date).clone().locale(this.locale);\r\n    }\r\n\r\n    public now(): Moment {\r\n        return this.createMoment().locale(this.locale);\r\n    }\r\n\r\n    public format( date: Moment, displayFormat: any ): string {\r\n        date = this.clone(date);\r\n        if (!this.isValid(date)) {\r\n            throw Error('MomentDateTimeAdapter: Cannot format invalid date.');\r\n        }\r\n        return date.format(displayFormat);\r\n    }\r\n\r\n    public parse( value: any, parseFormat: any ): Moment | null {\r\n        if (value && typeof value === 'string') {\r\n            return this.createMoment(value, parseFormat, this.locale);\r\n        }\r\n        return value ? this.createMoment(value).locale(this.locale) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\r\n     * string into null. Returns an invalid date for all other values.\r\n     */\r\n    deserialize( value: any ): Moment | null {\r\n        let date;\r\n        if (value instanceof Date) {\r\n            date = this.createMoment(value);\r\n        }\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\r\n        }\r\n        if (date && this.isValid(date)) {\r\n            return date;\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n\r\n    /** Creates a Moment instance while respecting the current UTC settings. */\r\n    private createMoment(...args: any[]): Moment {\r\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\r\n    }\r\n}\r\n","/**\r\n * moment-date-time-format.class\r\n */\r\nimport { OwlDateTimeFormats } from '../date-time-format.class';\r\n\r\n// import { OwlDateTimeFormats } from 'ng-pick-datetime';\r\n\r\nexport const OWL_MOMENT_DATE_TIME_FORMATS: OwlDateTimeFormats = {\r\n    parseInput: 'l LT',\r\n    fullPickerInput: 'l LT',\r\n    datePickerInput: 'l',\r\n    timePickerInput: 'LT',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n};\r\n","/**\r\n * moment-date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { MomentDateTimeAdapter, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS } from './moment-date-time-adapter.class';\r\nimport { OWL_MOMENT_DATE_TIME_FORMATS } from './moment-date-time-format.class';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from '../date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS } from '../date-time-format.class';\r\n// import { DateTimeAdapter, OWL_DATE_TIME_FORMATS, OWL_DATE_TIME_LOCALE_PROVIDER } from 'ng-pick-datetime';\r\n\r\n@NgModule({\r\n    providers: [\r\n        {\r\n            provide: DateTimeAdapter,\r\n            useClass: MomentDateTimeAdapter,\r\n            deps: [OWL_DATE_TIME_LOCALE, OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS]\r\n        },\r\n    ],\r\n})\r\nexport class MomentDateTimeModule {\r\n}\r\n\r\n@NgModule({\r\n    imports: [MomentDateTimeModule],\r\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_MOMENT_DATE_TIME_FORMATS}],\r\n})\r\nexport class OwlMomentDateTimeModule {\r\n}\r\n","/**\r\n * date-time-picker-trigger.directive\r\n */\r\n\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectorRef,\r\n    Directive,\r\n    HostBinding,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    SimpleChanges\r\n} from '@angular/core';\r\nimport { OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { merge, of as observableOf, Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[owlDateTimeTrigger]',\r\n})\r\nexport class OwlDateTimeTriggerDirective<T> implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n\r\n    @Input('owlDateTimeTrigger') dtPicker: OwlDateTimeComponent<T>;\r\n\r\n    private _disabled: boolean;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined ? this.dtPicker.disabled : !!this._disabled;\r\n    }\r\n\r\n    set disabled( value: boolean ) {\r\n        this._disabled = value;\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-trigger-disabled')\r\n    get owlDTTriggerDisabledClass(): boolean {\r\n        return this.disabled;\r\n    }\r\n\r\n    private stateChanges = Subscription.EMPTY;\r\n\r\n    constructor( protected changeDetector: ChangeDetectorRef ) {\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n    }\r\n\r\n    public ngOnChanges( changes: SimpleChanges ) {\r\n        if (changes.datepicker) {\r\n            this.watchStateChanges();\r\n        }\r\n    }\r\n\r\n    public ngAfterContentInit() {\r\n        this.watchStateChanges();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.stateChanges.unsubscribe();\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    public handleClickOnHost( event: Event ): void {\r\n        if (this.dtPicker) {\r\n            this.dtPicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private watchStateChanges(): void {\r\n        this.stateChanges.unsubscribe();\r\n\r\n        const inputDisabled = this.dtPicker && this.dtPicker.dtInput ?\r\n            this.dtPicker.dtInput.disabledChange : observableOf();\r\n\r\n        const pickerDisabled = this.dtPicker ?\r\n            this.dtPicker.disabledChange : observableOf();\r\n\r\n        this.stateChanges = merge(pickerDisabled, inputDisabled)\r\n            .subscribe(() => {\r\n                this.changeDetector.markForCheck();\r\n            });\r\n    }\r\n}\r\n","/**\r\n * date-time-picker-intl.service\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class OwlDateTimeIntl {\r\n\r\n    /**\r\n     * Stream that emits whenever the labels here are changed. Use this to notify\r\n     * components if the labels have changed after initialization.\r\n     */\r\n    readonly changes: Subject<void> = new Subject<void>();\r\n\r\n    /** A label for the up second button (used by screen readers).  */\r\n    upSecondLabel = 'Add a second';\r\n\r\n    /** A label for the down second button (used by screen readers).  */\r\n    downSecondLabel = 'Minus a second';\r\n\r\n    /** A label for the up minute button (used by screen readers).  */\r\n    upMinuteLabel = 'Add a minute';\r\n\r\n    /** A label for the down minute button (used by screen readers).  */\r\n    downMinuteLabel = 'Minus a minute';\r\n\r\n    /** A label for the up hour button (used by screen readers).  */\r\n    upHourLabel = 'Add a hour';\r\n\r\n    /** A label for the down hour button (used by screen readers).  */\r\n    downHourLabel = 'Minus a hour';\r\n\r\n    /** A label for the previous month button (used by screen readers). */\r\n    prevMonthLabel = 'Previous month';\r\n\r\n    /** A label for the next month button (used by screen readers). */\r\n    nextMonthLabel = 'Next month';\r\n\r\n    /** A label for the previous year button (used by screen readers). */\r\n    prevYearLabel = 'Previous year';\r\n\r\n    /** A label for the next year button (used by screen readers). */\r\n    nextYearLabel = 'Next year';\r\n\r\n    /** A label for the previous multi-year button (used by screen readers). */\r\n    prevMultiYearLabel: string = 'Previous 21 years';\r\n\r\n    /** A label for the next multi-year button (used by screen readers). */\r\n    nextMultiYearLabel: string = 'Next 21 years';\r\n\r\n    /** A label for the 'switch to month view' button (used by screen readers). */\r\n    switchToMonthViewLabel = 'Change to month view';\r\n\r\n    /** A label for the 'switch to year view' button (used by screen readers). */\r\n    switchToMultiYearViewLabel: string = 'Choose month and year';\r\n\r\n    /** A label for the cancel button */\r\n    cancelBtnLabel = 'Cancel';\r\n\r\n    /** A label for the set button */\r\n    setBtnLabel = 'Set';\r\n\r\n    /** A label for the range 'from' in picker info */\r\n    rangeFromLabel = 'From';\r\n\r\n    /** A label for the range 'to' in picker info */\r\n    rangeToLabel = 'To';\r\n\r\n    /** A label for the hour12 button (AM) */\r\n    hour12AMLabel = 'AM';\r\n\r\n    /** A label for the hour12 button (PM) */\r\n    hour12PMLabel = 'PM';\r\n}\r\n","/**\r\n * calendar.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewChecked,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Inject,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output\r\n} from '@angular/core';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { SelectMode } from './date-time.class';\r\nimport { take } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'owl-date-time-calendar',\r\n    exportAs: 'owlDateTimeCalendar',\r\n    templateUrl: './calendar.component.html',\r\n    styleUrls: ['./calendar.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlCalendarComponent<T> implements OnInit, AfterContentInit, AfterViewChecked, OnDestroy {\r\n\r\n    /**\r\n     * Date filter for the month and year view\r\n     * @type {Function}\r\n     * */\r\n    @Input() dateFilter: Function;\r\n\r\n    /**\r\n     * Set the first day of week\r\n     * @default {0} -- 0: Sunday ~ 6: Saturday\r\n     * @type {number}\r\n     * */\r\n    @Input() firstDayOfWeek = 0;\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n\r\n        this._minDate = value ?\r\n            this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(value),\r\n                this.dateTimeAdapter.getMonth(value),\r\n                this.dateTimeAdapter.getDate(value),\r\n            ) : null;\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n\r\n        this._maxDate = value ?\r\n            this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(value),\r\n                this.dateTimeAdapter.getMonth(value),\r\n                this.dateTimeAdapter.getDate(value),\r\n            ) : null;\r\n    }\r\n\r\n    /** The current picker moment */\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n    }\r\n\r\n    @Input() selectMode: SelectMode;\r\n\r\n    /** The currently selected moment. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values.map(( v ) => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * The view that the calendar should start in.\r\n     * @default {'month'}\r\n     * @type {'month' | 'year'}\r\n     * */\r\n    @Input() startView: 'month' | 'year' | 'multi-years' = 'month';\r\n\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * */\r\n    @Input() hideOtherMonths: boolean;\r\n\r\n    /** Emits when the currently picker moment changes. */\r\n    @Output() pickerMomentChange = new EventEmitter<T>();\r\n\r\n    /** Emits when the currently selected date changes. */\r\n    @Output() selectedChange = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is selected. */\r\n    @Output() userSelection = new EventEmitter<void>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output() readonly yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected month. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output() readonly monthSelected = new EventEmitter<T>();\r\n\r\n    get periodButtonText(): string {\r\n        return this.isMonthView ? this.dateTimeAdapter.format(this.pickerMoment, this.dateTimeFormats.monthYearLabel) :\r\n            this.dateTimeAdapter.getYearName(this.pickerMoment);\r\n    }\r\n\r\n    get periodButtonLabel(): string {\r\n        return this.isMonthView ? this.pickerIntl.switchToMultiYearViewLabel :\r\n            this.pickerIntl.switchToMonthViewLabel;\r\n    }\r\n\r\n    get prevButtonLabel(): string {\r\n        if (this._currentView === 'month') {\r\n            return this.pickerIntl.prevMonthLabel;\r\n        } else if (this._currentView === 'year') {\r\n            return this.pickerIntl.prevYearLabel;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    get nextButtonLabel(): string {\r\n        if (this._currentView === 'month') {\r\n            return this.pickerIntl.nextMonthLabel;\r\n        } else if (this._currentView === 'year') {\r\n            return this.pickerIntl.nextYearLabel;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _currentView: 'month' | 'year' | 'multi-years';\r\n    get currentView(): 'month' | 'year' | 'multi-years' {\r\n        return this._currentView;\r\n    }\r\n\r\n    set currentView( view: 'month' | 'year' | 'multi-years' ) {\r\n        this._currentView = view;\r\n        this.moveFocusOnNextTick = true;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    get showControlArrows(): boolean {\r\n        return this._currentView !== 'multi-years';\r\n    }\r\n\r\n    get isMonthView() {\r\n        return this._currentView === 'month';\r\n    }\r\n\r\n    /**\r\n     * Date filter for the month and year view\r\n     * @type {Function}\r\n     * */\r\n    public dateFilterForViews = ( date: T ) => {\r\n        return !!date &&\r\n            (!this.dateFilter || this.dateFilter(date)) &&\r\n            (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n            (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0);\r\n    };\r\n\r\n    /**\r\n     * Bind class 'owl-dt-calendar' to host\r\n     * */\r\n    @HostBinding('class.owl-dt-calendar')\r\n    get owlDTCalendarClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private intlChangesSub = Subscription.EMPTY;\r\n\r\n    /**\r\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\r\n     * We need to schedule it, rather than do it immediately, because we have to wait\r\n     * for Angular to re-evaluate the view children.\r\n     */\r\n    private moveFocusOnNextTick = false;\r\n\r\n    constructor( private elmRef: ElementRef,\r\n                 private pickerIntl: OwlDateTimeIntl,\r\n                 private ngZone: NgZone,\r\n                 private cdRef: ChangeDetectorRef,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) private dateTimeFormats: OwlDateTimeFormats ) {\r\n\r\n        this.intlChangesSub = this.pickerIntl.changes.subscribe(() => {\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this._currentView = this.startView;\r\n    }\r\n\r\n    public ngAfterViewChecked() {\r\n        if (this.moveFocusOnNextTick) {\r\n            this.moveFocusOnNextTick = false;\r\n            this.focusActiveCell();\r\n        }\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.intlChangesSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Toggle between month view and year view\r\n     * @return {void}\r\n     * */\r\n    public toggleViews(): void {\r\n        this.currentView = this._currentView == 'month' ? 'multi-years' : 'month';\r\n    }\r\n\r\n    /**\r\n     * Handles user clicks on the previous button.\r\n     * */\r\n    public previousClicked(): void {\r\n        this.pickerMoment = this.isMonthView ?\r\n            this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1) :\r\n            this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1);\r\n\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n    }\r\n\r\n    /**\r\n     * Handles user clicks on the next button.\r\n     * */\r\n    public nextClicked(): void {\r\n        this.pickerMoment = this.isMonthView ?\r\n            this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1) :\r\n            this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1);\r\n\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n    }\r\n\r\n    public dateSelected( date: T ): void {\r\n        if (!this.dateFilterForViews(date)) {\r\n            return;\r\n        }\r\n\r\n        this.selectedChange.emit(date);\r\n\r\n        /*if ((this.isInSingleMode && !this.dateTimeAdapter.isSameDay(date, this.selected)) ||\r\n            this.isInRangeMode) {\r\n            this.selectedChange.emit(date);\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * Change the pickerMoment value and switch to a specific view\r\n     * @param {T} date\r\n     * @param {'month' | 'year' | 'multi-years'} view\r\n     * @return {void}\r\n     * */\r\n    public goToDateInView( date: T, view: 'month' | 'year' | 'multi-years' ): void {\r\n        this.handlePickerMomentChange(date);\r\n        this.currentView = view;\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Change the pickerMoment value\r\n     * @return {void}\r\n     * */\r\n    public handlePickerMomentChange( date: T ): void {\r\n        this.pickerMoment = this.dateTimeAdapter.clampDate(date, this.minDate, this.maxDate);\r\n        this.pickerMomentChange.emit(this.pickerMoment);\r\n        return;\r\n    }\r\n\r\n    public userSelected(): void {\r\n        this.userSelection.emit();\r\n    }\r\n\r\n    /**\r\n     * Whether the previous period button is enabled.\r\n     * @return {boolean}\r\n     * */\r\n    public prevButtonEnabled(): boolean {\r\n        return !this.minDate || !this.isSameView(this.pickerMoment, this.minDate);\r\n    }\r\n\r\n    /**\r\n     * Whether the next period button is enabled.\r\n     * @return {boolean}\r\n     * */\r\n    public nextButtonEnabled(): boolean {\r\n        return !this.maxDate || !this.isSameView(this.pickerMoment, this.maxDate);\r\n    }\r\n\r\n    /**\r\n     * Focus to the host element\r\n     * */\r\n    public focusActiveCell() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();\r\n            });\r\n        });\r\n    }\r\n\r\n    public selectYearInMultiYearView( normalizedYear: T ): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    public selectMonthInYearView( normalizedMonth: T ): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n\r\n    /**\r\n     * Whether the two dates represent the same view in the current view mode (month or year).\r\n     * @param {Date} date1\r\n     * @param {Date} date2\r\n     * @return {boolean}\r\n     * */\r\n    private isSameView( date1: T, date2: T ): boolean {\r\n        if (this._currentView === 'month') {\r\n            return !!(date1 && date2 &&\r\n                this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2) &&\r\n                this.dateTimeAdapter.getMonth(date1) === this.dateTimeAdapter.getMonth(date2));\r\n        } else if (this._currentView === 'year') {\r\n            return !!(date1 && date2 &&\r\n                this.dateTimeAdapter.getYear(date1) === this.dateTimeAdapter.getYear(date2));\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n}\r\n","/**\r\n * timer.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy, ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    NgZone,\r\n    OnInit,\r\n    Optional,\r\n    Output\r\n} from '@angular/core';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeTimer',\r\n    selector: 'owl-date-time-timer',\r\n    templateUrl: './timer.component.html',\r\n    styleUrls: ['./timer.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlTimerComponent<T> implements OnInit {\r\n\r\n    /** The current picker moment */\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n    }\r\n\r\n    /** The minimum selectable date time. */\r\n    private _minDateTime: T | null;\r\n    @Input()\r\n    get minDateTime(): T | null {\r\n        return this._minDateTime;\r\n    }\r\n\r\n    set minDateTime( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDateTime = this.getValidDate(value);\r\n    }\r\n\r\n    /** The maximum selectable date time. */\r\n    private _maxDateTime: T | null;\r\n    @Input()\r\n    get maxDateTime(): T | null {\r\n        return this._maxDateTime;\r\n    }\r\n\r\n    set maxDateTime( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDateTime = this.getValidDate(value);\r\n    }\r\n\r\n    private isPM: boolean = false; // a flag indicates the current timer moment is in PM or AM\r\n\r\n    /**\r\n     * Whether to show the second's timer\r\n     * @default false\r\n     * @type {Boolean}\r\n     * */\r\n    @Input() showSecondsTimer: boolean;\r\n\r\n    /**\r\n     * Whether the timer is in hour12 format\r\n     * @default false\r\n     * @type {boolean}\r\n     * */\r\n    @Input() hour12Timer: boolean;\r\n\r\n    /**\r\n     * Hours to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    @Input() stepHour = 1;\r\n\r\n    /**\r\n     * Minutes to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    @Input() stepMinute = 1;\r\n\r\n    /**\r\n     * Seconds to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    @Input() stepSecond = 1;\r\n\r\n    get hourValue(): number {\r\n        return this.dateTimeAdapter.getHours(this.pickerMoment);\r\n    }\r\n\r\n    /**\r\n     * The value would be displayed in hourBox.\r\n     * We need this because the value displayed in hourBox it not\r\n     * the same as the hourValue when the timer is in hour12Timer mode.\r\n     * */\r\n    get hourBoxValue(): number {\r\n        let hours = this.hourValue;\r\n\r\n        if (!this.hour12Timer) {\r\n            return hours;\r\n        } else {\r\n\r\n            if (hours === 0) {\r\n                hours = 12;\r\n                this.isPM = false;\r\n            } else if (hours > 0 && hours < 12) {\r\n                this.isPM = false;\r\n            } else if (hours === 12) {\r\n                this.isPM = true;\r\n            } else if (hours > 12 && hours < 24) {\r\n                hours = hours - 12;\r\n                this.isPM = true;\r\n            }\r\n\r\n            return hours;\r\n        }\r\n    }\r\n\r\n    get minuteValue(): number {\r\n        return this.dateTimeAdapter.getMinutes(this.pickerMoment);\r\n    }\r\n\r\n    get secondValue(): number {\r\n        return this.dateTimeAdapter.getSeconds(this.pickerMoment);\r\n    }\r\n\r\n    get upHourButtonLabel(): string {\r\n        return this.pickerIntl.upHourLabel;\r\n    }\r\n\r\n    get downHourButtonLabel(): string {\r\n        return this.pickerIntl.downHourLabel;\r\n    }\r\n\r\n    get upMinuteButtonLabel(): string {\r\n        return this.pickerIntl.upMinuteLabel;\r\n    }\r\n\r\n    get downMinuteButtonLabel(): string {\r\n        return this.pickerIntl.downMinuteLabel;\r\n    }\r\n\r\n    get upSecondButtonLabel(): string {\r\n        return this.pickerIntl.upSecondLabel;\r\n    }\r\n\r\n    get downSecondButtonLabel(): string {\r\n        return this.pickerIntl.downSecondLabel;\r\n    }\r\n\r\n    get hour12ButtonLabel(): string {\r\n        return this.isPM ? this.pickerIntl.hour12PMLabel : this.pickerIntl.hour12AMLabel;\r\n    }\r\n\r\n    @Output() selectedChange = new EventEmitter<T>();\r\n\r\n    @HostBinding('class.owl-dt-timer')\r\n    get owlDTTimerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @HostBinding('attr.tabindex')\r\n    get owlDTTimeTabIndex(): number {\r\n        return -1;\r\n    }\r\n\r\n    constructor( private ngZone: NgZone,\r\n                 private elmRef: ElementRef,\r\n                 private pickerIntl: OwlDateTimeIntl,\r\n                 private cdRef: ChangeDetectorRef,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    /**\r\n     * Focus to the host element\r\n     * */\r\n    public focus() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                this.elmRef.nativeElement.focus();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the hour value via typing into timer box input\r\n     * We need this to handle the hour value when the timer is in hour12 mode\r\n     * */\r\n    public setHourValueViaInput( hours: number ): void {\r\n\r\n        if (this.hour12Timer && this.isPM && hours >= 1 && hours <= 11) {\r\n            hours = hours + 12;\r\n        } else if (this.hour12Timer && !this.isPM && hours === 12) {\r\n            hours = 0\r\n        }\r\n\r\n        this.setHourValue(hours);\r\n    }\r\n\r\n    public setHourValue( hours: number ): void {\r\n        const m = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setMinuteValue( minutes: number ): void {\r\n        const m = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setSecondValue( seconds: number ): void {\r\n        const m = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\r\n        this.selectedChange.emit(m);\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    public setMeridiem( event: any ): void {\r\n        this.isPM = !this.isPM;\r\n\r\n        let hours = this.hourValue;\r\n        if (this.isPM) {\r\n            hours = hours + 12;\r\n        } else {\r\n            hours = hours - 12;\r\n        }\r\n\r\n        if (hours >= 0 && hours <= 23) {\r\n            this.setHourValue(hours);\r\n        }\r\n\r\n        this.cdRef.markForCheck();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Check if the up hour button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public upHourEnabled(): boolean {\r\n        return !this.maxDateTime || this.compareHours(this.stepHour, this.maxDateTime) < 1;\r\n    }\r\n\r\n    /**\r\n     * Check if the down hour button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public downHourEnabled(): boolean {\r\n        return !this.minDateTime || this.compareHours(-this.stepHour, this.minDateTime) > -1;\r\n    }\r\n\r\n    /**\r\n     * Check if the up minute button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public upMinuteEnabled(): boolean {\r\n        return !this.maxDateTime || this.compareMinutes(this.stepMinute, this.maxDateTime) < 1;\r\n    }\r\n\r\n    /**\r\n     * Check if the down minute button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public downMinuteEnabled(): boolean {\r\n        return !this.minDateTime || this.compareMinutes(-this.stepMinute, this.minDateTime) > -1;\r\n    }\r\n\r\n    /**\r\n     * Check if the up second button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public upSecondEnabled(): boolean {\r\n        return !this.maxDateTime || this.compareSeconds(this.stepSecond, this.maxDateTime) < 1;\r\n    }\r\n\r\n    /**\r\n     * Check if the down second button is enabled\r\n     * @return {boolean}\r\n     * */\r\n    public downSecondEnabled(): boolean {\r\n        return !this.minDateTime || this.compareSeconds(-this.stepSecond, this.minDateTime) > -1;\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's hour value +/- certain amount and compare it to the give date\r\n     * @param {number} amount\r\n     * @param {Date} comparedDate\r\n     * @return {number}\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareHours( amount: number, comparedDate: T ): number {\r\n        const hours = this.dateTimeAdapter.getHours(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setHours(this.pickerMoment, hours);\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's minute value +/- certain amount and compare it to the give date\r\n     * @param {number} amount\r\n     * @param {Date} comparedDate\r\n     * @return {number}\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareMinutes( amount: number, comparedDate: T ): number {\r\n        const minutes = this.dateTimeAdapter.getMinutes(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setMinutes(this.pickerMoment, minutes);\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * PickerMoment's second value +/- certain amount and compare it to the give date\r\n     * @param {number} amount\r\n     * @param {Date} comparedDate\r\n     * @return {number}\r\n     * 1 is after the comparedDate\r\n     * -1 is before the comparedDate\r\n     * 0 is equal the comparedDate\r\n     * */\r\n    private compareSeconds( amount: number, comparedDate: T ): number {\r\n        const seconds = this.dateTimeAdapter.getSeconds(this.pickerMoment) + amount;\r\n        const result = this.dateTimeAdapter.setSeconds(this.pickerMoment, seconds);\r\n        return this.dateTimeAdapter.compare(result, comparedDate);\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n}\r\n","/**\r\n * date-time-picker.animations\r\n */\r\nimport {\r\n    animate, animateChild,\r\n    AnimationTriggerMetadata,\r\n    group,\r\n    query,\r\n    state,\r\n    style,\r\n    transition,\r\n    trigger\r\n} from '@angular/animations';\r\n\r\nexport const owlDateTimePickerAnimations: {\r\n    readonly transformPicker: AnimationTriggerMetadata;\r\n    readonly fadeInPicker: AnimationTriggerMetadata;\r\n} = {\r\n\r\n    transformPicker: trigger('transformPicker', [\r\n        state('void', style({opacity: 0, transform: 'scale(1, 0)'})),\r\n        state('enter', style({opacity: 1, transform: 'scale(1, 1)'})),\r\n        transition('void => enter', group([\r\n            query('@fadeInPicker', animateChild(), { optional: true }),\r\n            animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n        ])),\r\n        transition('enter => void', animate('100ms linear', style({opacity: 0})))\r\n    ]),\r\n\r\n    fadeInPicker: trigger('fadeInPicker', [\r\n        state('enter', style({opacity: 1})),\r\n        state('void', style({opacity: 0})),\r\n        transition('void => enter', animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\r\n    ])\r\n};\r\n","/**\r\n * date-time-picker-container.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    HostBinding,\r\n    HostListener,\r\n    OnInit,\r\n    Optional,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { OwlCalendarComponent } from './calendar.component';\r\nimport { OwlTimerComponent } from './timer.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OwlDateTime, PickerType } from './date-time.class';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { owlDateTimePickerAnimations } from './date-time-picker.animations';\r\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW } from '@angular/cdk/keycodes';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeContainer',\r\n    selector: 'owl-date-time-container',\r\n    templateUrl: './date-time-picker-container.component.html',\r\n    styleUrls: ['./date-time-picker-container.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n    animations: [\r\n        owlDateTimePickerAnimations.transformPicker,\r\n        owlDateTimePickerAnimations.fadeInPicker\r\n    ]\r\n})\r\n\r\nexport class OwlDateTimeContainerComponent<T> implements OnInit, AfterContentInit, AfterViewInit {\r\n\r\n    @ViewChild(OwlCalendarComponent, { static: true }) calendar: OwlCalendarComponent<T>;\r\n    @ViewChild(OwlTimerComponent, { static: true }) timer: OwlTimerComponent<T>;\r\n\r\n    public picker: OwlDateTime<T>;\r\n    public activeSelectedIndex = 0; // The current active SelectedIndex in range select mode (0: 'from', 1: 'to')\r\n\r\n    /**\r\n     * Stream emits when try to hide picker\r\n     * */\r\n    private hidePicker$ = new Subject<any>();\r\n\r\n    get hidePickerStream(): Observable<any> {\r\n        return this.hidePicker$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * Stream emits when try to confirm the selected value\r\n     * */\r\n    private confirmSelected$ = new Subject<any>();\r\n\r\n    get confirmSelectedStream(): Observable<any> {\r\n        return this.confirmSelected$.asObservable();\r\n    }\r\n\r\n    private pickerOpened$ = new Subject<any>();\r\n\r\n    get pickerOpenedStream(): Observable<any> {\r\n        return this.pickerOpened$.asObservable();\r\n    }\r\n\r\n    /**\r\n     * The current picker moment. This determines which time period is shown and which date is\r\n     * highlighted when using keyboard navigation.\r\n     */\r\n    private _clamPickerMoment: T;\r\n\r\n    get pickerMoment() {\r\n        return this._clamPickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        if (value) {\r\n            this._clamPickerMoment = this.dateTimeAdapter.clampDate(value, this.picker.minDateTime, this.picker.maxDateTime);\r\n        }\r\n        this.cdRef.markForCheck();\r\n    }\r\n\r\n    get pickerType(): PickerType {\r\n        return this.picker.pickerType;\r\n    }\r\n\r\n    get cancelLabel(): string {\r\n        return this.pickerIntl.cancelBtnLabel;\r\n    }\r\n\r\n    get setLabel(): string {\r\n        return this.pickerIntl.setBtnLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'from' label\r\n     * */\r\n    get fromLabel(): string {\r\n        return this.pickerIntl.rangeFromLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'to' label\r\n     * */\r\n    get toLabel(): string {\r\n        return this.pickerIntl.rangeToLabel;\r\n    }\r\n\r\n    /**\r\n     * The range 'from' formatted value\r\n     * */\r\n    get fromFormattedValue(): string {\r\n        const value = this.picker.selecteds[0];\r\n        return value ? this.dateTimeAdapter.format(value, this.picker.formatString) : '';\r\n    }\r\n\r\n    /**\r\n     * The range 'to' formatted value\r\n     * */\r\n    get toFormattedValue(): string {\r\n        const value = this.picker.selecteds[1];\r\n        return value ? this.dateTimeAdapter.format(value, this.picker.formatString) : '';\r\n    }\r\n\r\n    /**\r\n     * Cases in which the control buttons show in the picker\r\n     * 1) picker mode is 'dialog'\r\n     * 2) picker type is NOT 'calendar' and the picker mode is NOT 'inline'\r\n     * */\r\n    get showControlButtons(): boolean {\r\n        return this.picker.pickerMode === 'dialog' ||\r\n            (this.picker.pickerType !== 'calendar' && this.picker.pickerMode !== 'inline');\r\n    }\r\n\r\n    get containerElm(): HTMLElement {\r\n        return this.elmRef.nativeElement;\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-container')\r\n    get owlDTContainerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-popup-container')\r\n    get owlDTPopupContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'popup';\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-dialog-container')\r\n    get owlDTDialogContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'dialog';\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-inline-container')\r\n    get owlDTInlineContainerClass(): boolean {\r\n        return this.picker.pickerMode === 'inline';\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-container-disabled')\r\n    get owlDTContainerDisabledClass(): boolean {\r\n        return this.picker.disabled;\r\n    }\r\n\r\n    @HostBinding('attr.id')\r\n    get owlDTContainerId(): string {\r\n        return this.picker.id;\r\n    }\r\n\r\n    @HostBinding('@transformPicker')\r\n    get owlDTContainerAnimation(): any {\r\n        return this.picker.pickerMode === 'inline' ? '' : 'enter';\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                 private elmRef: ElementRef,\r\n                 private pickerIntl: OwlDateTimeIntl,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.initPicker();\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.focusPicker();\r\n    }\r\n\r\n    @HostListener('@transformPicker.done', ['$event'])\r\n    public handleContainerAnimationDone( event: AnimationEvent ): void {\r\n        const toState = event.toState;\r\n        if (toState === 'enter') {\r\n            this.pickerOpened$.next();\r\n        }\r\n    }\r\n\r\n    public dateSelected( date: T ): void {\r\n        let result;\r\n\r\n        if (this.picker.isInSingleMode) {\r\n            result = this.dateSelectedInSingleMode(date);\r\n            if (result) {\r\n                this.pickerMoment = result;\r\n                this.picker.select(result);\r\n            } else {\r\n\r\n                // we close the picker when result is null and pickerType is calendar.\r\n                if (this.pickerType === 'calendar') {\r\n                    this.hidePicker$.next(null);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInRangeMode) {\r\n            result = this.dateSelectedInRangeMode(date);\r\n            if (result) {\r\n                this.pickerMoment = result[this.activeSelectedIndex];\r\n                this.picker.select(result);\r\n            }\r\n        }\r\n    }\r\n\r\n    public timeSelected( time: T ): void {\r\n\r\n        this.pickerMoment = this.dateTimeAdapter.clone(time);\r\n\r\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInSingleMode) {\r\n            this.picker.select(this.pickerMoment);\r\n            return;\r\n        }\r\n\r\n        if (this.picker.isInRangeMode) {\r\n            const selecteds = [...this.picker.selecteds];\r\n\r\n            // check if the 'from' is after 'to' or 'to'is before 'from'\r\n            // In this case, we set both the 'from' and 'to' the same value\r\n            if ((this.activeSelectedIndex === 0 && selecteds[1] && this.dateTimeAdapter.compare(this.pickerMoment, selecteds[1]) === 1) ||\r\n                (this.activeSelectedIndex === 1 && selecteds[0] && this.dateTimeAdapter.compare(this.pickerMoment, selecteds[0]) === -1)) {\r\n                selecteds[0] = this.pickerMoment;\r\n                selecteds[1] = this.pickerMoment;\r\n            } else {\r\n                selecteds[this.activeSelectedIndex] = this.pickerMoment;\r\n            }\r\n\r\n            this.picker.select(selecteds);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle click on cancel button\r\n     * @param {any} event\r\n     * @return {void}\r\n     * */\r\n    public onCancelClicked( event: any ): void {\r\n        this.hidePicker$.next(null);\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Handle click on set button\r\n     * @param {any} event\r\n     * @return {void}\r\n     * */\r\n    public onSetClicked( event: any ): void {\r\n\r\n        if (!this.picker.dateTimeChecker(this.pickerMoment)) {\r\n            this.hidePicker$.next(null);\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n\r\n        this.confirmSelected$.next(event);\r\n        event.preventDefault();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Handle click on inform radio group\r\n     * @param {any} event\r\n     * @param {number} index -- the radio's index number\r\n     * */\r\n    public handleClickOnInfoGroup( event: any, index: number ): void {\r\n        this.setActiveSelectedIndex(index);\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * Handle click on inform radio group\r\n     * @param {any} event\r\n     * @param {any} next -- the radio's sibling\r\n     * @param {number} index -- the radio's index number\r\n     * */\r\n    public handleKeydownOnInfoGroup( event: any, next: any, index: number ): void {\r\n        switch (event.keyCode) {\r\n            case DOWN_ARROW:\r\n            case RIGHT_ARROW:\r\n            case UP_ARROW:\r\n            case LEFT_ARROW:\r\n                next.focus();\r\n                this.setActiveSelectedIndex(index === 0 ? 1 : 0);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n\r\n            case SPACE:\r\n                this.setActiveSelectedIndex(index);\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the value of activeSelectedIndex\r\n     * @param {number} index\r\n     * */\r\n    private setActiveSelectedIndex( index: number ): void {\r\n        if (this.picker.selectMode === 'range' &&\r\n            this.activeSelectedIndex !== index) {\r\n            this.activeSelectedIndex = index;\r\n\r\n            const selected = this.picker.selecteds[this.activeSelectedIndex];\r\n            if (this.picker.selecteds && selected) {\r\n                this.pickerMoment = this.dateTimeAdapter.clone(selected);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    private initPicker(): void {\r\n        this.pickerMoment = this.picker.startAt || this.dateTimeAdapter.now();\r\n        this.activeSelectedIndex = this.picker.selectMode === 'rangeTo' ? 1 : 0;\r\n    }\r\n\r\n    /**\r\n     * Select calendar date in single mode,\r\n     * it returns null when date is not selected.\r\n     * @param {Date} date\r\n     * @return {Date | null}\r\n     * */\r\n    private dateSelectedInSingleMode( date: T ): T | null {\r\n\r\n        if (this.dateTimeAdapter.isSameDay(date, this.picker.selected)) {\r\n            return null;\r\n        }\r\n\r\n        return this.updateAndCheckCalendarDate(date);\r\n    }\r\n\r\n    /**\r\n     * Select dates in range Mode\r\n     * @param {Date} date\r\n     * @return {Date[] | null}\r\n     * */\r\n    private dateSelectedInRangeMode( date: T ): T[] | null {\r\n        let from = this.picker.selecteds[0];\r\n        let to = this.picker.selecteds[1];\r\n\r\n        const result = this.updateAndCheckCalendarDate(date);\r\n\r\n        if (!result) {\r\n            return null;\r\n        }\r\n\r\n        // if the given calendar day is after or equal to 'from',\r\n        // set ths given date as 'to'\r\n        // otherwise, set it as 'from' and set 'to' to null\r\n        if (this.picker.selectMode === 'range') {\r\n            if (this.picker.selecteds && this.picker.selecteds.length && !to && from &&\r\n                this.dateTimeAdapter.differenceInCalendarDays(result, from) >= 0) {\r\n                to = result;\r\n                this.activeSelectedIndex = 1;\r\n            } else {\r\n                from = result;\r\n                to = null;\r\n                this.activeSelectedIndex = 0;\r\n            }\r\n        } else if (this.picker.selectMode === 'rangeFrom') {\r\n            from = result;\r\n\r\n            // if the from value is after the to value, set the to value as null\r\n            if (to && this.dateTimeAdapter.compare(from, to) > 0) {\r\n                to = null;\r\n            }\r\n\r\n        } else if (this.picker.selectMode === 'rangeTo') {\r\n            to = result;\r\n\r\n            // if the from value is after the to value, set the from value as null\r\n            if (from && this.dateTimeAdapter.compare(from, to) > 0) {\r\n                from = null;\r\n            }\r\n        }\r\n\r\n        return [from, to];\r\n    }\r\n\r\n    /**\r\n     * Update the given calendar date's time and check if it is valid\r\n     * Because the calendar date has 00:00:00 as default time, if the picker type is 'both',\r\n     * we need to update the given calendar date's time before selecting it.\r\n     * if it is valid, return the updated dateTime\r\n     * if it is not valid, return null\r\n     * @param {Date} date\r\n     * @return {Date}\r\n     * */\r\n    private updateAndCheckCalendarDate( date: T ): T {\r\n        let result;\r\n\r\n        // if the picker is 'both', update the calendar date's time value\r\n        if (this.picker.pickerType === 'both') {\r\n            result = this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(date),\r\n                this.dateTimeAdapter.getMonth(date),\r\n                this.dateTimeAdapter.getDate(date),\r\n                this.dateTimeAdapter.getHours(this.pickerMoment),\r\n                this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n                this.dateTimeAdapter.getSeconds(this.pickerMoment),\r\n            );\r\n            result = this.dateTimeAdapter.clampDate(result, this.picker.minDateTime, this.picker.maxDateTime);\r\n        } else {\r\n            result = this.dateTimeAdapter.clone(date);\r\n        }\r\n\r\n        // check the updated dateTime\r\n        return this.picker.dateTimeChecker(result) ? result : null;\r\n    }\r\n\r\n    /**\r\n     * Focus to the picker\r\n     * */\r\n    private focusPicker(): void {\r\n\r\n        if (this.picker.pickerMode === 'inline') {\r\n            return;\r\n        }\r\n\r\n        if (this.calendar) {\r\n            this.calendar.focusActiveCell();\r\n        } else if (this.timer) {\r\n            this.timer.focus();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * date-time.class\r\n */\r\nimport { EventEmitter, Inject, Input, Optional, Directive } from '@angular/core';\r\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\n\r\nlet nextUniqueId = 0;\r\n\r\nexport type PickerType = 'both' | 'calendar' | 'timer';\r\n\r\nexport type PickerMode = 'popup' | 'dialog' | 'inline';\r\n\r\nexport type SelectMode = 'single' | 'range' | 'rangeFrom' | 'rangeTo';\r\n\r\n@Directive()\r\nexport abstract class OwlDateTime<T> {\r\n\r\n    /**\r\n     * Whether to show the second's timer\r\n     * @default false\r\n     * @type {Boolean}\r\n     * */\r\n    private _showSecondsTimer = false;\r\n    @Input()\r\n    get showSecondsTimer(): boolean {\r\n        return this._showSecondsTimer;\r\n    }\r\n\r\n    set showSecondsTimer( val: boolean ) {\r\n        this._showSecondsTimer = coerceBooleanProperty(val);\r\n    }\r\n\r\n    /**\r\n     * Whether the timer is in hour12 format\r\n     * @default false\r\n     * @type {boolean}\r\n     * */\r\n    private _hour12Timer = false;\r\n    @Input()\r\n    get hour12Timer(): boolean {\r\n        return this._hour12Timer;\r\n    }\r\n\r\n    set hour12Timer( val: boolean ) {\r\n        this._hour12Timer = coerceBooleanProperty(val);\r\n    }\r\n\r\n    /**\r\n     * The view that the calendar should start in.\r\n     * @default {'month'}\r\n     * @type {'month' | 'year' | 'multi-years'}\r\n     * */\r\n    @Input() startView: 'month' | 'year' | 'multi-years' = 'month';\r\n\r\n    /**\r\n     * Hours to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    private _stepHour = 1;\r\n    @Input()\r\n    get stepHour(): number {\r\n        return this._stepHour;\r\n    }\r\n\r\n    set stepHour( val: number ) {\r\n        this._stepHour = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Minutes to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    private _stepMinute = 1;\r\n    @Input()\r\n    get stepMinute(): number {\r\n        return this._stepMinute;\r\n    }\r\n\r\n    set stepMinute( val: number ) {\r\n        this._stepMinute = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Seconds to change per step\r\n     * @default {1}\r\n     * @type {number}\r\n     * */\r\n    private _stepSecond = 1;\r\n    @Input()\r\n    get stepSecond(): number {\r\n        return this._stepSecond;\r\n    }\r\n\r\n    set stepSecond( val: number ) {\r\n        this._stepSecond = coerceNumberProperty(val, 1);\r\n    }\r\n\r\n    /**\r\n     * Set the first day of week\r\n     * @default {0} -- 0: Sunday ~ 6: Saturday\r\n     * @type {number}\r\n     * */\r\n    private _firstDayOfWeek = 0;\r\n    @Input()\r\n    get firstDayOfWeek() {\r\n        return this._firstDayOfWeek;\r\n    }\r\n\r\n    set firstDayOfWeek( value: number ) {\r\n        value = coerceNumberProperty(value, 0);\r\n        if (value > 6 || value < 0) {\r\n            this._firstDayOfWeek = 0;\r\n        } else {\r\n            this._firstDayOfWeek = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * @default {false}\r\n     * @type {boolean}\r\n     * */\r\n    private _hideOtherMonths = false;\r\n    @Input()\r\n    get hideOtherMonths(): boolean {\r\n        return this._hideOtherMonths;\r\n    }\r\n\r\n    set hideOtherMonths(val: boolean) {\r\n        this._hideOtherMonths = coerceBooleanProperty(val);\r\n    }\r\n\r\n    private _id: string;\r\n    get id(): string {\r\n        return this._id;\r\n    }\r\n\r\n    abstract get selected(): T | null;\r\n\r\n    abstract get selecteds(): T[] | null;\r\n\r\n    abstract get dateTimeFilter(): ( date: T | null ) => boolean;\r\n\r\n    abstract get maxDateTime(): T | null;\r\n\r\n    abstract get minDateTime(): T | null;\r\n\r\n    abstract get selectMode(): SelectMode;\r\n\r\n    abstract get startAt(): T | null;\r\n\r\n    abstract get opened(): boolean;\r\n\r\n    abstract get pickerMode(): PickerMode;\r\n\r\n    abstract get pickerType(): PickerType;\r\n\r\n    abstract get isInSingleMode(): boolean;\r\n\r\n    abstract get isInRangeMode(): boolean;\r\n\r\n    abstract select( date: T | T[] ): void;\r\n\r\n    abstract yearSelected: EventEmitter<T>;\r\n\r\n    abstract monthSelected: EventEmitter<T>;\r\n\r\n    abstract selectYear( normalizedYear: T ): void;\r\n\r\n    abstract selectMonth( normalizedMonth: T ): void;\r\n\r\n    get formatString(): string {\r\n        return this.pickerType === 'both' ? this.dateTimeFormats.fullPickerInput :\r\n            this.pickerType === 'calendar' ? this.dateTimeFormats.datePickerInput :\r\n                this.dateTimeFormats.timePickerInput;\r\n    }\r\n\r\n    /**\r\n     * Date Time Checker to check if the give dateTime is selectable\r\n     * @type {Function}\r\n     * */\r\n    public dateTimeChecker = ( dateTime: T ) => {\r\n        return !!dateTime &&\r\n            (!this.dateTimeFilter || this.dateTimeFilter(dateTime)) &&\r\n            (!this.minDateTime || this.dateTimeAdapter.compare(dateTime, this.minDateTime) >= 0) &&\r\n            (!this.maxDateTime || this.dateTimeAdapter.compare(dateTime, this.maxDateTime) <= 0);\r\n    }\r\n\r\n    get disabled(): boolean {\r\n        return false;\r\n    }\r\n\r\n    constructor( @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) protected dateTimeFormats: OwlDateTimeFormats ) {\r\n        if (!this.dateTimeAdapter) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following ` +\r\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                `custom implementation.`);\r\n        }\r\n\r\n        if (!this.dateTimeFormats) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\r\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                `custom implementation.`);\r\n        }\r\n\r\n        this._id = `owl-dt-picker-${nextUniqueId++}`;\r\n    }\r\n\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    protected getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n}\r\n\r\n","/**\r\n * dialog-config.class\r\n */\r\nimport { ViewContainerRef } from '@angular/core';\r\nimport { NoopScrollStrategy, ScrollStrategy } from '@angular/cdk/overlay';\r\n\r\nlet uniqueId = 0;\r\n\r\n/** Possible overrides for a dialog's position. */\r\nexport interface DialogPosition {\r\n    /** Override for the dialog's top position. */\r\n    top?: string;\r\n\r\n    /** Override for the dialog's bottom position. */\r\n    bottom?: string;\r\n\r\n    /** Override for the dialog's left position. */\r\n    left?: string;\r\n\r\n    /** Override for the dialog's right position. */\r\n    right?: string;\r\n}\r\n\r\nexport class OwlDialogConfig {\r\n\r\n    /**\r\n     * ID of the element that describes the dialog.\r\n     * @type {string}\r\n     * @default {null}\r\n     * */\r\n    public ariaDescribedBy?: string | null = null;\r\n\r\n    /**\r\n     * Whether to focus the dialog when the dialog is opened\r\n     * @type {boolean}\r\n     * @default {true}\r\n     * */\r\n    public autoFocus? = true;\r\n\r\n    /** Whether the dialog has a backdrop. */\r\n    public hasBackdrop? = true;\r\n\r\n    /**\r\n     * Custom style for the backdrop\r\n     * */\r\n    public backdropStyle?: any;\r\n\r\n    /** Data being injected into the child component. */\r\n    public data?: any = null;\r\n\r\n    /** Whether the user can use escape or clicking outside to close a modal. */\r\n    public disableClose? = false;\r\n\r\n    /**\r\n     * ID for the modal. If omitted, a unique one will be generated.\r\n     * @type {string}\r\n     * */\r\n    public id?: string;\r\n\r\n    /**\r\n     * The ARIA role of the dialog element.\r\n     * @type {'dialog' | 'alertdialog'}\r\n     * @default {'dialog'}\r\n     * */\r\n    public role?: 'dialog' | 'alertdialog' = 'dialog';\r\n\r\n    /**\r\n     * Custom class for the pane\r\n     * */\r\n    public paneClass?: string | string[] = '';\r\n\r\n    /**\r\n     * Mouse Event\r\n     * */\r\n    public event?: MouseEvent = null;\r\n\r\n\r\n    /**\r\n     * Custom class for the backdrop\r\n     * */\r\n    public backdropClass?: string | string[] = '';\r\n\r\n\r\n    /**\r\n     * Whether the dialog should close when the user goes backwards/forwards in history.\r\n     * */\r\n    public closeOnNavigation?: boolean = true;\r\n\r\n    /** Width of the dialog. */\r\n    public width?: string = '';\r\n\r\n    /** Height of the dialog. */\r\n    public height?: string = '';\r\n\r\n    /**\r\n     * The min-width of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public minWidth?: number | string;\r\n\r\n    /**\r\n     * The min-height of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public minHeight?: number | string;\r\n\r\n    /**\r\n     * The max-width of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public maxWidth?: number | string = '85vw';\r\n\r\n    /**\r\n     * The max-height of the overlay panel.\r\n     * If a number is provided, pixel units are assumed.\r\n     * */\r\n    public maxHeight?: number | string;\r\n\r\n\r\n    /** Position overrides. */\r\n    public position?: DialogPosition;\r\n\r\n    /**\r\n     * The scroll strategy when the dialog is open\r\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\r\n     * */\r\n    public scrollStrategy?: ScrollStrategy = new NoopScrollStrategy();\r\n\r\n\r\n    public viewContainerRef?: ViewContainerRef;\r\n\r\n    constructor() {\r\n        this.id = `owl-dialog-${uniqueId++}`;\r\n    }\r\n}\r\n","/**\r\n * dialog-ref.class\r\n */\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { Location } from '@angular/common';\r\nimport { GlobalPositionStrategy, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\nimport { DialogPosition } from './dialog-config.class';\r\nimport { Observable, Subject, Subscription, SubscriptionLike as ISubscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\nexport class OwlDialogRef<T> {\r\n\r\n    private result: any;\r\n\r\n    private _beforeClose$ = new Subject<any>();\r\n\r\n    private _afterOpen$ = new Subject<any>();\r\n\r\n    private _afterClosed$ = new Subject<any>();\r\n\r\n    /** Subscription to changes in the user's location. */\r\n    private locationChanged: ISubscription = Subscription.EMPTY;\r\n\r\n    /**\r\n     * The instance of component opened into modal\r\n     * */\r\n    public componentInstance: T;\r\n\r\n    /** Whether the user is allowed to close the dialog. */\r\n    public disableClose = this.container.config.disableClose;\r\n\r\n    constructor( private overlayRef: OverlayRef,\r\n                 private container: OwlDialogContainerComponent,\r\n                 public readonly id: string,\r\n                 location?: Location ) {\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'enter'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this._afterOpen$.next();\r\n                this._afterOpen$.complete();\r\n            });\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'done' && event.toState === 'exit'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this.overlayRef.dispose();\r\n                this.locationChanged.unsubscribe();\r\n                this._afterClosed$.next(this.result);\r\n                this._afterClosed$.complete();\r\n                this.componentInstance = null!;\r\n            });\r\n\r\n        this.overlayRef.keydownEvents()\r\n            .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\r\n            .subscribe(() => this.close());\r\n\r\n        if (location) {\r\n            this.locationChanged = location.subscribe(() => {\r\n                if (this.container.config.closeOnNavigation) {\r\n                    this.close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public close( dialogResult?: any ) {\r\n        this.result = dialogResult;\r\n\r\n        this.container.animationStateChanged\r\n            .pipe(\r\n                filter(( event: AnimationEvent ) => event.phaseName === 'start'),\r\n                take(1)\r\n            )\r\n            .subscribe(() => {\r\n                this._beforeClose$.next(dialogResult);\r\n                this._beforeClose$.complete();\r\n                this.overlayRef.detachBackdrop();\r\n            });\r\n\r\n        this.container.startExitAnimation();\r\n    }\r\n\r\n    /**\r\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\r\n     */\r\n    public backdropClick(): Observable<any> {\r\n        return this.overlayRef.backdropClick();\r\n    }\r\n\r\n    /**\r\n     * Gets an observable that emits when keydown events are targeted on the overlay.\r\n     */\r\n    public keydownEvents(): Observable<KeyboardEvent> {\r\n        return this.overlayRef.keydownEvents();\r\n    }\r\n\r\n    /**\r\n     * Updates the dialog's position.\r\n     * @param position New dialog position.\r\n     */\r\n    public updatePosition( position?: DialogPosition ): this {\r\n        let strategy = this.getPositionStrategy();\r\n\r\n        if (position && (position.left || position.right)) {\r\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\r\n        } else {\r\n            strategy.centerHorizontally();\r\n        }\r\n\r\n        if (position && (position.top || position.bottom)) {\r\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\r\n        } else {\r\n            strategy.centerVertically();\r\n        }\r\n\r\n        this.overlayRef.updatePosition();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Updates the dialog's width and height.\r\n     * @param width New width of the dialog.\r\n     * @param height New height of the dialog.\r\n     */\r\n    updateSize( width: string = 'auto', height: string = 'auto' ): this {\r\n        this.getPositionStrategy().width(width).height(height);\r\n        this.overlayRef.updatePosition();\r\n        return this;\r\n    }\r\n\r\n    public isAnimating(): boolean {\r\n        return this.container.isAnimating;\r\n    }\r\n\r\n    public afterOpen(): Observable<any> {\r\n        return this._afterOpen$.asObservable();\r\n    }\r\n\r\n    public beforeClose(): Observable<any> {\r\n        return this._beforeClose$.asObservable();\r\n    }\r\n\r\n    public afterClosed(): Observable<any> {\r\n        return this._afterClosed$.asObservable();\r\n    }\r\n\r\n    /** Fetches the position strategy object from the overlay ref. */\r\n    private getPositionStrategy(): GlobalPositionStrategy {\r\n        return this.overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\r\n    }\r\n}\r\n","/**\r\n * dialog-container.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentRef,\r\n    ElementRef,\r\n    EmbeddedViewRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    HostListener,\r\n    Inject,\r\n    OnInit,\r\n    Optional,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { animate, animateChild, AnimationEvent, keyframes, style, transition, trigger } from '@angular/animations';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\r\nimport { OwlDialogConfig } from './dialog-config.class';\r\n\r\nconst zoomFadeIn = {opacity: 0, transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})'};\r\nconst zoomFadeInFrom = {\r\n    opacity: 0,\r\n    transform: 'translateX({{ x }}) translateY({{ y }}) scale({{scale}})',\r\n    transformOrigin: '{{ ox }} {{ oy }}'\r\n};\r\n\r\n@Component({\r\n    selector: 'owl-dialog-container',\r\n    templateUrl: './dialog-container.component.html',\r\n    animations: [\r\n        trigger('slideModal', [\r\n            transition('void => enter', [\r\n                style(zoomFadeInFrom),\r\n                animate('300ms cubic-bezier(0.35, 0, 0.25, 1)', style('*')),\r\n                animate('150ms', keyframes([\r\n                    style({transform: 'scale(1)', offset: 0}),\r\n                    style({transform: 'scale(1.05)', offset: 0.3}),\r\n                    style({transform: 'scale(.95)', offset: 0.8}),\r\n                    style({transform: 'scale(1)', offset: 1.0})\r\n                ])),\r\n                animateChild()\r\n            ], {params: {x: '0px', y: '0px', ox: '50%', oy: '50%', scale: 1}}),\r\n            transition('enter => exit', [\r\n                animateChild(),\r\n                animate(200, style(zoomFadeIn))\r\n            ], {params: {x: '0px', y: '0px', ox: '50%', oy: '50%'}})\r\n        ])\r\n    ]\r\n})\r\n\r\nexport class OwlDialogContainerComponent extends BasePortalOutlet implements OnInit {\r\n\r\n    @ViewChild(CdkPortalOutlet, { static: true }) portalOutlet: CdkPortalOutlet;\r\n\r\n    /** The class that traps and manages focus within the dialog. */\r\n    private focusTrap: FocusTrap;\r\n\r\n    /** ID of the element that should be considered as the dialog's label. */\r\n    public ariaLabelledBy: string | null = null;\r\n\r\n    /** Emits when an animation state changes. */\r\n    public animationStateChanged = new EventEmitter<AnimationEvent>();\r\n\r\n    public isAnimating = false;\r\n\r\n    private _config: OwlDialogConfig;\r\n    get config(): OwlDialogConfig {\r\n        return this._config\r\n    }\r\n\r\n    private state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n    // for animation purpose\r\n    private params: any = {\r\n        x: '0px',\r\n        y: '0px',\r\n        ox: '50%',\r\n        oy: '50%',\r\n        scale: 0\r\n    };\r\n\r\n    // A variable to hold the focused element before the dialog was open.\r\n    // This would help us to refocus back to element when the dialog was closed.\r\n    private elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\r\n\r\n    @HostBinding('class.owl-dialog-container')\r\n    get owlDialogContainerClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @HostBinding('attr.tabindex')\r\n    get owlDialogContainerTabIndex(): number {\r\n        return -1;\r\n    }\r\n\r\n    @HostBinding('attr.id')\r\n    get owlDialogContainerId(): string {\r\n        return this._config.id;\r\n    }\r\n\r\n    @HostBinding('attr.role')\r\n    get owlDialogContainerRole(): string {\r\n        return this._config.role || null;\r\n    }\r\n\r\n    @HostBinding('attr.aria-labelledby')\r\n    get owlDialogContainerAriaLabelledby(): string {\r\n        return this.ariaLabelledBy;\r\n    }\r\n\r\n    @HostBinding('attr.aria-describedby')\r\n    get owlDialogContainerAriaDescribedby(): string {\r\n        return this._config.ariaDescribedBy || null;\r\n    }\r\n\r\n    @HostBinding('@slideModal')\r\n    get owlDialogContainerAnimation(): any {\r\n        return {value: this.state, params: this.params};\r\n    }\r\n\r\n    constructor( private changeDetector: ChangeDetectorRef,\r\n                 private elementRef: ElementRef,\r\n                 private focusTrapFactory: FocusTrapFactory,\r\n                 @Optional() @Inject(DOCUMENT) private document: any ) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    /**\r\n     * Attach a ComponentPortal as content to this dialog container.\r\n     * @param portal Portal to be attached as the dialog content.\r\n     */\r\n    public attachComponentPortal<T>( portal: ComponentPortal<T> ): ComponentRef<T> {\r\n        if (this.portalOutlet.hasAttached()) {\r\n            throw Error('Attempting to attach dialog content after content is already attached');\r\n        }\r\n\r\n        this.savePreviouslyFocusedElement();\r\n        return this.portalOutlet.attachComponentPortal(portal);\r\n    }\r\n\r\n    public attachTemplatePortal<C>( portal: TemplatePortal<C> ): EmbeddedViewRef<C> {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    public setConfig( config: OwlDialogConfig ): void {\r\n        this._config = config;\r\n\r\n        if (config.event) {\r\n            this.calculateZoomOrigin(event);\r\n        }\r\n    }\r\n\r\n    @HostListener('@slideModal.start', ['$event'])\r\n    public onAnimationStart( event: AnimationEvent ): void {\r\n        this.isAnimating = true;\r\n        this.animationStateChanged.emit(event);\r\n    }\r\n\r\n    @HostListener('@slideModal.done', ['$event'])\r\n    public onAnimationDone( event: AnimationEvent ): void {\r\n        if (event.toState === 'enter') {\r\n            this.trapFocus();\r\n        } else if (event.toState === 'exit') {\r\n            this.restoreFocus();\r\n        }\r\n\r\n        this.animationStateChanged.emit(event);\r\n        this.isAnimating = false;\r\n    }\r\n\r\n    public startExitAnimation() {\r\n        this.state = 'exit';\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /**\r\n     * Calculate origin used in the `zoomFadeInFrom()`\r\n     * for animation purpose\r\n     * @param {any} event\r\n     * @return {void}\r\n     */\r\n    private calculateZoomOrigin( event: any ): void {\r\n\r\n        if (!event) {\r\n            return;\r\n        }\r\n\r\n        const clientX = event.clientX;\r\n        const clientY = event.clientY;\r\n\r\n        const wh = window.innerWidth / 2;\r\n        const hh = window.innerHeight / 2;\r\n        const x = clientX - wh;\r\n        const y = clientY - hh;\r\n        const ox = clientX / window.innerWidth;\r\n        const oy = clientY / window.innerHeight;\r\n\r\n        this.params.x = `${x}px`;\r\n        this.params.y = `${y}px`;\r\n        this.params.ox = `${ox * 100}%`;\r\n        this.params.oy = `${oy * 100}%`;\r\n        this.params.scale = 0;\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Save the focused element before dialog was open\r\n     * @return {void}\r\n     * */\r\n    private savePreviouslyFocusedElement(): void {\r\n        if (this.document) {\r\n            this.elementFocusedBeforeDialogWasOpened = this.document.activeElement as HTMLElement;\r\n\r\n            Promise.resolve().then(() => this.elementRef.nativeElement.focus());\r\n        }\r\n    }\r\n\r\n    private trapFocus(): void {\r\n        if (!this.focusTrap) {\r\n            this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\r\n        }\r\n\r\n        if (this._config.autoFocus) {\r\n            this.focusTrap.focusInitialElementWhenReady();\r\n        }\r\n    }\r\n\r\n    private restoreFocus(): void {\r\n        const toFocus = this.elementFocusedBeforeDialogWasOpened;\r\n\r\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n        if (toFocus && typeof toFocus.focus === 'function') {\r\n            toFocus.focus();\r\n        }\r\n\r\n        if (this.focusTrap) {\r\n            this.focusTrap.destroy();\r\n        }\r\n    }\r\n}\r\n","/**\r\n * object.utils\r\n */\r\n\r\n\r\n/**\r\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\r\n * similar to Object.assign.\r\n *\r\n * @param dest The object which will have properties copied to it.\r\n * @param sources The source objects from which properties will be copied.\r\n */\r\nexport function extendObject(dest: any, ...sources: any[]): any {\r\n    if (dest == null) {\r\n        throw TypeError('Cannot convert undefined or null to object');\r\n    }\r\n\r\n    for (const source of sources) {\r\n        if (source != null) {\r\n            for (const key in source) {\r\n                if (source.hasOwnProperty(key)) {\r\n                    dest[key] = source[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n","/**\r\n * index\r\n */\r\n\r\nexport * from './object.utils';\r\n","/**\r\n * dialog.service\r\n */\r\n\r\nimport {\r\n    ComponentRef,\r\n    Inject,\r\n    Injectable,\r\n    InjectionToken,\r\n    Injector,\r\n    Optional,\r\n    SkipSelf,\r\n    TemplateRef\r\n} from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { OwlDialogConfig } from './dialog-config.class';\r\nimport { OwlDialogRef } from './dialog-ref.class';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\nimport { extendObject } from '../utils';\r\nimport { defer, Observable, Subject } from 'rxjs';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { Overlay, OverlayConfig, OverlayContainer, OverlayRef, ScrollStrategy } from '@angular/cdk/overlay';\r\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\r\n\r\nexport const OWL_DIALOG_DATA = new InjectionToken<any>('OwlDialogData');\r\n\r\nexport type DialogScrollStrategyType = () => ScrollStrategy;\r\n/**\r\n * Injection token that determines the scroll handling while the dialog is open.\r\n * */\r\nexport const OWL_DIALOG_SCROLL_STRATEGY =\r\n    new InjectionToken<DialogScrollStrategyType>('owl-dialog-scroll-strategy');\r\n\r\nexport function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY( overlay: Overlay ): DialogScrollStrategyType {\r\n    return () => overlay.scrollStrategies.block();\r\n}\r\n\r\n/** @docs-private */\r\nexport const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER = {\r\n    provide: OWL_DIALOG_SCROLL_STRATEGY,\r\n    deps: [Overlay],\r\n    useFactory: OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n/** I\r\n * njection token that can be used to specify default dialog options.\r\n * */\r\nexport const OWL_DIALOG_DEFAULT_OPTIONS =\r\n    new InjectionToken<OwlDialogConfig>('owl-dialog-default-options');\r\n\r\n/** @dynamic */\r\n@Injectable()\r\nexport class OwlDialogService {\r\n\r\n    private ariaHiddenElements = new Map<Element, string | null>();\r\n\r\n    private _openDialogsAtThisLevel: OwlDialogRef<any>[] = [];\r\n    private _afterOpenAtThisLevel = new Subject<OwlDialogRef<any>>();\r\n    private _afterAllClosedAtThisLevel = new Subject<void>();\r\n\r\n    /** Keeps track of the currently-open dialogs. */\r\n    get openDialogs(): OwlDialogRef<any>[] {\r\n        return this.parentDialog ? this.parentDialog.openDialogs : this._openDialogsAtThisLevel;\r\n    }\r\n\r\n    /** Stream that emits when a dialog has been opened. */\r\n    get afterOpen(): Subject<OwlDialogRef<any>> {\r\n        return this.parentDialog ? this.parentDialog.afterOpen : this._afterOpenAtThisLevel;\r\n    }\r\n\r\n    get _afterAllClosed(): any {\r\n        const parent = this.parentDialog;\r\n        return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\r\n    }\r\n\r\n    /**\r\n     * Stream that emits when all open dialog have finished closing.\r\n     * Will emit on subscribe if there are no open dialogs to begin with.\r\n     */\r\n    afterAllClosed: Observable<any> = defer<any>(() => this._openDialogsAtThisLevel.length ?\r\n        this._afterAllClosed :\r\n        this._afterAllClosed.pipe(startWith(undefined)));\r\n\r\n    constructor( private overlay: Overlay,\r\n                 private injector: Injector,\r\n                 @Optional() private location: Location,\r\n                 @Inject(OWL_DIALOG_SCROLL_STRATEGY) private scrollStrategy: DialogScrollStrategyType,\r\n                 @Optional() @Inject(OWL_DIALOG_DEFAULT_OPTIONS) private defaultOptions: OwlDialogConfig,\r\n                 @Optional() @SkipSelf() private parentDialog: OwlDialogService,\r\n                 private overlayContainer: OverlayContainer ) {\r\n        if (!parentDialog && location) {\r\n            location.subscribe(() => this.closeAll());\r\n        }\r\n    }\r\n\r\n    public open<T>( componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n                    config?: OwlDialogConfig ): OwlDialogRef<any> {\r\n\r\n        config = applyConfigDefaults(config, this.defaultOptions);\r\n\r\n        if (config.id && this.getDialogById(config.id)) {\r\n            throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\r\n        }\r\n\r\n        const overlayRef = this.createOverlay(config);\r\n        const dialogContainer = this.attachDialogContainer(overlayRef, config);\r\n        const dialogRef = this.attachDialogContent<T>(componentOrTemplateRef, dialogContainer, overlayRef, config);\r\n\r\n\r\n        if (!this.openDialogs.length) {\r\n            this.hideNonDialogContentFromAssistiveTechnology();\r\n        }\r\n\r\n        this.openDialogs.push(dialogRef);\r\n        dialogRef.afterClosed().subscribe(() => this.removeOpenDialog(dialogRef));\r\n        this.afterOpen.next(dialogRef);\r\n        return dialogRef;\r\n    }\r\n\r\n    /**\r\n     * Closes all of the currently-open dialogs.\r\n     */\r\n    public closeAll(): void {\r\n        let i = this.openDialogs.length;\r\n\r\n        while (i--) {\r\n            this.openDialogs[i].close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Finds an open dialog by its id.\r\n     * @param id ID to use when looking up the dialog.\r\n     */\r\n    public getDialogById( id: string ): OwlDialogRef<any> | undefined {\r\n        return this.openDialogs.find(dialog => dialog.id === id);\r\n    }\r\n\r\n    private attachDialogContent<T>( componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n                                    dialogContainer: OwlDialogContainerComponent,\r\n                                    overlayRef: OverlayRef,\r\n                                    config: OwlDialogConfig ) {\r\n        const dialogRef = new OwlDialogRef<T>(overlayRef, dialogContainer, config.id, this.location);\r\n\r\n\r\n        if (config.hasBackdrop) {\r\n            overlayRef.backdropClick().subscribe(() => {\r\n                if (!dialogRef.disableClose) {\r\n                    dialogRef.close();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (componentOrTemplateRef instanceof TemplateRef) {\r\n\r\n        } else {\r\n            const injector = this.createInjector<T>(config, dialogRef, dialogContainer);\r\n            const contentRef = dialogContainer.attachComponentPortal(\r\n                new ComponentPortal(componentOrTemplateRef, undefined, injector)\r\n            );\r\n            dialogRef.componentInstance = contentRef.instance;\r\n        }\r\n\r\n        dialogRef\r\n            .updateSize(config.width, config.height)\r\n            .updatePosition(config.position);\r\n\r\n        return dialogRef;\r\n    }\r\n\r\n    private createInjector<T>( config: OwlDialogConfig, dialogRef: OwlDialogRef<T>, dialogContainer: OwlDialogContainerComponent ) {\r\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n        const injectionTokens = new WeakMap();\r\n\r\n        injectionTokens.set(OwlDialogRef, dialogRef);\r\n        injectionTokens.set(OwlDialogContainerComponent, dialogContainer);\r\n        injectionTokens.set(OWL_DIALOG_DATA, config.data);\r\n\r\n        return new PortalInjector(userInjector || this.injector, injectionTokens);\r\n    }\r\n\r\n    private createOverlay( config: OwlDialogConfig ): OverlayRef {\r\n        const overlayConfig = this.getOverlayConfig(config);\r\n        return this.overlay.create(overlayConfig);\r\n    }\r\n\r\n    private attachDialogContainer( overlayRef: OverlayRef, config: OwlDialogConfig ): OwlDialogContainerComponent {\r\n        const containerPortal = new ComponentPortal(OwlDialogContainerComponent, config.viewContainerRef);\r\n        const containerRef: ComponentRef<OwlDialogContainerComponent> = overlayRef.attach(containerPortal);\r\n        containerRef.instance.setConfig(config);\r\n\r\n        return containerRef.instance;\r\n    }\r\n\r\n    private getOverlayConfig( dialogConfig: OwlDialogConfig ): OverlayConfig {\r\n        const state = new OverlayConfig({\r\n            positionStrategy: this.overlay.position().global(),\r\n            scrollStrategy: dialogConfig.scrollStrategy || this.scrollStrategy(),\r\n            panelClass: dialogConfig.paneClass,\r\n            hasBackdrop: dialogConfig.hasBackdrop,\r\n            minWidth: dialogConfig.minWidth,\r\n            minHeight: dialogConfig.minHeight,\r\n            maxWidth: dialogConfig.maxWidth,\r\n            maxHeight: dialogConfig.maxHeight\r\n        });\r\n\r\n        if (dialogConfig.backdropClass) {\r\n            state.backdropClass = dialogConfig.backdropClass;\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    private removeOpenDialog( dialogRef: OwlDialogRef<any> ): void {\r\n        const index = this._openDialogsAtThisLevel.indexOf(dialogRef);\r\n\r\n        if (index > -1) {\r\n            this.openDialogs.splice(index, 1);\r\n            // If all the dialogs were closed, remove/restore the `aria-hidden`\r\n            // to a the siblings and emit to the `afterAllClosed` stream.\r\n            if (!this.openDialogs.length) {\r\n                this.ariaHiddenElements.forEach(( previousValue, element ) => {\r\n                    if (previousValue) {\r\n                        element.setAttribute('aria-hidden', previousValue);\r\n                    } else {\r\n                        element.removeAttribute('aria-hidden');\r\n                    }\r\n                });\r\n\r\n                this.ariaHiddenElements.clear();\r\n                this._afterAllClosed.next();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hides all of the content that isn't an overlay from assistive technology.\r\n     */\r\n    private hideNonDialogContentFromAssistiveTechnology() {\r\n        const overlayContainer = this.overlayContainer.getContainerElement();\r\n\r\n        // Ensure that the overlay container is attached to the DOM.\r\n        if (overlayContainer.parentElement) {\r\n            const siblings = overlayContainer.parentElement.children;\r\n\r\n            for (let i = siblings.length - 1; i > -1; i--) {\r\n                let sibling = siblings[i];\r\n\r\n                if (sibling !== overlayContainer &&\r\n                    sibling.nodeName !== 'SCRIPT' &&\r\n                    sibling.nodeName !== 'STYLE' &&\r\n                    !sibling.hasAttribute('aria-live')) {\r\n\r\n                    this.ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\r\n                    sibling.setAttribute('aria-hidden', 'true');\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * Applies default options to the dialog config.\r\n * @param config Config to be modified.\r\n * @param defaultOptions Default config setting\r\n * @returns The new configuration object.\r\n */\r\nfunction applyConfigDefaults( config?: OwlDialogConfig, defaultOptions?: OwlDialogConfig ): OwlDialogConfig {\r\n    return extendObject(new OwlDialogConfig(), config, defaultOptions);\r\n}\r\n","/**\r\n * date-time-picker.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ComponentRef,\r\n    EventEmitter,\r\n    Inject,\r\n    InjectionToken,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewContainerRef\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport {\r\n    BlockScrollStrategy,\r\n    Overlay,\r\n    OverlayConfig,\r\n    OverlayRef,\r\n    PositionStrategy,\r\n    ScrollStrategy\r\n} from '@angular/cdk/overlay';\r\nimport { ESCAPE, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport { coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\r\nimport { OwlDialogRef } from '../dialog/dialog-ref.class';\r\nimport { OwlDialogService } from '../dialog/dialog.service';\r\nimport { merge, Subscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\n\r\n\r\nexport type DefaultScrollStrategyType = () => ScrollStrategy;\r\n\r\n/** Injection token that determines the scroll handling while the dtPicker is open. */\r\nexport const OWL_DTPICKER_SCROLL_STRATEGY =\r\n    new InjectionToken<DefaultScrollStrategyType>('owl-dtpicker-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY( overlay: Overlay ): () => BlockScrollStrategy {\r\n    return () => overlay.scrollStrategies.block();\r\n}\r\n\r\n/** @docs-private */\r\nexport const OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER = {\r\n    provide: OWL_DTPICKER_SCROLL_STRATEGY,\r\n    deps: [Overlay],\r\n    useFactory: OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n\r\n/** @dynamic */\r\n@Component({\r\n    selector: 'owl-date-time',\r\n    exportAs: 'owlDateTime',\r\n    templateUrl: './date-time-picker.component.html',\r\n    styleUrls: ['./date-time-picker.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n})\r\n\r\nexport class OwlDateTimeComponent<T> extends OwlDateTime<T> implements OnInit, OnDestroy {\r\n\r\n    /** Custom class for the picker backdrop. */\r\n    @Input()\r\n    public backdropClass: string | string[] = [];\r\n\r\n    /** Custom class for the picker overlay pane. */\r\n    @Input()\r\n    public panelClass: string | string[] = [];\r\n\r\n    /** The date to open the calendar to initially. */\r\n    private _startAt: T | null;\r\n    @Input()\r\n    get startAt(): T | null {\r\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n        // selected value is.\r\n        if (this._startAt) {\r\n            return this._startAt;\r\n        }\r\n\r\n        if (this._dtInput) {\r\n\r\n            if (this._dtInput.selectMode === 'single') {\r\n                return this._dtInput.value || null;\r\n            } else if (this._dtInput.selectMode === 'range' ||\r\n                this._dtInput.selectMode === 'rangeFrom') {\r\n                return this._dtInput.values[0] || null;\r\n            } else if (this._dtInput.selectMode === 'rangeTo') {\r\n                return this._dtInput.values[1] || null;\r\n            }\r\n\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set startAt( date: T | null ) {\r\n        this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\r\n    }\r\n\r\n    /**\r\n     * Set the type of the dateTime picker\r\n     *      'both' -- show both calendar and timer\r\n     *      'calendar' -- show only calendar\r\n     *      'timer' -- show only timer\r\n     * @default 'both'\r\n     * @type {'both' | 'calendar' | 'timer'}\r\n     * */\r\n    private _pickerType: PickerType = 'both';\r\n    @Input()\r\n    get pickerType(): PickerType {\r\n        return this._pickerType;\r\n    }\r\n\r\n    set pickerType( val: PickerType ) {\r\n        if (val !== this._pickerType) {\r\n            this._pickerType = val;\r\n            if (this._dtInput) {\r\n                this._dtInput.formatNativeInputValue();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Whether the picker open as a dialog\r\n     * @default {false}\r\n     * @type {boolean}\r\n     * */\r\n    _pickerMode: PickerMode = 'popup';\r\n    @Input()\r\n    get pickerMode() {\r\n        return this._pickerMode;\r\n    }\r\n\r\n    set pickerMode( mode: PickerMode ) {\r\n        if (mode === 'popup') {\r\n            this._pickerMode = mode;\r\n        } else {\r\n            this._pickerMode = 'dialog';\r\n        }\r\n    }\r\n\r\n    /** Whether the date time picker should be disabled. */\r\n    private _disabled: boolean;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined && this._dtInput ?\r\n            this._dtInput.disabled : !!this._disabled;\r\n    }\r\n\r\n    set disabled( value: boolean ) {\r\n        value = coerceBooleanProperty(value);\r\n        if (value !== this._disabled) {\r\n            this._disabled = value;\r\n            this.disabledChange.next(value);\r\n        }\r\n    }\r\n\r\n    /** Whether the calendar is open. */\r\n    private _opened: boolean = false;\r\n    @Input()\r\n    get opened(): boolean {\r\n        return this._opened;\r\n    }\r\n\r\n    set opened( val: boolean ) {\r\n        val ? this.open() : this.close();\r\n    }\r\n\r\n    /**\r\n     * The scroll strategy when the picker is open\r\n     * Learn more this from https://material.angular.io/cdk/overlay/overview#scroll-strategies\r\n     * */\r\n    @Input()\r\n    public scrollStrategy: ScrollStrategy;\r\n\r\n    /**\r\n     * Callback when the picker is closed\r\n     * */\r\n    @Output() afterPickerClosed = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Callback when the picker is open\r\n     * */\r\n    @Output() afterPickerOpen = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Emits selected year in multi-year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output() yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output() monthSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emit when the selected value has been confirmed\r\n     * */\r\n    public confirmSelectedChange = new EventEmitter<T[] | T>();\r\n\r\n    /**\r\n     * Emits when the date time picker is disabled.\r\n     * */\r\n    public disabledChange = new EventEmitter<boolean>();\r\n\r\n    private pickerContainerPortal: ComponentPortal<OwlDateTimeContainerComponent<T>>;\r\n    private pickerContainer: OwlDateTimeContainerComponent<T>;\r\n    private popupRef: OverlayRef;\r\n    private dialogRef: OwlDialogRef<OwlDateTimeContainerComponent<T>>;\r\n    private dtInputSub = Subscription.EMPTY;\r\n    private hidePickerStreamSub = Subscription.EMPTY;\r\n    private confirmSelectedStreamSub = Subscription.EMPTY;\r\n    private pickerOpenedStreamSub = Subscription.EMPTY;\r\n\r\n    /** The element that was focused before the date time picker was opened. */\r\n    private focusedElementBeforeOpen: HTMLElement | null = null;\r\n\r\n    private _dtInput: OwlDateTimeInputDirective<T>;\r\n    get dtInput() {\r\n        return this._dtInput;\r\n    }\r\n\r\n    private _selected: T | null;\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        this._selected = value;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    get selecteds() {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    get minDateTime(): T | null {\r\n        return this._dtInput && this._dtInput.min;\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    get maxDateTime(): T | null {\r\n        return this._dtInput && this._dtInput.max;\r\n    }\r\n\r\n    get dateTimeFilter(): ( date: T | null ) => boolean {\r\n        return this._dtInput && this._dtInput.dateTimeFilter;\r\n    }\r\n\r\n    get selectMode(): SelectMode {\r\n        return this._dtInput.selectMode;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._dtInput.isInSingleMode;\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this._dtInput.isInRangeMode;\r\n    }\r\n\r\n    constructor( private overlay: Overlay,\r\n                 private viewContainerRef: ViewContainerRef,\r\n                 private dialogService: OwlDialogService,\r\n                 private ngZone: NgZone,\r\n                 protected changeDetector: ChangeDetectorRef,\r\n                 @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Inject(OWL_DTPICKER_SCROLL_STRATEGY) private defaultScrollStrategy: DefaultScrollStrategyType,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) protected dateTimeFormats: OwlDateTimeFormats,\r\n                 @Optional() @Inject(DOCUMENT) private document: any ) {\r\n        super(dateTimeAdapter, dateTimeFormats);\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.close();\r\n        this.dtInputSub.unsubscribe();\r\n        this.disabledChange.complete();\r\n\r\n        if (this.popupRef) {\r\n            this.popupRef.dispose();\r\n        }\r\n    }\r\n\r\n    public registerInput( input: OwlDateTimeInputDirective<T> ): void {\r\n        if (this._dtInput) {\r\n            throw Error('A Owl DateTimePicker can only be associated with a single input.');\r\n        }\r\n\r\n        this._dtInput = input;\r\n        this.dtInputSub = this._dtInput.valueChange.subscribe(( value: T[] | T | null ) => {\r\n            if (Array.isArray(value)) {\r\n                this.selecteds = value;\r\n            } else {\r\n                this.selected = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    public open(): void {\r\n\r\n        if (this._opened || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this._dtInput) {\r\n            throw Error('Attempted to open an DateTimePicker with no associated input.');\r\n        }\r\n\r\n        if (this.document) {\r\n            this.focusedElementBeforeOpen = this.document.activeElement;\r\n        }\r\n\r\n        // reset the picker selected value\r\n        if (this.isInSingleMode) {\r\n            this.selected = this._dtInput.value;\r\n        } else if (this.isInRangeMode) {\r\n            this.selecteds = this._dtInput.values;\r\n        }\r\n\r\n        // when the picker is open , we make sure the picker's current selected time value\r\n        // is the same as the _startAt time value.\r\n        if (this.selected && this.pickerType !== 'calendar' && this._startAt) {\r\n            this.selected = this.dateTimeAdapter.createDate(\r\n                this.dateTimeAdapter.getYear(this.selected),\r\n                this.dateTimeAdapter.getMonth(this.selected),\r\n                this.dateTimeAdapter.getDate(this.selected),\r\n                this.dateTimeAdapter.getHours(this._startAt),\r\n                this.dateTimeAdapter.getMinutes(this._startAt),\r\n                this.dateTimeAdapter.getSeconds(this._startAt),\r\n            );\r\n        }\r\n\r\n        this.pickerMode === 'dialog' ?\r\n            this.openAsDialog() :\r\n            this.openAsPopup();\r\n\r\n\r\n        this.pickerContainer.picker = this;\r\n\r\n        // Listen to picker container's hidePickerStream\r\n        this.hidePickerStreamSub = this.pickerContainer.hidePickerStream\r\n            .subscribe(() => {\r\n                this.close();\r\n            });\r\n\r\n        // Listen to picker container's confirmSelectedStream\r\n        this.confirmSelectedStreamSub = this.pickerContainer.confirmSelectedStream\r\n            .subscribe(( event: any ) => {\r\n                this.confirmSelect(event);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Selects the given date\r\n     * @param date -- a date to be selected\r\n     * @return {void}\r\n     * */\r\n    public select( date: T[] | T ): void {\r\n\r\n        if (Array.isArray(date)) {\r\n            this.selecteds = [...date];\r\n        } else {\r\n            this.selected = date;\r\n        }\r\n\r\n        /**\r\n         * Cases in which automatically confirm the select when date or dates are selected:\r\n         * 1) picker mode is NOT 'dialog'\r\n         * 2) picker type is 'calendar' and selectMode is 'single'.\r\n         * 3) picker type is 'calendar' and selectMode is 'range' and\r\n         *    the 'selecteds' has 'from'(selecteds[0]) and 'to'(selecteds[1]) values.\r\n         * 4) selectMode is 'rangeFrom' and selecteds[0] has value.\r\n         * 5) selectMode is 'rangeTo' and selecteds[1] has value.\r\n         * */\r\n        if (this.pickerMode !== 'dialog' &&\r\n            this.pickerType === 'calendar' &&\r\n            ((this.selectMode === 'single' && this.selected) ||\r\n                (this.selectMode === 'rangeFrom' && this.selecteds[0]) ||\r\n                (this.selectMode === 'rangeTo' && this.selecteds[1]) ||\r\n                (this.selectMode === 'range' && this.selecteds[0] && this.selecteds[1]))) {\r\n            this.confirmSelect();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits the selected year in multi-year view\r\n     * */\r\n    public selectYear( normalizedYear: T ): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * */\r\n    public selectMonth( normalizedMonth: T ): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n\r\n    /**\r\n     * Hide the picker\r\n     * @return {void}\r\n     * */\r\n    public close(): void {\r\n        if (!this._opened) {\r\n            return;\r\n        }\r\n\r\n        if (this.popupRef && this.popupRef.hasAttached()) {\r\n            this.popupRef.detach();\r\n        }\r\n\r\n        if (this.pickerContainerPortal && this.pickerContainerPortal.isAttached) {\r\n            this.pickerContainerPortal.detach();\r\n        }\r\n\r\n        if (this.hidePickerStreamSub) {\r\n            this.hidePickerStreamSub.unsubscribe();\r\n            this.hidePickerStreamSub = null;\r\n        }\r\n\r\n        if (this.confirmSelectedStreamSub) {\r\n            this.confirmSelectedStreamSub.unsubscribe();\r\n            this.confirmSelectedStreamSub = null;\r\n        }\r\n\r\n        if (this.pickerOpenedStreamSub) {\r\n            this.pickerOpenedStreamSub.unsubscribe();\r\n            this.pickerOpenedStreamSub = null;\r\n        }\r\n\r\n        if (this.dialogRef) {\r\n            this.dialogRef.close();\r\n            this.dialogRef = null;\r\n        }\r\n\r\n        const completeClose = () => {\r\n            if (this._opened) {\r\n                this._opened = false;\r\n                this.afterPickerClosed.emit(null);\r\n                this.focusedElementBeforeOpen = null;\r\n            }\r\n        };\r\n\r\n        if (this.focusedElementBeforeOpen &&\r\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\r\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n            // able to close the calendar at all. We work around it by making the logic, that marks\r\n            // the datepicker as closed, async as well.\r\n            this.focusedElementBeforeOpen.focus();\r\n            setTimeout(completeClose);\r\n        } else {\r\n            completeClose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Confirm the selected value\r\n     * @param {any} event\r\n     * @return {void}\r\n     * */\r\n    public confirmSelect( event?: any ): void {\r\n\r\n        if (this.isInSingleMode) {\r\n            const selected = this.selected || this.startAt || this.dateTimeAdapter.now();\r\n            this.confirmSelectedChange.emit(selected);\r\n        } else if (this.isInRangeMode) {\r\n            this.confirmSelectedChange.emit(this.selecteds);\r\n        }\r\n\r\n        this.close();\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Open the picker as a dialog\r\n     * @return {void}\r\n     * */\r\n    private openAsDialog(): void {\r\n        this.dialogRef = this.dialogService.open(OwlDateTimeContainerComponent, {\r\n            autoFocus: false,\r\n            backdropClass: ['cdk-overlay-dark-backdrop', ...coerceArray(this.backdropClass)],\r\n            paneClass: ['owl-dt-dialog', ...coerceArray(this.panelClass)],\r\n            viewContainerRef: this.viewContainerRef,\r\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\r\n        });\r\n        this.pickerContainer = this.dialogRef.componentInstance;\r\n\r\n        this.dialogRef.afterOpen().subscribe(() => {\r\n            this.afterPickerOpen.emit(null);\r\n            this._opened = true;\r\n        });\r\n        this.dialogRef.afterClosed().subscribe(() => this.close());\r\n    }\r\n\r\n    /**\r\n     * Open the picker as popup\r\n     * @return {void}\r\n     * */\r\n    private openAsPopup(): void {\r\n\r\n        if (!this.pickerContainerPortal) {\r\n            this.pickerContainerPortal = new ComponentPortal<OwlDateTimeContainerComponent<T>>(OwlDateTimeContainerComponent, this.viewContainerRef);\r\n        }\r\n\r\n        if (!this.popupRef) {\r\n            this.createPopup();\r\n        }\r\n\r\n        if (!this.popupRef.hasAttached()) {\r\n            const componentRef: ComponentRef<OwlDateTimeContainerComponent<T>> =\r\n                this.popupRef.attach(this.pickerContainerPortal);\r\n            this.pickerContainer = componentRef.instance;\r\n\r\n            // Update the position once the calendar has rendered.\r\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                this.popupRef.updatePosition();\r\n            });\r\n\r\n            // emit open stream\r\n            this.pickerOpenedStreamSub =\r\n                this.pickerContainer.pickerOpenedStream.pipe(take(1)).subscribe(() => {\r\n                    this.afterPickerOpen.emit(null);\r\n                    this._opened = true;\r\n                });\r\n        }\r\n    }\r\n\r\n    private createPopup(): void {\r\n        const overlayConfig = new OverlayConfig({\r\n            positionStrategy: this.createPopupPositionStrategy(),\r\n            hasBackdrop: true,\r\n            backdropClass: ['cdk-overlay-transparent-backdrop', ...coerceArray(this.backdropClass)],\r\n            scrollStrategy: this.scrollStrategy || this.defaultScrollStrategy(),\r\n            panelClass: ['owl-dt-popup', ...coerceArray(this.panelClass)],\r\n        });\r\n\r\n        this.popupRef = this.overlay.create(overlayConfig);\r\n\r\n        merge(\r\n            this.popupRef.backdropClick(),\r\n            this.popupRef.detachments(),\r\n            this.popupRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE ||\r\n                (this._dtInput && event.altKey && event.keyCode === UP_ARROW)))\r\n        ).subscribe(() => this.close());\r\n    }\r\n\r\n    /**\r\n     * Create the popup PositionStrategy.\r\n     * */\r\n    private createPopupPositionStrategy(): PositionStrategy {\r\n        return this.overlay.position()\r\n            .flexibleConnectedTo(this._dtInput.elementRef)\r\n            .withTransformOriginOn('.owl-dt-container')\r\n            .withFlexibleDimensions(false)\r\n            .withPush(false)\r\n            .withPositions([\r\n                {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\r\n                {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\r\n                {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\r\n                {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\r\n                {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top', offsetY: -176},\r\n                {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top', offsetY: -352},\r\n            ]);\r\n    }\r\n}\r\n","/**\r\n * date-time-picker-input.directive\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    Directive,\r\n    ElementRef,\r\n    EventEmitter,\r\n    forwardRef,\r\n    HostBinding,\r\n    HostListener,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    Renderer2\r\n} from '@angular/core';\r\nimport {\r\n    AbstractControl,\r\n    ControlValueAccessor,\r\n    NG_VALIDATORS,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidationErrors,\r\n    Validator,\r\n    ValidatorFn,\r\n    Validators\r\n} from '@angular/forms';\r\nimport { DOWN_ARROW } from '@angular/cdk/keycodes';\r\nimport { OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\r\n    multi: true\r\n};\r\n\r\nexport const OWL_DATETIME_VALIDATORS: any = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => OwlDateTimeInputDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: 'input[owlDateTime]',\r\n    exportAs: 'owlDateTimeInput',\r\n    providers: [\r\n        OWL_DATETIME_VALUE_ACCESSOR,\r\n        OWL_DATETIME_VALIDATORS,\r\n    ],\r\n})\r\nexport class OwlDateTimeInputDirective<T> implements OnInit, AfterContentInit,\r\n    OnDestroy, ControlValueAccessor, Validator {\r\n\r\n    /**\r\n     * The date time picker that this input is associated with.\r\n     * */\r\n    @Input()\r\n    set owlDateTime( value: OwlDateTimeComponent<T> ) {\r\n        this.registerDateTimePicker(value);\r\n    }\r\n\r\n    /**\r\n     * A function to filter date time\r\n     * @default {null}\r\n     * @type {Function}\r\n     * */\r\n    @Input()\r\n    set owlDateTimeFilter( filter: ( date: T | null ) => boolean ) {\r\n        this._dateTimeFilter = filter;\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    private _dateTimeFilter: ( date: T | null ) => boolean;\r\n    get dateTimeFilter() {\r\n        return this._dateTimeFilter;\r\n    }\r\n\r\n    /** Whether the date time picker's input is disabled. */\r\n    @Input()\r\n    private _disabled: boolean;\r\n    get disabled() {\r\n        return !!this._disabled;\r\n    }\r\n\r\n    set disabled( value: boolean ) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        const element = this.elmRef.nativeElement;\r\n\r\n        if (this._disabled !== newValue) {\r\n            this._disabled = newValue;\r\n            this.disabledChange.emit(newValue);\r\n        }\r\n\r\n        // We need to null check the `blur` method, because it's undefined during SSR.\r\n        if (newValue && element.blur) {\r\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\r\n            // is problematic, because it would mean that it triggers another change detection cycle,\r\n            // which then causes a changed after checked error if the input element was focused before.\r\n            element.blur();\r\n        }\r\n    }\r\n\r\n    /** The minimum valid date. */\r\n    private _min: T | null;\r\n    @Input()\r\n    get min(): T | null {\r\n        return this._min;\r\n    }\r\n\r\n    set min( value: T | null ) {\r\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    /** The maximum valid date. */\r\n    private _max: T | null;\r\n    @Input()\r\n    get max(): T | null {\r\n        return this._max;\r\n    }\r\n\r\n    set max( value: T | null ) {\r\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.validatorOnChange();\r\n    }\r\n\r\n    /**\r\n     * The picker's select mode\r\n     * @default {'single'}\r\n     * @type {'single' | 'range'}\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode() {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( mode: SelectMode ) {\r\n\r\n        if (mode !== 'single' && mode !== 'range' &&\r\n            mode !== 'rangeFrom' && mode !== 'rangeTo') {\r\n            throw Error('OwlDateTime Error: invalid selectMode value!');\r\n        }\r\n\r\n        this._selectMode = mode;\r\n    }\r\n\r\n    /**\r\n     * The character to separate the 'from' and 'to' in input value\r\n     * @default {'~'}\r\n     * @type {string}\r\n     * */\r\n    @Input() rangeSeparator = '~';\r\n\r\n    private _value: T | null;\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this.lastValueValid = !value || this.dateTimeAdapter.isValid(value);\r\n        value = this.getValidDate(value);\r\n        const oldDate = this._value;\r\n        this._value = value;\r\n\r\n        // set the input property 'value'\r\n        this.formatNativeInputValue();\r\n\r\n        // check if the input value changed\r\n        if (!this.dateTimeAdapter.isEqual(oldDate, value)) {\r\n            this.valueChange.emit(value);\r\n        }\r\n    }\r\n\r\n    private _values: T[] = [];\r\n    @Input()\r\n    get values() {\r\n        return this._values;\r\n    }\r\n\r\n    set values( values: T[] ) {\r\n        if (values && values.length > 0) {\r\n            this._values = values.map(( v ) => {\r\n                v = this.dateTimeAdapter.deserialize(v);\r\n                return this.getValidDate(v);\r\n            });\r\n            this.lastValueValid = (!this._values[0] || this.dateTimeAdapter.isValid(this._values[0])) && (!this._values[1] || this.dateTimeAdapter.isValid(this._values[1]));\r\n        } else {\r\n            this._values = [];\r\n            this.lastValueValid = true;\r\n        }\r\n\r\n        // set the input property 'value'\r\n        this.formatNativeInputValue();\r\n\r\n        this.valueChange.emit(this._values);\r\n    }\r\n\r\n    /**\r\n     * Callback to invoke when `change` event is fired on this `<input>`\r\n     * */\r\n    @Output() dateTimeChange = new EventEmitter<any>();\r\n\r\n    /**\r\n     * Callback to invoke when an `input` event is fired on this `<input>`.\r\n     * */\r\n    @Output() dateTimeInput = new EventEmitter<any>();\r\n\r\n    get elementRef(): ElementRef {\r\n        return this.elmRef;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this._selectMode === 'range' || this._selectMode === 'rangeFrom'\r\n            || this._selectMode === 'rangeTo';\r\n    }\r\n\r\n    /** The date-time-picker that this input is associated with. */\r\n    public dtPicker: OwlDateTimeComponent<T>;\r\n\r\n    private dtPickerSub: Subscription = Subscription.EMPTY;\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private lastValueValid = true;\r\n\r\n    private onModelChange: Function = () => {\r\n    };\r\n    private onModelTouched: Function = () => {\r\n    };\r\n    private validatorOnChange: Function = () => {\r\n    };\r\n\r\n    /** The form control validator for whether the input parses. */\r\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\r\n        return this.lastValueValid ?\r\n            null : {'owlDateTimeParse': {'text': this.elmRef.nativeElement.value}};\r\n    };\r\n\r\n    /** The form control validator for the min date. */\r\n    private minValidator: ValidatorFn = ( control: AbstractControl ): ValidationErrors | null => {\r\n        if (this.isInSingleMode) {\r\n\r\n            const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\r\n            return (!this.min || !controlValue ||\r\n                this.dateTimeAdapter.compare(this.min, controlValue) <= 0) ?\r\n                null : {'owlDateTimeMin': {'min': this.min, 'actual': controlValue}};\r\n\r\n        } else if (this.isInRangeMode && control.value) {\r\n\r\n            const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\r\n            const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\r\n            return (!this.min || !controlValueFrom || !controlValueTo ||\r\n                this.dateTimeAdapter.compare(this.min, controlValueFrom) <= 0) ?\r\n                null : {'owlDateTimeMin': {'min': this.min, 'actual': [controlValueFrom, controlValueTo]}};\r\n\r\n        }\r\n    };\r\n\r\n    /** The form control validator for the max date. */\r\n    private maxValidator: ValidatorFn = ( control: AbstractControl ): ValidationErrors | null => {\r\n        if (this.isInSingleMode) {\r\n\r\n            const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\r\n            return (!this.max || !controlValue ||\r\n                this.dateTimeAdapter.compare(this.max, controlValue) >= 0) ?\r\n                null : {'owlDateTimeMax': {'max': this.max, 'actual': controlValue}};\r\n\r\n        } else if (this.isInRangeMode && control.value) {\r\n\r\n            const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\r\n            const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\r\n            return (!this.max || !controlValueFrom || !controlValueTo ||\r\n                this.dateTimeAdapter.compare(this.max, controlValueTo) >= 0) ?\r\n                null : {'owlDateTimeMax': {'max': this.max, 'actual': [controlValueFrom, controlValueTo]}};\r\n\r\n        }\r\n    };\r\n\r\n    /** The form control validator for the date filter. */\r\n    private filterValidator: ValidatorFn = ( control: AbstractControl ): ValidationErrors | null => {\r\n        const controlValue = this.getValidDate(this.dateTimeAdapter.deserialize(control.value));\r\n        return !this._dateTimeFilter || !controlValue || this._dateTimeFilter(controlValue) ?\r\n            null : {'owlDateTimeFilter': true};\r\n    };\r\n\r\n    /**\r\n     * The form control validator for the range.\r\n     * Check whether the 'before' value is before the 'to' value\r\n     * */\r\n    private rangeValidator: ValidatorFn = ( control: AbstractControl ): ValidationErrors | null => {\r\n        if (this.isInSingleMode || !control.value) {\r\n            return null;\r\n        }\r\n\r\n        const controlValueFrom = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[0]));\r\n        const controlValueTo = this.getValidDate(this.dateTimeAdapter.deserialize(control.value[1]));\r\n\r\n        return !controlValueFrom || !controlValueTo || this.dateTimeAdapter.compare(controlValueFrom, controlValueTo) <= 0 ?\r\n            null : {'owlDateTimeRange': true};\r\n    };\r\n\r\n    /** The combined form control validator for this input. */\r\n    private validator: ValidatorFn | null =\r\n        Validators.compose(\r\n            [this.parseValidator, this.minValidator, this.maxValidator, this.filterValidator, this.rangeValidator]);\r\n\r\n    /** Emits when the value changes (either due to user input or programmatic change). */\r\n    public valueChange = new EventEmitter<T[] | T | null>();\r\n\r\n    /** Emits when the disabled state has changed */\r\n    public disabledChange = new EventEmitter<boolean>();\r\n\r\n    @HostBinding('attr.aria-haspopup')\r\n    get owlDateTimeInputAriaHaspopup(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @HostBinding('attr.aria-owns')\r\n    get owlDateTimeInputAriaOwns(): string {\r\n        return (this.dtPicker.opened && this.dtPicker.id) || null;\r\n    }\r\n\r\n    @HostBinding('attr.min')\r\n    get minIso8601(): string {\r\n        return this.min ? this.dateTimeAdapter.toIso8601(this.min) : null;\r\n    }\r\n\r\n    @HostBinding('attr.max')\r\n    get maxIso8601(): string {\r\n        return this.max ? this.dateTimeAdapter.toIso8601(this.max) : null;\r\n    }\r\n\r\n    @HostBinding('disabled')\r\n    get owlDateTimeInputDisabled(): boolean {\r\n        return this.disabled;\r\n    }\r\n\r\n    constructor( private elmRef: ElementRef,\r\n                 private renderer: Renderer2,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) private dateTimeFormats: OwlDateTimeFormats ) {\r\n        if (!this.dateTimeAdapter) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for DateTimePicker. You must import one of the following ` +\r\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                `custom implementation.`);\r\n        }\r\n\r\n        if (!this.dateTimeFormats) {\r\n            throw Error(\r\n                `OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following ` +\r\n                `modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a ` +\r\n                `custom implementation.`);\r\n        }\r\n\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.value = this.value;\r\n        });\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.dtPicker) {\r\n            throw Error(\r\n                `OwlDateTimePicker: the picker input doesn't have any associated owl-date-time component`);\r\n        }\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n\r\n        this.dtPickerSub = this.dtPicker.confirmSelectedChange.subscribe(( selecteds: T[] | T ) => {\r\n\r\n            if (Array.isArray(selecteds)) {\r\n                this.values = selecteds;\r\n            } else {\r\n                this.value = selecteds;\r\n            }\r\n\r\n            this.onModelChange(selecteds);\r\n            this.onModelTouched();\r\n            this.dateTimeChange.emit({source: this, value: selecteds, input: this.elmRef.nativeElement});\r\n            this.dateTimeInput.emit({source: this, value: selecteds, input: this.elmRef.nativeElement});\r\n        });\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.dtPickerSub.unsubscribe();\r\n        this.localeSub.unsubscribe();\r\n        this.valueChange.complete();\r\n        this.disabledChange.complete();\r\n    }\r\n\r\n    public writeValue( value: any ): void {\r\n        if (this.isInSingleMode) {\r\n            this.value = value;\r\n        } else {\r\n            this.values = value;\r\n        }\r\n    }\r\n\r\n    public registerOnChange( fn: any ): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    public registerOnTouched( fn: any ): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    public setDisabledState( isDisabled: boolean ): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public validate( c: AbstractControl ): { [key: string]: any; } {\r\n        return this.validator ? this.validator(c) : null;\r\n    }\r\n\r\n    public registerOnValidatorChange( fn: () => void ): void {\r\n        this.validatorOnChange = fn;\r\n    }\r\n\r\n    /**\r\n     * Open the picker when user hold alt + DOWN_ARROW\r\n     * */\r\n    @HostListener('keydown', ['$event'])\r\n    public handleKeydownOnHost( event: KeyboardEvent ): void {\r\n        if (event.altKey && event.keyCode === DOWN_ARROW) {\r\n            this.dtPicker.open();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    @HostListener('blur', ['$event'])\r\n    public handleBlurOnHost( event: Event ): void {\r\n        this.onModelTouched();\r\n    }\r\n\r\n    @HostListener('input', ['$event'])\r\n    public handleInputOnHost( event: any ): void {\r\n        let value = event.target.value;\r\n        if (this._selectMode === 'single') {\r\n            this.changeInputInSingleMode(value)\r\n        } else if (this._selectMode === 'range') {\r\n            this.changeInputInRangeMode(value)\r\n        } else {\r\n            this.changeInputInRangeFromToMode(value)\r\n        }\r\n    }\r\n\r\n    @HostListener('change', ['$event'])\r\n    public handleChangeOnHost( event: any ): void {\r\n\r\n        let v;\r\n        if (this.isInSingleMode) {\r\n            v = this.value;\r\n        } else if (this.isInRangeMode) {\r\n            v = this.values;\r\n        }\r\n\r\n        this.dateTimeChange.emit({\r\n            source: this,\r\n            value: v,\r\n            input: this.elmRef.nativeElement\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set the native input property 'value'\r\n     * @return {void}\r\n     * */\r\n    public formatNativeInputValue(): void {\r\n        if (this.isInSingleMode) {\r\n\r\n            this.renderer.setProperty(this.elmRef.nativeElement, 'value',\r\n                this._value ? this.dateTimeAdapter.format(this._value, this.dtPicker.formatString) : '');\r\n\r\n        } else if (this.isInRangeMode) {\r\n\r\n            if (this._values && this.values.length > 0) {\r\n\r\n                const from = this._values[0];\r\n                const to = this._values[1];\r\n\r\n                const fromFormatted = from ? this.dateTimeAdapter.format(from, this.dtPicker.formatString) : '';\r\n                const toFormatted = to ? this.dateTimeAdapter.format(to, this.dtPicker.formatString) : '';\r\n\r\n                if (!fromFormatted && !toFormatted) {\r\n                    this.renderer.setProperty(this.elmRef.nativeElement, 'value', null);\r\n                } else {\r\n                    if (this._selectMode === 'range') {\r\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', fromFormatted + ' ' + this.rangeSeparator + ' ' + toFormatted);\r\n                    } else if (this._selectMode === 'rangeFrom') {\r\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', fromFormatted);\r\n                    } else if (this._selectMode === 'rangeTo') {\r\n                        this.renderer.setProperty(this.elmRef.nativeElement, 'value', toFormatted);\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.renderer.setProperty(this.elmRef.nativeElement, 'value', '');\r\n            }\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Register the relationship between this input and its picker component\r\n     * @param {OwlDateTimeComponent} picker -- associated picker component to this input\r\n     * @return {void}\r\n     * */\r\n    private registerDateTimePicker( picker: OwlDateTimeComponent<T> ) {\r\n        if (picker) {\r\n            this.dtPicker = picker;\r\n            this.dtPicker.registerInput(this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Convert a given obj to a valid date object\r\n     *\r\n     * @param {any} obj The object to check.\r\n     * @return {T | null} The given object if it is both a date instance and valid, otherwise null.\r\n     * */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n\r\n    /**\r\n     * Convert a time string to a date-time string\r\n     * When pickerType is 'timer', the value in the picker's input is a time string.\r\n     * The dateTimeAdapter parse fn could not parse a time string to a Date Object.\r\n     * Therefore we need this fn to convert a time string to a date-time string.\r\n     * @param {string} timeString\r\n     * @param {T} dateTime\r\n     * @return {string}\r\n     * */\r\n    private convertTimeStringToDateTimeString( timeString: string, dateTime: T ): string | null {\r\n        if (timeString) {\r\n            const v = dateTime || this.dateTimeAdapter.now();\r\n            const dateString = this.dateTimeAdapter.format(v, this.dateTimeFormats.datePickerInput);\r\n            return dateString + ' ' + timeString;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input change in single mode\r\n     * @param {string} inputValue\r\n     * @return {void}\r\n     * */\r\n    private changeInputInSingleMode( inputValue: string ): void {\r\n        let value = inputValue;\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            value = this.convertTimeStringToDateTimeString(value, this.value);\r\n        }\r\n\r\n        let result = this.dateTimeAdapter.parse(value, this.dateTimeFormats.parseInput);\r\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\r\n        result = this.getValidDate(result);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        // result equals to null means there is input event, but the input value is invalid\r\n        if (!this.isSameValue(result, this._value) ||\r\n            result === null) {\r\n            this._value = result;\r\n            this.valueChange.emit(result);\r\n            this.onModelChange(result);\r\n            this.dateTimeInput.emit({source: this, value: result, input: this.elmRef.nativeElement});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle input change in rangeFrom or rangeTo mode\r\n     * @param {string} inputValue\r\n     * @return {void}\r\n     * */\r\n    private changeInputInRangeFromToMode( inputValue: string ): void {\r\n        let originalValue = this._selectMode === 'rangeFrom' ? this._values[0] : this._values[1];\r\n\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            inputValue = this.convertTimeStringToDateTimeString(inputValue, originalValue);\r\n        }\r\n\r\n        let result = this.dateTimeAdapter.parse(inputValue, this.dateTimeFormats.parseInput);\r\n        this.lastValueValid = !result || this.dateTimeAdapter.isValid(result);\r\n        result = this.getValidDate(result);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        if ((this._selectMode === 'rangeFrom' && this.isSameValue(result, this._values[0]) && result) ||\r\n            (this._selectMode === 'rangeTo' && this.isSameValue(result, this._values[1])) && result) {\r\n            return;\r\n        }\r\n\r\n        this._values = this._selectMode === 'rangeFrom' ? [result, this._values[1]] : [this._values[0], result];\r\n        this.valueChange.emit(this._values);\r\n        this.onModelChange(this._values);\r\n        this.dateTimeInput.emit({source: this, value: this._values, input: this.elmRef.nativeElement});\r\n    }\r\n\r\n    /**\r\n     * Handle input change in range mode\r\n     * @param {string} inputValue\r\n     * @return {void}\r\n     * */\r\n    private changeInputInRangeMode( inputValue: string ): void {\r\n        const selecteds = inputValue.split(this.rangeSeparator);\r\n        let fromString = selecteds[0];\r\n        let toString = selecteds[1];\r\n\r\n        if (this.dtPicker.pickerType === 'timer') {\r\n            fromString = this.convertTimeStringToDateTimeString(fromString, this.values[0]);\r\n            toString = this.convertTimeStringToDateTimeString(toString, this.values[1]);\r\n        }\r\n\r\n        let from = this.dateTimeAdapter.parse(fromString, this.dateTimeFormats.parseInput);\r\n        let to = this.dateTimeAdapter.parse(toString, this.dateTimeFormats.parseInput);\r\n        this.lastValueValid = (!from || this.dateTimeAdapter.isValid(from)) && (!to || this.dateTimeAdapter.isValid(to));\r\n        from = this.getValidDate(from);\r\n        to = this.getValidDate(to);\r\n\r\n        // if the newValue is the same as the oldValue, we intend to not fire the valueChange event\r\n        if (!this.isSameValue(from, this._values[0]) ||\r\n            !this.isSameValue(to, this._values[1]) ||\r\n            (from === null && to === null)) {\r\n            this._values = [from, to];\r\n            this.valueChange.emit(this._values);\r\n            this.onModelChange(this._values);\r\n            this.dateTimeInput.emit({source: this, value: this._values, input: this.elmRef.nativeElement});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the two value is the same\r\n     * @return {boolean}\r\n     * */\r\n    private isSameValue( first: T | null, second: T | null ): boolean {\r\n        if (first && second) {\r\n            return this.dateTimeAdapter.compare(first, second) === 0;\r\n        }\r\n\r\n        return first == second;\r\n    }\r\n}\r\n","/**\r\n * calendar-body.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    NgZone,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport { SelectMode } from './date-time.class';\r\nimport { take } from 'rxjs/operators';\r\n\r\nexport class CalendarCell {\r\n    constructor( public value: number,\r\n                 public displayValue: string,\r\n                 public ariaLabel: string,\r\n                 public enabled: boolean,\r\n                 public out: boolean = false,\r\n                 public cellClass: string = '' ) {\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: '[owl-date-time-calendar-body]',\r\n    exportAs: 'owlDateTimeCalendarBody',\r\n    templateUrl: './calendar-body.component.html',\r\n    styleUrls: ['./calendar-body.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlCalendarBodyComponent implements OnInit {\r\n\r\n    /**\r\n     * The cell number of the active cell in the table.\r\n     * @default {0}\r\n     * @type {number}\r\n     * */\r\n    @Input() activeCell = 0;\r\n\r\n    /**\r\n     * The cells to display in the table.\r\n     * */\r\n    @Input() rows: CalendarCell[][];\r\n\r\n    /**\r\n     * The number of columns in the table.\r\n     * */\r\n    @Input() numCols = 7;\r\n\r\n    /**\r\n     * The ratio (width / height) to use for the cells in the table.\r\n     */\r\n    @Input() cellRatio = 1;\r\n\r\n    /**\r\n     * The value in the table that corresponds to today.\r\n     * */\r\n    @Input() todayValue: number;\r\n\r\n    /**\r\n     * The value in the table that is currently selected.\r\n     * */\r\n    @Input() selectedValues: number[];\r\n\r\n    /**\r\n     * Current picker select mode\r\n     * @type {SelectMode}\r\n     * */\r\n    @Input() selectMode: SelectMode;\r\n\r\n    /**\r\n     * Emit when a calendar cell is selected\r\n     * */\r\n    @Output() public readonly select = new EventEmitter<CalendarCell>();\r\n\r\n    @HostBinding('class.owl-dt-calendar-body')\r\n    get owlDTCalendarBodyClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    constructor( private elmRef: ElementRef,\r\n                 private ngZone: NgZone, ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public selectCell( cell: CalendarCell ): void {\r\n        this.select.emit(cell);\r\n    }\r\n\r\n    public isActiveCell( rowIndex: number, colIndex: number ): boolean {\r\n        const cellNumber = rowIndex * this.numCols + colIndex;\r\n        return cellNumber === this.activeCell;\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is selected\r\n     * @param {number} value\r\n     * @return {boolean}\r\n     * */\r\n    public isSelected( value: number ): boolean {\r\n\r\n        if (!this.selectedValues || this.selectedValues.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        if (this.isInSingleMode) {\r\n            return value === this.selectedValues[0];\r\n        }\r\n\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            const toValue = this.selectedValues[1];\r\n\r\n            return value === fromValue || value === toValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell in the range\r\n     * */\r\n    public isInRange( value: number ): boolean {\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            const toValue = this.selectedValues[1];\r\n\r\n            if (fromValue !== null && toValue !== null) {\r\n                return value >= fromValue && value <= toValue;\r\n            } else {\r\n                return value === fromValue || value === toValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is the range from\r\n     * */\r\n    public isRangeFrom( value: number ): boolean {\r\n        if (this.isInRangeMode) {\r\n            const fromValue = this.selectedValues[0];\r\n            return fromValue !== null && value === fromValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if the cell is the range to\r\n     * */\r\n    public isRangeTo( value: number ): boolean {\r\n        if (this.isInRangeMode) {\r\n            const toValue = this.selectedValues[1];\r\n            return toValue !== null && value === toValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Focus to a active cell\r\n     * */\r\n    public focusActiveCell(): void {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();\r\n            });\r\n        });\r\n    }\r\n}\r\n","/**\r\n * calendar-month-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\n\r\nconst DAYS_PER_WEEK = 7;\r\nconst WEEKS_PER_VIEW = 6;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-month-view',\r\n    exportAs: 'owlYearView',\r\n    templateUrl: './calendar-month-view.component.html',\r\n    styleUrls: ['./calendar-month-view.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlMonthViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * */\r\n    @Input() hideOtherMonths: boolean = false;\r\n\r\n    /**\r\n     * Define the first day of a week\r\n     * Sunday: 0 ~ Saturday: 6\r\n     * */\r\n    private _firstDayOfWeek: number = 0;\r\n    @Input()\r\n    get firstDayOfWeek(): number {\r\n        return this._firstDayOfWeek;\r\n    }\r\n\r\n    set firstDayOfWeek( val: number ) {\r\n        val = coerceNumberProperty(val);\r\n        if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\r\n            this._firstDayOfWeek = val;\r\n\r\n            if (this.initiated) {\r\n                this.generateWeekDays();\r\n                this.generateCalendar();\r\n                this.cdRef.markForCheck();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( val: SelectMode ) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        const oldSelected = this._selected;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n\r\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\r\n            this.setSelectedDates();\r\n        }\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values.map(( v ) => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n        this.setSelectedDates();\r\n    }\r\n\r\n    private _pickerMoment: T;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        this.firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this._pickerMoment),\r\n            this.dateTimeAdapter.getMonth(this._pickerMoment),\r\n            1\r\n        );\r\n\r\n        if (!this.isSameMonth(oldMoment, this._pickerMoment) && this.initiated) {\r\n            this.generateCalendar();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: ( date: T ) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter( filter: ( date: T ) => boolean ) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n\r\n        if (this.initiated) {\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    private _weekdays: Array<{ long: string, short: string, narrow: string }>;\r\n    get weekdays() {\r\n        return this._weekdays;\r\n    }\r\n\r\n    private _days: CalendarCell[][];\r\n    get days() {\r\n        return this._days;\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this.pickerMoment) {\r\n            return this.dateTimeAdapter.getDate(this.pickerMoment) + this.firstRowOffset - 1;\r\n        }\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    private firstDateOfMonth: T;\r\n\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private initiated = false;\r\n\r\n    private dateNames: string[];\r\n\r\n    /**\r\n     * The date of the month that today falls on.\r\n     * */\r\n    public todayDate: number | null;\r\n\r\n    /**\r\n     * An array to hold all selectedDates' value\r\n     * the value is the day number in current month\r\n     * */\r\n    public selectedDates: number[] = [];\r\n\r\n    // the index of cell that contains the first date of the month\r\n    public firstRowOffset: number;\r\n\r\n    /**\r\n     * Callback to invoke when a new date is selected\r\n     * */\r\n    @Output() readonly selectedChange = new EventEmitter<T | null>();\r\n\r\n    /**\r\n     * Callback to invoke when any date is selected.\r\n     * */\r\n    @Output() readonly userSelection = new EventEmitter<void>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true }) calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    @HostBinding('class.owl-dt-calendar-view')\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) private dateTimeFormats: OwlDateTimeFormats ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.generateWeekDays();\r\n\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.generateWeekDays();\r\n            this.generateCalendar();\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.generateCalendar();\r\n        this.initiated = true;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.localeSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     * @param {CalendarCell} cell\r\n     * @return {void}\r\n     * */\r\n    public selectCalendarCell( cell: CalendarCell ): void {\r\n\r\n        // Cases in which the date would not be selected\r\n        // 1, the calendar cell is NOT enabled (is NOT valid)\r\n        // 2, the selected date is NOT in current picker's month and the hideOtherMonths is enabled\r\n        if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\r\n            return;\r\n        }\r\n\r\n        this.selectDate(cell.value);\r\n    }\r\n\r\n    /**\r\n     * Handle a new date selected\r\n     * @param {number} date -- a new date's numeric value\r\n     * @return {void}\r\n     * */\r\n    private selectDate( date: number ): void {\r\n        const daysDiff = date - 1;\r\n        const selected = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\r\n\r\n        this.selectedChange.emit(selected);\r\n        this.userSelection.emit();\r\n    }\r\n\r\n    /**\r\n     * Handle keydown event on calendar body\r\n     * @param {KeyboardEvent} event\r\n     * @return {void}\r\n     * */\r\n    public handleCalendarKeydown( event: KeyboardEvent ): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 day\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 day\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 week\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 week\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to first day of current month\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment,\r\n                    1 - this.dateTimeAdapter.getDate(this.pickerMoment));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to last day of current month\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment,\r\n                    this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\r\n                    this.dateTimeAdapter.getDate(this.pickerMoment));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 month (or 1 year)\r\n            case PAGE_UP:\r\n                moment = event.altKey ?\r\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1) :\r\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 month (or 1 year)\r\n            case PAGE_DOWN:\r\n                moment = event.altKey ?\r\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1) :\r\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // select the pickerMoment\r\n            case ENTER:\r\n                if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\r\n                    this.selectDate(this.dateTimeAdapter.getDate(this.pickerMoment));\r\n                }\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar weekdays array\r\n     * */\r\n    private generateWeekDays(): void {\r\n\r\n        const longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\r\n        const shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\r\n        const narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\r\n        const firstDayOfWeek = this.firstDayOfWeek;\r\n\r\n        const weekdays = longWeekdays.map(( long, i ) => {\r\n            return {long, short: shortWeekdays[i], narrow: narrowWeekdays[i]};\r\n        });\r\n\r\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n\r\n        this.dateNames = this.dateTimeAdapter.getDateNames();\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar days array\r\n     * */\r\n    private generateCalendar(): void {\r\n        if (!this.pickerMoment) {\r\n            return;\r\n        }\r\n\r\n        this.todayDate = null;\r\n\r\n        // the first weekday of the month\r\n        const startWeekdayOfMonth = this.dateTimeAdapter.getDay(this.firstDateOfMonth);\r\n        const firstDayOfWeek = this.firstDayOfWeek;\r\n\r\n        // the amount of days from the first date of the month\r\n        // if it is < 0, it means the date is in previous month\r\n        let daysDiff = 0 - (startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) % DAYS_PER_WEEK;\r\n\r\n        // the index of cell that contains the first date of the month\r\n        this.firstRowOffset = Math.abs(daysDiff);\r\n\r\n        this._days = [];\r\n        for (let i = 0; i < WEEKS_PER_VIEW; i++) {\r\n            const week = [];\r\n            for (let j = 0; j < DAYS_PER_WEEK; j++) {\r\n                const date = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\r\n                const dateCell = this.createDateCell(date, daysDiff);\r\n\r\n                // check if the date is today\r\n                if (this.dateTimeAdapter.isSameDay(this.dateTimeAdapter.now(), date)) {\r\n                    this.todayDate = daysDiff + 1;\r\n                }\r\n\r\n                week.push(dateCell);\r\n                daysDiff += 1;\r\n            }\r\n            this._days.push(week);\r\n        }\r\n\r\n        this.setSelectedDates();\r\n    }\r\n\r\n    /**\r\n     * Creates CalendarCell for days.\r\n     * @param {Date} date -- the date that the cell represents\r\n     * @param {number} daysDiff -- the amount of days from the first date of the month\r\n     * @return {CalendarCell}\r\n     * */\r\n    private createDateCell( date: T, daysDiff: number ): CalendarCell {\r\n        // total days of the month\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment);\r\n        const dateNum = this.dateTimeAdapter.getDate(date);\r\n        // const dateName = this.dateNames[dateNum - 1];\r\n        const dateName = dateNum.toString();\r\n        const ariaLabel = this.dateTimeAdapter.format(date, this.dateTimeFormats.dateA11yLabel);\r\n\r\n        // check if the date if selectable\r\n        const enabled = this.isDateEnabled(date);\r\n\r\n        // check if date is not in current month\r\n        const dayValue = daysDiff + 1;\r\n        const out = dayValue < 1 || dayValue > daysInMonth;\r\n        const cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\r\n\r\n        return new CalendarCell(dayValue, dateName, ariaLabel, enabled, out, cellClass);\r\n    }\r\n\r\n    /**\r\n     * Check if the date is valid\r\n     * @param date\r\n     * @return {boolean}\r\n     * */\r\n    private isDateEnabled( date: T ): boolean {\r\n        return !!date &&\r\n            (!this.dateFilter || this.dateFilter(date)) &&\r\n            (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n            (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0);\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n\r\n    /**\r\n     * Check if the give dates are none-null and in the same month\r\n     * @param {Date} dateLeft\r\n     * @param {Date} dateRight\r\n     * @return {boolean}\r\n     * */\r\n    public isSameMonth( dateLeft: T, dateRight: T ): boolean {\r\n        return !!(dateLeft && dateRight &&\r\n            this.dateTimeAdapter.isValid(dateLeft) && this.dateTimeAdapter.isValid(dateRight) &&\r\n            this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight) &&\r\n            this.dateTimeAdapter.getMonth(dateLeft) === this.dateTimeAdapter.getMonth(dateRight));\r\n    }\r\n\r\n    /**\r\n     * Set the selectedDates value.\r\n     * In single mode, it has only one value which represent the selected date\r\n     * In range mode, it would has two values, one for the fromValue and the other for the toValue\r\n     * */\r\n    private setSelectedDates(): void {\r\n        this.selectedDates = [];\r\n\r\n        if (!this.firstDateOfMonth) {\r\n            return;\r\n        }\r\n\r\n        if (this.isInSingleMode && this.selected) {\r\n            const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(this.selected, this.firstDateOfMonth);\r\n            this.selectedDates[0] = dayDiff + 1;\r\n            return;\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this.selectedDates = this.selecteds.map(( selected ) => {\r\n                if (this.dateTimeAdapter.isValid(selected)) {\r\n                    const dayDiff = this.dateTimeAdapter.differenceInCalendarDays(selected, this.firstDateOfMonth);\r\n                    return dayDiff + 1;\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * calendar-year-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Inject,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { Subscription } from 'rxjs';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\n\r\nconst MONTHS_PER_YEAR = 12;\r\nconst MONTHS_PER_ROW = 3;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-year-view',\r\n    exportAs: 'owlMonthView',\r\n    templateUrl: './calendar-year-view.component.html',\r\n    styleUrls: ['./calendar-year-view.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlYearViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {\r\n\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( val: SelectMode ) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n        this.setSelectedMonths();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = [];\r\n        for (let i = 0; i < values.length; i++) {\r\n            const value = this.dateTimeAdapter.deserialize(values[i]);\r\n            this._selecteds.push(this.getValidDate(value));\r\n        }\r\n\r\n        this.setSelectedMonths();\r\n    }\r\n\r\n    private _pickerMoment: T | null;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        if (!this.hasSameYear(oldMoment, this._pickerMoment) && this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: ( date: T ) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter( filter: ( date: T ) => boolean ) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateMonthList();\r\n        }\r\n    }\r\n\r\n    private readonly monthNames: string[];\r\n\r\n    private _months: CalendarCell[][];\r\n    get months() {\r\n        return this._months;\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this._pickerMoment) {\r\n            return this.dateTimeAdapter.getMonth(this._pickerMoment);\r\n        }\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    private localeSub: Subscription = Subscription.EMPTY;\r\n\r\n    private initiated = false;\r\n\r\n    public todayMonth: number | null;\r\n\r\n    /**\r\n     * An array to hold all selectedDates' month value\r\n     * the value is the month number in current year\r\n     * */\r\n    public selectedMonths: number[] = [];\r\n\r\n    /**\r\n     * Callback to invoke when a new month is selected\r\n     * */\r\n    @Output() readonly change = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output() readonly monthSelected = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** Emits when use keyboard enter to select a calendar cell */\r\n    @Output() readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true }) calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    @HostBinding('class.owl-dt-calendar-view')\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) private dateTimeFormats: OwlDateTimeFormats ) {\r\n        this.monthNames = this.dateTimeAdapter.getMonthNames('short');\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(() => {\r\n            this.generateMonthList();\r\n            this.cdRef.markForCheck();\r\n        });\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this.generateMonthList();\r\n        this.initiated = true;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.localeSub.unsubscribe();\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     * @param {CalendarCell} cell\r\n     * @return {void}\r\n     * */\r\n    public selectCalendarCell( cell: CalendarCell ): void {\r\n        this.selectMonth(cell.value);\r\n    }\r\n\r\n    /**\r\n     * Handle a new month selected\r\n     * @param {number} month -- a new month's numeric value\r\n     * @return {void}\r\n     * */\r\n    private selectMonth( month: number ): void {\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            1\r\n        );\r\n\r\n        this.monthSelected.emit(firstDateOfMonth);\r\n\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\r\n        const result = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\r\n            this.dateTimeAdapter.getHours(this.pickerMoment),\r\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n            this.dateTimeAdapter.getSeconds(this.pickerMoment),\r\n        );\r\n\r\n        this.change.emit(result);\r\n    }\r\n\r\n    /**\r\n     * Handle keydown event on calendar body\r\n     * @param {KeyboardEvent} event\r\n     * @return {void}\r\n     * */\r\n    public handleCalendarKeydown( event: KeyboardEvent ): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 month\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 month\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 3 months\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 3 months\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to first month of current year\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment,\r\n                    -this.dateTimeAdapter.getMonth(this.pickerMoment));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // move to last month of current year\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment,\r\n                    11 - this.dateTimeAdapter.getMonth(this.pickerMoment));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 year (or 10 year)\r\n            case PAGE_UP:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year (or 10 year)\r\n            case PAGE_DOWN:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // Select current month\r\n            case ENTER:\r\n                this.selectMonth(this.dateTimeAdapter.getMonth(this.pickerMoment));\r\n                this.keyboardEnter.emit();\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the calendar month list\r\n     * */\r\n    private generateMonthList(): void {\r\n\r\n        if (!this.pickerMoment) {\r\n            return;\r\n        }\r\n\r\n        this.setSelectedMonths();\r\n        this.todayMonth = this.getMonthInCurrentYear(this.dateTimeAdapter.now());\r\n\r\n        this._months = [];\r\n        for (let i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\r\n            const row = [];\r\n\r\n            for (let j = 0; j < MONTHS_PER_ROW; j++) {\r\n                const month = j + i * MONTHS_PER_ROW;\r\n                const monthCell = this.createMonthCell(month);\r\n                row.push(monthCell);\r\n            }\r\n\r\n            this._months.push(row);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Creates an CalendarCell for the given month.\r\n     * @param {number} month\r\n     * @return {CalendarCell}\r\n     * */\r\n    private createMonthCell( month: number ): CalendarCell {\r\n        const startDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\r\n        const ariaLabel = this.dateTimeAdapter.format(startDateOfMonth, this.dateTimeFormats.monthYearA11yLabel);\r\n        const cellClass = 'owl-dt-month-' + month;\r\n        return new CalendarCell(month, this.monthNames[month], ariaLabel, this.isMonthEnabled(month), false, cellClass);\r\n    }\r\n\r\n    /**\r\n     * Check if the given month is enable\r\n     * @param {number} month -- the month's numeric value\r\n     * @return {boolean}\r\n     * */\r\n    private isMonthEnabled( month: number ): boolean {\r\n\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            this.dateTimeAdapter.getYear(this.pickerMoment),\r\n            month,\r\n            1\r\n        );\r\n\r\n        // If any date in the month is selectable,\r\n        // we count the month as enable\r\n        for (let date = firstDateOfMonth;\r\n             this.dateTimeAdapter.getMonth(date) === month;\r\n             date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\r\n            if (!!date &&\r\n                (!this.dateFilter || this.dateFilter(date)) &&\r\n                (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\r\n                (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets the month in this year that the given Date falls on.\r\n     * Returns null if the given Date is in another year.\r\n     * @param {Date | null} date\r\n     * @return {number | null}\r\n     */\r\n    private getMonthInCurrentYear( date: T | null ): number {\r\n        if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\r\n            const result = this.dateTimeAdapter.compareYear(date, this._pickerMoment);\r\n\r\n            // < 0 : the given date's year is before pickerMoment's year, we return -1 as selected month value.\r\n            // > 0 : the given date's year is after pickerMoment's year, we return 12 as selected month value.\r\n            // 0 : the give date's year is same as the pickerMoment's year, we return the actual month value.\r\n            if (result < 0) {\r\n                return -1;\r\n            } else if (result > 0) {\r\n                return 12;\r\n            } else {\r\n                return this.dateTimeAdapter.getMonth(date);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the selectedMonths value\r\n     * In single mode, it has only one value which represent the month the selected date in\r\n     * In range mode, it would has two values, one for the month the fromValue in and the other for the month the toValue in\r\n     * */\r\n    private setSelectedMonths(): void {\r\n        this.selectedMonths = [];\r\n        if (this.isInSingleMode && this.selected) {\r\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selecteds[0]);\r\n            this.selectedMonths[1] = this.getMonthInCurrentYear(this.selecteds[1]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check the given dates are in the same year\r\n     * @param {Date} dateLeft\r\n     * @param {Date} dateRight\r\n     * @return {boolean}\r\n     * */\r\n    private hasSameYear( dateLeft: T, dateRight: T ) {\r\n        return !!(dateLeft && dateRight &&\r\n            this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight));\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * calendar-multi-year-view.component\r\n */\r\n\r\nimport {\r\n    AfterContentInit,\r\n    ChangeDetectionStrategy, ChangeDetectorRef,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    OnInit,\r\n    Optional,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { SelectMode } from './date-time.class';\r\nimport {\r\n    DOWN_ARROW,\r\n    END,\r\n    ENTER,\r\n    HOME,\r\n    LEFT_ARROW,\r\n    PAGE_DOWN,\r\n    PAGE_UP,\r\n    RIGHT_ARROW,\r\n    UP_ARROW\r\n} from '@angular/cdk/keycodes';\r\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\n\r\nexport const YEARS_PER_ROW = 3;\r\nexport const YEAR_ROWS = 7;\r\n\r\n@Component({\r\n    selector: 'owl-date-time-multi-year-view',\r\n    templateUrl: './calendar-multi-year-view.component.html',\r\n    styleUrls: ['./calendar-multi-year-view.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlMultiYearViewComponent<T> implements OnInit, AfterContentInit {\r\n\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode(): SelectMode {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( val: SelectMode ) {\r\n        this._selectMode = val;\r\n        if (this.initiated) {\r\n            this.setSelectedYears();\r\n            this.cdRef.markForCheck();\r\n        }\r\n    }\r\n\r\n    /** The currently selected date. */\r\n    private _selected: T | null;\r\n    @Input()\r\n    get selected(): T | null {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        const oldSelected = this._selected;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._selected = this.getValidDate(value);\r\n\r\n        if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\r\n            this.setSelectedYears();\r\n        }\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    @Input()\r\n    get selecteds(): T[] {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values.map(( v ) => {\r\n            v = this.dateTimeAdapter.deserialize(v);\r\n            return this.getValidDate(v);\r\n        });\r\n        this.setSelectedYears();\r\n    }\r\n\r\n    private _pickerMoment: T | null;\r\n    @Input()\r\n    get pickerMoment() {\r\n        return this._pickerMoment;\r\n    }\r\n\r\n    set pickerMoment( value: T ) {\r\n        const oldMoment = this._pickerMoment;\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\r\n\r\n        if (oldMoment && this._pickerMoment &&\r\n            !this.isSameYearList(oldMoment, this._pickerMoment)) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter: ( date: T ) => boolean;\r\n    @Input()\r\n    get dateFilter() {\r\n        return this._dateFilter;\r\n    }\r\n\r\n    set dateFilter( filter: ( date: T ) => boolean ) {\r\n        this._dateFilter = filter;\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /** The minimum selectable date. */\r\n    private _minDate: T | null;\r\n    @Input()\r\n    get minDate(): T | null {\r\n        return this._minDate;\r\n    }\r\n\r\n    set minDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._minDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    /** The maximum selectable date. */\r\n    private _maxDate: T | null;\r\n    @Input()\r\n    get maxDate(): T | null {\r\n        return this._maxDate;\r\n    }\r\n\r\n    set maxDate( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        this._maxDate = this.getValidDate(value);\r\n        if (this.initiated) {\r\n            this.generateYearList();\r\n        }\r\n    }\r\n\r\n    private _todayYear: number;\r\n    get todayYear(): number {\r\n        return this._todayYear;\r\n    }\r\n\r\n    private _years: CalendarCell[][];\r\n    get years() {\r\n        return this._years;\r\n    }\r\n\r\n    private _selectedYears: number[];\r\n    get selectedYears(): number[] {\r\n        return this._selectedYears;\r\n    }\r\n\r\n    private initiated = false;\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this.selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\r\n            || this.selectMode === 'rangeTo';\r\n    }\r\n\r\n    get activeCell(): number {\r\n        if (this._pickerMoment) {\r\n            return this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS);\r\n        }\r\n    }\r\n\r\n    get tableHeader(): string {\r\n        if (this._years && this._years.length > 0) {\r\n            return `${this._years[0][0].displayValue} ~ ${this._years[YEAR_ROWS - 1][YEARS_PER_ROW - 1].displayValue}`\r\n        }\r\n    }\r\n\r\n    get prevButtonLabel(): string {\r\n        return this.pickerIntl.prevMultiYearLabel;\r\n    }\r\n\r\n    get nextButtonLabel(): string {\r\n        return this.pickerIntl.nextMultiYearLabel;\r\n    }\r\n\r\n    /**\r\n     * Callback to invoke when a new month is selected\r\n     * */\r\n    @Output() readonly change = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits the selected year. This doesn't imply a change on the selected date\r\n     * */\r\n    @Output() readonly yearSelected = new EventEmitter<T>();\r\n\r\n    /** Emits when any date is activated. */\r\n    @Output() readonly pickerMomentChange: EventEmitter<T> = new EventEmitter<T>();\r\n\r\n    /** Emits when use keyboard enter to select a calendar cell */\r\n    @Output() readonly keyboardEnter: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /** The body of calendar table */\r\n    @ViewChild(OwlCalendarBodyComponent, { static: true }) calendarBodyElm: OwlCalendarBodyComponent;\r\n\r\n    @HostBinding('class.owl-dt-calendar-view')\r\n    get owlDTCalendarView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-calendar-multi-year-view')\r\n    get owlDTCalendarMultiYearView(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor( private cdRef: ChangeDetectorRef,\r\n                 private pickerIntl: OwlDateTimeIntl,\r\n                 @Optional() private dateTimeAdapter: DateTimeAdapter<T> ) {\r\n    }\r\n\r\n    public ngOnInit() {\r\n    }\r\n\r\n    public ngAfterContentInit(): void {\r\n        this._todayYear = this.dateTimeAdapter.getYear(this.dateTimeAdapter.now());\r\n        this.generateYearList();\r\n        this.initiated = true;\r\n    }\r\n\r\n    /**\r\n     * Handle a calendarCell selected\r\n     * @param {CalendarCell} cell\r\n     * @return {void}\r\n     * */\r\n    public selectCalendarCell( cell: CalendarCell ): void {\r\n        this.selectYear(cell.value);\r\n    }\r\n\r\n    private selectYear( year: number ): void {\r\n        this.yearSelected.emit(this.dateTimeAdapter.createDate(year, 0, 1));\r\n        const firstDateOfMonth = this.dateTimeAdapter.createDate(\r\n            year,\r\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\r\n            1\r\n        );\r\n        const daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\r\n        const selected = this.dateTimeAdapter.createDate(\r\n            year,\r\n            this.dateTimeAdapter.getMonth(this.pickerMoment),\r\n            Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)),\r\n            this.dateTimeAdapter.getHours(this.pickerMoment),\r\n            this.dateTimeAdapter.getMinutes(this.pickerMoment),\r\n            this.dateTimeAdapter.getSeconds(this.pickerMoment),\r\n        );\r\n\r\n        this.change.emit(selected);\r\n    }\r\n\r\n    /**\r\n     * Generate the previous year list\r\n     * */\r\n    public prevYearList( event: any ): void {\r\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1 * YEAR_ROWS * YEARS_PER_ROW);\r\n        this.generateYearList();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Generate the next year list\r\n     * */\r\n    public nextYearList( event: any ): void {\r\n        this._pickerMoment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, YEAR_ROWS * YEARS_PER_ROW);\r\n        this.generateYearList();\r\n        event.preventDefault();\r\n    }\r\n\r\n    public generateYearList(): void {\r\n        this._years = [];\r\n\r\n        const pickerMomentYear = this.dateTimeAdapter.getYear(this._pickerMoment);\r\n        const offset = pickerMomentYear % (YEARS_PER_ROW * YEAR_ROWS);\r\n\r\n        for (let i = 0; i < YEAR_ROWS; i++) {\r\n            const row = [];\r\n\r\n            for (let j = 0; j < YEARS_PER_ROW; j++) {\r\n                const year = pickerMomentYear - offset + (j + i * YEARS_PER_ROW);\r\n                const yearCell = this.createYearCell(year);\r\n                row.push(yearCell);\r\n            }\r\n\r\n            this._years.push(row);\r\n        }\r\n\r\n        return;\r\n\r\n    }\r\n\r\n    /** Whether the previous period button is enabled. */\r\n    public previousEnabled(): boolean {\r\n        if (!this.minDate) {\r\n            return true;\r\n        }\r\n        return !this.minDate || !this.isSameYearList(this._pickerMoment, this.minDate);\r\n    }\r\n\r\n    /** Whether the next period button is enabled. */\r\n    public nextEnabled(): boolean {\r\n        return !this.maxDate || !this.isSameYearList(this._pickerMoment, this.maxDate);\r\n    }\r\n\r\n    public handleCalendarKeydown( event: KeyboardEvent ): void {\r\n        let moment;\r\n        switch (event.keyCode) {\r\n            // minus 1 year\r\n            case LEFT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year\r\n            case RIGHT_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 3 years\r\n            case UP_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, -1 * YEARS_PER_ROW);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 3 years\r\n            case DOWN_ARROW:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment, YEARS_PER_ROW);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // go to the first year of the year page\r\n            case HOME:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\r\n                    -this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // go to the last year of the year page\r\n            case END:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this._pickerMoment,\r\n                    (YEARS_PER_ROW * YEAR_ROWS) - this.dateTimeAdapter.getYear(this._pickerMoment) % (YEARS_PER_ROW * YEAR_ROWS) - 1);\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // minus 1 year page (or 10 year pages)\r\n            case PAGE_UP:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 * (YEARS_PER_ROW * YEAR_ROWS) : -1 * (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            // add 1 year page (or 10 year pages)\r\n            case PAGE_DOWN:\r\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 * (YEARS_PER_ROW * YEAR_ROWS) : (YEARS_PER_ROW * YEAR_ROWS));\r\n                this.pickerMomentChange.emit(moment);\r\n                break;\r\n\r\n            case ENTER:\r\n                this.selectYear(this.dateTimeAdapter.getYear(this._pickerMoment));\r\n                this.keyboardEnter.emit();\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        this.focusActiveCell();\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Creates an CalendarCell for the given year.\r\n     * @param {number} year\r\n     * @return {CalendarCell}\r\n     * */\r\n    private createYearCell( year: number ): CalendarCell {\r\n        const startDateOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\r\n        const ariaLabel = this.dateTimeAdapter.getYearName(startDateOfYear);\r\n        const cellClass = 'owl-dt-year-' + year;\r\n        return new CalendarCell(year, year.toString(), ariaLabel, this.isYearEnabled(year), false, cellClass);\r\n    }\r\n\r\n    private setSelectedYears(): void {\r\n\r\n        this._selectedYears = [];\r\n\r\n        if (this.isInSingleMode && this.selected) {\r\n            this._selectedYears[0] = this.dateTimeAdapter.getYear(this.selected);\r\n        }\r\n\r\n        if (this.isInRangeMode && this.selecteds) {\r\n            this._selectedYears = this.selecteds.map(( selected ) => {\r\n                if (this.dateTimeAdapter.isValid(selected)) {\r\n                    return this.dateTimeAdapter.getYear(selected);\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    /** Whether the given year is enabled. */\r\n    private isYearEnabled( year: number ) {\r\n        // disable if the year is greater than maxDate lower than minDate\r\n        if (year === undefined || year === null ||\r\n            (this.maxDate && year > this.dateTimeAdapter.getYear(this.maxDate)) ||\r\n            (this.minDate && year < this.dateTimeAdapter.getYear(this.minDate))) {\r\n            return false;\r\n        }\r\n\r\n        // enable if it reaches here and there's no filter defined\r\n        if (!this.dateFilter) {\r\n            return true;\r\n        }\r\n\r\n        const firstOfYear = this.dateTimeAdapter.createDate(year, 0, 1);\r\n\r\n        // If any date in the year is enabled count the year as enabled.\r\n        for (let date = firstOfYear; this.dateTimeAdapter.getYear(date) == year;\r\n             date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\r\n            if (this.dateFilter(date)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private isSameYearList( date1: T, date2: T ): boolean {\r\n        return Math.floor(this.dateTimeAdapter.getYear(date1) / (YEARS_PER_ROW * YEAR_ROWS)) ===\r\n            Math.floor(this.dateTimeAdapter.getYear(date2) / (YEARS_PER_ROW * YEAR_ROWS));\r\n    }\r\n\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate( obj: any ): T | null {\r\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n\r\n    private focusActiveCell() {\r\n        this.calendarBodyElm.focusActiveCell();\r\n    }\r\n}\r\n","/**\r\n * timer-box.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    HostBinding,\r\n    Input,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\n@Component({\r\n    exportAs: 'owlDateTimeTimerBox',\r\n    selector: 'owl-date-time-timer-box',\r\n    templateUrl: './timer-box.component.html',\r\n    styleUrls: ['./timer-box.component.scss'],\r\n    preserveWhitespaces: false,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class OwlTimerBoxComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() showDivider = false;\r\n\r\n    @Input() upBtnAriaLabel: string;\r\n\r\n    @Input() upBtnDisabled: boolean;\r\n\r\n    @Input() downBtnAriaLabel: string;\r\n\r\n    @Input() downBtnDisabled: boolean;\r\n\r\n    /**\r\n     * Value would be displayed in the box\r\n     * If it is null, the box would display [value]\r\n     * */\r\n    @Input() boxValue: number;\r\n\r\n    @Input() value: number;\r\n\r\n    @Input() min: number;\r\n\r\n    @Input() max: number;\r\n\r\n    @Input() step = 1;\r\n\r\n    @Input() inputLabel: string;\r\n\r\n    @Output() valueChange = new EventEmitter<number>();\r\n\r\n    @Output() inputChange = new EventEmitter<number>();\r\n\r\n    private inputStream = new Subject<string>();\r\n\r\n    private inputStreamSub = Subscription.EMPTY;\r\n\r\n    get displayValue(): number {\r\n        return this.boxValue || this.value;\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-timer-box')\r\n    get owlDTTimerBoxClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.inputStreamSub = this.inputStream.pipe(\r\n            debounceTime(500),\r\n            distinctUntilChanged()\r\n        ).subscribe(( val: string ) => {\r\n            if (val) {\r\n                const inputValue = coerceNumberProperty(val, 0);\r\n                this.updateValueViaInput(inputValue);\r\n            }\r\n        })\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.inputStreamSub.unsubscribe();\r\n    }\r\n\r\n    public upBtnClicked(): void {\r\n        this.updateValue(this.value + this.step);\r\n    }\r\n\r\n    public downBtnClicked(): void {\r\n        this.updateValue(this.value - this.step);\r\n    }\r\n\r\n    public handleInputChange( val: string ): void {\r\n        this.inputStream.next(val);\r\n    }\r\n\r\n    private updateValue( value: number ): void {\r\n        this.valueChange.emit(value);\r\n    }\r\n\r\n    private updateValueViaInput( value: number ): void {\r\n        if (value > this.max || value < this.min) {\r\n            return;\r\n        }\r\n        this.inputChange.emit(value);\r\n    }\r\n}\r\n","/**\r\n * numberFixedLen.pipe\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'numberFixedLen'\r\n})\r\nexport class NumberFixedLenPipe implements PipeTransform {\r\n    transform( num: number, len: number ): any {\r\n        const number = Math.floor(num);\r\n        const length = Math.floor(len);\r\n\r\n        if (num === null || isNaN(number) || isNaN(length)) {\r\n            return num;\r\n        }\r\n\r\n        let numString = number.toString();\r\n\r\n        while (numString.length < length) {\r\n            numString = '0' + numString;\r\n        }\r\n\r\n        return numString;\r\n    }\r\n}\r\n","/**\r\n * date-time-inline.component\r\n */\r\n\r\nimport {\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component, EventEmitter,\r\n    forwardRef, HostBinding,\r\n    Inject,\r\n    Input,\r\n    OnInit,\r\n    Optional, Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS, OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\n\r\nexport const OWL_DATETIME_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => OwlDateTimeInlineComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'owl-date-time-inline',\r\n    templateUrl: './date-time-inline.component.html',\r\n    styleUrls: ['./date-time-inline.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    preserveWhitespaces: false,\r\n    providers: [\r\n        OWL_DATETIME_VALUE_ACCESSOR,\r\n    ],\r\n})\r\n\r\nexport class OwlDateTimeInlineComponent<T> extends OwlDateTime<T> implements OnInit, ControlValueAccessor {\r\n\r\n    @ViewChild(OwlDateTimeContainerComponent, { static: true }) container: OwlDateTimeContainerComponent<T>;\r\n\r\n    /**\r\n     * Set the type of the dateTime picker\r\n     *      'both' -- show both calendar and timer\r\n     *      'calendar' -- show only calendar\r\n     *      'timer' -- show only timer\r\n     * @default 'both'\r\n     * @type {'both' | 'calendar' | 'timer'}\r\n     * */\r\n    private _pickerType: PickerType = 'both';\r\n    @Input()\r\n    get pickerType(): PickerType {\r\n        return this._pickerType;\r\n    }\r\n\r\n    set pickerType( val: PickerType ) {\r\n        if (val !== this._pickerType) {\r\n            this._pickerType = val;\r\n        }\r\n    }\r\n\r\n    private _disabled = false;\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return !!this._disabled;\r\n    }\r\n\r\n    set disabled( value: boolean ) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n    }\r\n\r\n    private _selectMode: SelectMode = 'single';\r\n    @Input()\r\n    get selectMode() {\r\n        return this._selectMode;\r\n    }\r\n\r\n    set selectMode( mode: SelectMode ) {\r\n\r\n        if (mode !== 'single' && mode !== 'range' &&\r\n            mode !== 'rangeFrom' && mode !== 'rangeTo') {\r\n            throw Error('OwlDateTime Error: invalid selectMode value!');\r\n        }\r\n\r\n        this._selectMode = mode;\r\n    }\r\n\r\n    /** The date to open the calendar to initially. */\r\n    private _startAt: T | null;\r\n    @Input()\r\n    get startAt(): T | null {\r\n\r\n        if (this._startAt) {\r\n            return this._startAt;\r\n        }\r\n\r\n        if (this.selectMode === 'single') {\r\n            return this.value || null\r\n        } else if (this.selectMode === 'range' ||\r\n            this.selectMode === 'rangeFrom') {\r\n            return this.values[0] || null;\r\n        } else if (this.selectMode === 'rangeTo') {\r\n            return this.values[1] || null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    set startAt( date: T | null ) {\r\n        this._startAt = this.getValidDate(this.dateTimeAdapter.deserialize(date));\r\n    }\r\n\r\n    private _dateTimeFilter: ( date: T | null ) => boolean;\r\n    @Input('owlDateTimeFilter')\r\n    get dateTimeFilter() {\r\n        return this._dateTimeFilter;\r\n    }\r\n\r\n    set dateTimeFilter( filter: ( date: T | null ) => boolean ) {\r\n        this._dateTimeFilter = filter;\r\n    }\r\n\r\n    /** The minimum valid date. */\r\n    private _min: T | null;\r\n\r\n    get minDateTime(): T | null {\r\n        return this._min || null;\r\n    }\r\n\r\n    @Input('min')\r\n    set minDateTime( value: T | null ) {\r\n        this._min = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    /** The maximum valid date. */\r\n    private _max: T | null;\r\n\r\n    get maxDateTime(): T | null {\r\n        return this._max || null;\r\n    }\r\n\r\n    @Input('max')\r\n    set maxDateTime( value: T | null ) {\r\n        this._max = this.getValidDate(this.dateTimeAdapter.deserialize(value));\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _value: T | null;\r\n    @Input()\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value( value: T | null ) {\r\n        value = this.dateTimeAdapter.deserialize(value);\r\n        value = this.getValidDate(value);\r\n        this._value = value;\r\n        this.selected = value;\r\n    }\r\n\r\n    private _values: T[] = [];\r\n    @Input()\r\n    get values() {\r\n        return this._values;\r\n    }\r\n\r\n    set values( values: T[] ) {\r\n        if (values && values.length > 0) {\r\n            values = values.map(( v ) => {\r\n                v = this.dateTimeAdapter.deserialize(v);\r\n                v = this.getValidDate(v);\r\n                return v ? this.dateTimeAdapter.clone(v) : null;\r\n            });\r\n            this._values = [...values];\r\n            this.selecteds = [...values];\r\n        } else {\r\n            this._values = [];\r\n            this.selecteds = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits selected year in multi-year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output() yearSelected = new EventEmitter<T>();\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    @Output() monthSelected = new EventEmitter<T>();\r\n\r\n    private _selected: T | null;\r\n    get selected() {\r\n        return this._selected;\r\n    }\r\n\r\n    set selected( value: T | null ) {\r\n        this._selected = value;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    private _selecteds: T[] = [];\r\n    get selecteds() {\r\n        return this._selecteds;\r\n    }\r\n\r\n    set selecteds( values: T[] ) {\r\n        this._selecteds = values;\r\n        this.changeDetector.markForCheck();\r\n    }\r\n\r\n    get opened(): boolean {\r\n        return true;\r\n    }\r\n\r\n    get pickerMode(): PickerMode {\r\n        return 'inline';\r\n    }\r\n\r\n    get isInSingleMode(): boolean {\r\n        return this._selectMode === 'single';\r\n    }\r\n\r\n    get isInRangeMode(): boolean {\r\n        return this._selectMode === 'range' || this._selectMode === 'rangeFrom'\r\n            || this._selectMode === 'rangeTo';\r\n    }\r\n\r\n    @HostBinding('class.owl-dt-inline')\r\n    get owlDTInlineClass(): boolean {\r\n        return true;\r\n    }\r\n\r\n    private onModelChange: Function = () => {\r\n    }\r\n    private onModelTouched: Function = () => {\r\n    }\r\n\r\n    constructor( protected changeDetector: ChangeDetectorRef,\r\n                 @Optional() protected dateTimeAdapter: DateTimeAdapter<T>,\r\n                 @Optional() @Inject(OWL_DATE_TIME_FORMATS) protected dateTimeFormats: OwlDateTimeFormats ) {\r\n        super(dateTimeAdapter, dateTimeFormats);\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.container.picker = this;\r\n    }\r\n\r\n    public writeValue( value: any ): void {\r\n        if (this.isInSingleMode) {\r\n            this.value = value;\r\n            this.container.pickerMoment = value;\r\n        } else {\r\n            this.values = value;\r\n            this.container.pickerMoment = this._values[this.container.activeSelectedIndex];\r\n        }\r\n    }\r\n\r\n    public registerOnChange( fn: any ): void {\r\n        this.onModelChange = fn;\r\n    }\r\n\r\n    public registerOnTouched( fn: any ): void {\r\n        this.onModelTouched = fn;\r\n    }\r\n\r\n    public setDisabledState( isDisabled: boolean ): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public select( date: T[] | T ): void {\r\n\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (Array.isArray(date)) {\r\n            this.values = [...date];\r\n        } else {\r\n            this.value = date;\r\n        }\r\n        this.onModelChange(date);\r\n        this.onModelTouched();\r\n    }\r\n\r\n    /**\r\n     * Emits the selected year in multi-year view\r\n     * */\r\n    public selectYear(normalizedYear: T): void {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n\r\n    /**\r\n     * Emits selected month in year view\r\n     * */\r\n    public selectMonth(normalizedMonth: T): void {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n}\r\n","/**\r\n * dialog.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { OWL_DIALOG_SCROLL_STRATEGY_PROVIDER, OwlDialogService } from './dialog.service';\r\nimport { OwlDialogContainerComponent } from './dialog-container.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, A11yModule, OverlayModule, PortalModule],\r\n    exports: [],\r\n    declarations: [\r\n        OwlDialogContainerComponent,\r\n    ],\r\n    providers: [\r\n        OWL_DIALOG_SCROLL_STRATEGY_PROVIDER,\r\n        OwlDialogService,\r\n    ],\r\n    entryComponents: [\r\n        OwlDialogContainerComponent,\r\n    ]\r\n})\r\nexport class OwlDialogModule {\r\n}\r\n","/**\r\n * date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { OwlDateTimeTriggerDirective } from './date-time-picker-trigger.directive';\r\nimport { OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER, OwlDateTimeComponent } from './date-time-picker.component';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\nimport { OwlDateTimeInputDirective } from './date-time-picker-input.directive';\r\n// import { OwlDateTimeIntl } from './date-time-picker-intl.service';\r\nimport { OwlMonthViewComponent } from './calendar-month-view.component';\r\nimport { OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { OwlYearViewComponent } from './calendar-year-view.component';\r\nimport { OwlMultiYearViewComponent } from './calendar-multi-year-view.component';\r\nimport { OwlTimerBoxComponent } from './timer-box.component';\r\nimport { OwlTimerComponent } from './timer.component';\r\nimport { NumberFixedLenPipe } from './numberedFixLen.pipe';\r\nimport { OwlCalendarComponent } from './calendar.component';\r\nimport { OwlDateTimeInlineComponent } from './date-time-inline.component';\r\nimport { OwlDialogModule } from '../dialog/dialog.module';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, OverlayModule, OwlDialogModule, A11yModule],\r\n    exports: [\r\n        OwlCalendarComponent,\r\n        OwlTimerComponent,\r\n        OwlDateTimeTriggerDirective,\r\n        OwlDateTimeInputDirective,\r\n        OwlDateTimeComponent,\r\n        OwlDateTimeInlineComponent,\r\n        OwlMultiYearViewComponent,\r\n        OwlYearViewComponent,\r\n        OwlMonthViewComponent,\r\n    ],\r\n    declarations: [\r\n        OwlDateTimeTriggerDirective,\r\n        OwlDateTimeInputDirective,\r\n        OwlDateTimeComponent,\r\n        OwlDateTimeContainerComponent,\r\n        OwlMultiYearViewComponent,\r\n        OwlYearViewComponent,\r\n        OwlMonthViewComponent,\r\n        OwlTimerComponent,\r\n        OwlTimerBoxComponent,\r\n        OwlCalendarComponent,\r\n        OwlCalendarBodyComponent,\r\n        NumberFixedLenPipe,\r\n        OwlDateTimeInlineComponent,\r\n    ],\r\n    providers: [\r\n        // OwlDateTimeIntl,\r\n        OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER,\r\n    ],\r\n    entryComponents: [OwlDateTimeContainerComponent],\r\n})\r\nexport class OwlDateTimeModule {}\r\n","/**\r\n * native-date-time-adapter.class\r\n */\r\n\r\nimport { Inject, Injectable, Optional } from '@angular/core';\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_LOCALE } from './date-time-adapter.class';\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n    'long': [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n        'October', 'November', 'December'\r\n    ],\r\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n/** Whether the browser supports the Intl API. */\r\nconst SUPPORTS_INTL_API = typeof Intl !== 'undefined';\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX =\r\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>( length: number, valueFunction: ( index: number ) => T ): T[] {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n\r\n@Injectable()\r\nexport class NativeDateTimeAdapter extends DateTimeAdapter<Date> {\r\n\r\n    /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n    private readonly _clampDate: boolean;\r\n\r\n    /**\r\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n     * will produce `'8/13/1800'`.\r\n     */\r\n    useUtcForDisplay: boolean;\r\n\r\n    constructor( @Optional() @Inject(OWL_DATE_TIME_LOCALE) private owlDateTimeLocale: string,\r\n                 platform: Platform ) {\r\n        super();\r\n        super.setLocale(owlDateTimeLocale);\r\n\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        this.useUtcForDisplay = !platform.TRIDENT;\r\n        this._clampDate = platform.TRIDENT || platform.EDGE;\r\n    }\r\n\r\n    public getYear( date: Date ): number {\r\n        return date.getFullYear();\r\n    }\r\n\r\n    public getMonth( date: Date ): number {\r\n        return date.getMonth();\r\n    }\r\n\r\n    public getDay( date: Date ): number {\r\n        return date.getDay();\r\n    }\r\n\r\n    public getDate( date: Date ): number {\r\n        return date.getDate();\r\n    }\r\n\r\n    public getHours( date: Date ): number {\r\n        return date.getHours();\r\n    }\r\n\r\n    public getMinutes( date: Date ): number {\r\n        return date.getMinutes();\r\n    }\r\n\r\n    public getSeconds( date: Date ): number {\r\n        return date.getSeconds();\r\n    }\r\n\r\n    public getTime( date: Date ): number {\r\n        return date.getTime();\r\n    }\r\n\r\n    public getNumDaysInMonth( date: Date ): number {\r\n        const lastDateOfMonth = this.createDateWithOverflow(\r\n            this.getYear(date),\r\n            this.getMonth(date) + 1,\r\n            0\r\n        );\r\n\r\n        return this.getDate(lastDateOfMonth);\r\n    }\r\n\r\n    public differenceInCalendarDays( dateLeft: Date, dateRight: Date ): number {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            const dateLeftStartOfDay = this.createDate(\r\n                this.getYear(dateLeft),\r\n                this.getMonth(dateLeft),\r\n                this.getDate(dateLeft)\r\n            );\r\n            const dateRightStartOfDay = this.createDate(\r\n                this.getYear(dateRight),\r\n                this.getMonth(dateRight),\r\n                this.getDate(dateRight)\r\n            );\r\n\r\n            const timeStampLeft = this.getTime(dateLeftStartOfDay) - dateLeftStartOfDay.getTimezoneOffset() * this.milliseondsInMinute;\r\n            const timeStampRight = this.getTime(dateRightStartOfDay) - dateRightStartOfDay.getTimezoneOffset() * this.milliseondsInMinute;\r\n            return Math.round((timeStampLeft - timeStampRight) / this.millisecondsInDay);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public getYearName( date: Date ): string {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\r\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return String(this.getYear(date));\r\n    }\r\n\r\n    public getMonthNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\r\n            return range(12, i => this.stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    }\r\n\r\n    public getDayOfWeekNames( style: 'long' | 'short' | 'narrow' ): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\r\n            return range(7, i => this.stripDirectionalityCharacters(\r\n                this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    }\r\n\r\n    public getDateNames(): string[] {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\r\n            return range(31, i => this.stripDirectionalityCharacters(\r\n                this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    }\r\n\r\n    public toIso8601( date: Date ): string {\r\n        return date.toISOString();\r\n    }\r\n\r\n    public isEqual( dateLeft: Date, dateRight: Date ): boolean {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            return dateLeft.getTime() === dateRight.getTime();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isSameDay( dateLeft: Date, dateRight: Date ): boolean {\r\n        if (this.isValid(dateLeft) && this.isValid(dateRight)) {\r\n            const dateLeftStartOfDay = this.clone(dateLeft);\r\n            const dateRightStartOfDay = this.clone(dateRight);\r\n            dateLeftStartOfDay.setHours(0, 0, 0, 0);\r\n            dateRightStartOfDay.setHours(0, 0, 0, 0);\r\n            return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public isValid( date: Date ): boolean {\r\n        return date && !isNaN(date.getTime());\r\n    }\r\n\r\n    public invalid(): Date {\r\n        return new Date(NaN);\r\n    }\r\n\r\n    public isDateInstance( obj: any ): boolean {\r\n        return obj instanceof Date;\r\n    }\r\n\r\n    public addCalendarYears( date: Date, amount: number ): Date {\r\n        return this.addCalendarMonths(date, amount * 12);\r\n    }\r\n\r\n    public addCalendarMonths( date: Date, amount: number ): Date {\r\n        const result = this.clone(date);\r\n        amount = Number(amount);\r\n\r\n        const desiredMonth = result.getMonth() + amount;\r\n        const dateWithDesiredMonth = new Date(0);\r\n        dateWithDesiredMonth.setFullYear(result.getFullYear(), desiredMonth, 1);\r\n        dateWithDesiredMonth.setHours(0, 0, 0, 0);\r\n\r\n        const daysInMonth = this.getNumDaysInMonth(dateWithDesiredMonth);\r\n        // Set the last day of the new month\r\n        // if the original date was the last day of the longer month\r\n        result.setMonth(desiredMonth, Math.min(daysInMonth, result.getDate()));\r\n        return result;\r\n    }\r\n\r\n    public addCalendarDays( date: Date, amount: number ): Date {\r\n        const result = this.clone(date);\r\n        amount = Number(amount);\r\n        result.setDate(result.getDate() + amount);\r\n        return result;\r\n    }\r\n\r\n    public setHours( date: Date, amount: number ): Date {\r\n        const result = this.clone(date);\r\n        result.setHours(amount);\r\n        return result;\r\n    }\r\n\r\n    public setMinutes( date: Date, amount: number ): Date {\r\n        const result = this.clone(date);\r\n        result.setMinutes(amount);\r\n        return result;\r\n    }\r\n\r\n    public setSeconds( date: Date, amount: number ): Date {\r\n        const result = this.clone(date);\r\n        result.setSeconds(amount);\r\n        return result;\r\n    }\r\n\r\n    public createDate( year: number, month: number, date: number, hours: number = 0, minutes: number = 0, seconds: number = 0 ): Date {\r\n        if (month < 0 || month > 11) {\r\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n        }\r\n\r\n        if (date < 1) {\r\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n        }\r\n\r\n        if (hours < 0 || hours > 23) {\r\n            throw Error(`Invalid hours \"${hours}\". Hours has to be between 0 and 23.`);\r\n        }\r\n\r\n        if (minutes < 0 || minutes > 59) {\r\n            throw Error(`Invalid minutes \"${minutes}\". Minutes has to between 0 and 59.`);\r\n        }\r\n\r\n        if (seconds < 0 || seconds > 59) {\r\n            throw Error(`Invalid seconds \"${seconds}\". Seconds has to be between 0 and 59.`);\r\n        }\r\n\r\n        const result = this.createDateWithOverflow(year, month, date, hours, minutes, seconds);\r\n\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        // For example, createDate(2017, 1, 31) would try to create a date 2017/02/31 which is invalid\r\n        if (result.getMonth() !== month) {\r\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public clone( date: Date ): Date {\r\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHours(date), this.getMinutes(date), this.getSeconds(date));\r\n    }\r\n\r\n    public now(): Date {\r\n        return new Date();\r\n    }\r\n\r\n    public format( date: Date, displayFormat: any ): string {\r\n        if (!this.isValid(date)) {\r\n            throw Error('JSNativeDate: Cannot format invalid date.');\r\n        }\r\n\r\n        if (SUPPORTS_INTL_API) {\r\n\r\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n                date = this.clone(date);\r\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n            }\r\n\r\n            displayFormat = {...displayFormat, timeZone: 'utc'};\r\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this.stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n\r\n        return this.stripDirectionalityCharacters(date.toDateString());\r\n    }\r\n\r\n    public parse( value: any, parseFormat: any ): Date | null {\r\n        // There is no way using the native JS Date to set the parse format or locale\r\n        if (typeof value === 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    public deserialize( value: any ): Date | null {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                const date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n\r\n    /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     * @param {number} year\r\n     * @param {number} month\r\n     * @param {number} date\r\n     * @param {number} hours -- default 0\r\n     * @param {number} minutes -- default 0\r\n     * @param {number} seconds -- default 0\r\n     * @returns The new date, or null if invalid.\r\n     * */\r\n    private createDateWithOverflow( year: number, month: number, date: number,\r\n                                    hours: number = 0, minutes: number = 0, seconds: number = 0 ): Date {\r\n        const result = new Date(year, month, date, hours, minutes, seconds);\r\n\r\n        if (year >= 0 && year < 100) {\r\n            result.setFullYear(this.getYear(result) - 1900);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param str The string to strip direction characters from.\r\n     * @returns The stripped string.\r\n     */\r\n    private stripDirectionalityCharacters( str: string ) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    }\r\n\r\n    /**\r\n     * When converting Date object to string, javascript built-in functions may return wrong\r\n     * results because it applies its internal DST rules. The DST rules around the world change\r\n     * very frequently, and the current valid rule is not always valid in previous years though.\r\n     * We work around this problem building a new Date object which has its internal UTC\r\n     * representation with the local date and time.\r\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n     *    timeZone set to 'utc' to work fine.\r\n     * @param date Date from which we want to get the string representation according to dtf\r\n     * @returns A Date object with its UTC representation based on the passed in date info\r\n     */\r\n    private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n        const d = new Date(Date.UTC(\r\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\r\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n        return dtf.format(d);\r\n    }\r\n}\r\n","/**\r\n * native-date-time-format.class\r\n */\r\nimport { OwlDateTimeFormats } from './date-time-format.class';\r\n\r\nexport const OWL_NATIVE_DATE_TIME_FORMATS: OwlDateTimeFormats = {\r\n    parseInput: null,\r\n    fullPickerInput: {year: 'numeric', month: 'numeric', day: 'numeric', hour: 'numeric', minute: 'numeric'},\r\n    datePickerInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    timePickerInput: {hour: 'numeric', minute: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n};\r\n","/**\r\n * native-date-time.module\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { DateTimeAdapter } from './date-time-adapter.class';\r\nimport { NativeDateTimeAdapter } from './native-date-time-adapter.class';\r\nimport { OWL_DATE_TIME_FORMATS } from './date-time-format.class';\r\nimport { OWL_NATIVE_DATE_TIME_FORMATS } from './native-date-time-format.class';\r\n\r\n@NgModule({\r\n    imports: [PlatformModule],\r\n    providers: [\r\n        {provide: DateTimeAdapter, useClass: NativeDateTimeAdapter},\r\n    ],\r\n})\r\nexport class NativeDateTimeModule {\r\n}\r\n\r\n@NgModule({\r\n    imports: [NativeDateTimeModule],\r\n    providers: [{provide: OWL_DATE_TIME_FORMATS, useValue: OWL_NATIVE_DATE_TIME_FORMATS}],\r\n})\r\nexport class OwlNativeDateTimeModule {\r\n}\r\n","\r\n\r\n\r\n\r\n\r\n/*\r\n * Public API Surface of ng-pick-datetime\r\n */\r\nexport {\r\n    DateTimeAdapter,\r\n    OWL_DATE_TIME_LOCALE,\r\n    OWL_DATE_TIME_LOCALE_PROVIDER,\r\n} from './lib/date-time/adapter/date-time-adapter.class';\r\nexport { OwlDateTimeFormats, OWL_DATE_TIME_FORMATS } from './lib/date-time/adapter/date-time-format.class';\r\nexport {\r\n    MomentDateTimeAdapter,\r\n    OwlMomentDateTimeAdapterOptions,\r\n    OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS,\r\n} from './lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class';\r\nexport {\r\n    MomentDateTimeModule,\r\n    OwlMomentDateTimeModule,\r\n} from './lib/date-time/adapter/moment-adapter/moment-date-time.module';\r\n\r\nexport { OwlDateTimeModule } from './lib/date-time/date-time.module';\r\nexport { OwlNativeDateTimeModule } from './lib/date-time/adapter/native-date-time.module';\r\nexport { OwlDateTimeIntl } from './lib/date-time/date-time-picker-intl.service';\r\n\r\n\r\nexport { OwlDateTimeInlineComponent } from './lib/date-time/date-time-inline.component';\r\nexport { OwlDateTimeComponent } from './lib/date-time/date-time-picker.component';\r\nexport { OwlCalendarComponent } from './lib/date-time/calendar.component';\r\nexport { OwlTimerComponent } from './lib/date-time/timer.component';\r\nexport { OwlMultiYearViewComponent } from './lib/date-time/calendar-multi-year-view.component';\r\n\r\nexport { OwlYearViewComponent } from './lib/date-time/calendar-year-view.component';\r\nexport { OwlMonthViewComponent } from './lib/date-time/calendar-month-view.component';\r\nexport { OwlDateTimeTriggerDirective } from './lib/date-time/date-time-picker-trigger.directive';\r\nexport { OwlDateTimeInputDirective } from './lib/date-time/date-time-picker-input.directive';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {OWL_DATE_TIME_LOCALE_FACTORY as ɵa} from './lib/date-time/adapter/date-time-adapter.class';\nexport {OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY as ɵb} from './lib/date-time/adapter/moment-adapter/moment-date-time-adapter.class';\nexport {OWL_MOMENT_DATE_TIME_FORMATS as ɵj} from './lib/date-time/adapter/moment-adapter/moment-date-time-format.class';\nexport {NativeDateTimeAdapter as ɵy} from './lib/date-time/adapter/native-date-time-adapter.class';\nexport {OWL_NATIVE_DATE_TIME_FORMATS as ɵz} from './lib/date-time/adapter/native-date-time-format.class';\nexport {NativeDateTimeModule as ɵc} from './lib/date-time/adapter/native-date-time.module';\nexport {OwlCalendarBodyComponent as ɵv} from './lib/date-time/calendar-body.component';\nexport {OWL_DATETIME_VALUE_ACCESSOR as ɵd} from './lib/date-time/date-time-inline.component';\nexport {OwlDateTimeContainerComponent as ɵt} from './lib/date-time/date-time-picker-container.component';\nexport {OWL_DATETIME_VALIDATORS as ɵi,OWL_DATETIME_VALUE_ACCESSOR as ɵh} from './lib/date-time/date-time-picker-input.directive';\nexport {owlDateTimePickerAnimations as ɵu} from './lib/date-time/date-time-picker.animations';\nexport {OWL_DTPICKER_SCROLL_STRATEGY as ɵe,OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER as ɵg,OWL_DTPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵf} from './lib/date-time/date-time-picker.component';\nexport {OwlDateTime as ɵs} from './lib/date-time/date-time.class';\nexport {NumberFixedLenPipe as ɵx} from './lib/date-time/numberedFixLen.pipe';\nexport {OwlTimerBoxComponent as ɵw} from './lib/date-time/timer-box.component';\nexport {OwlDialogConfig as ɵr} from './lib/dialog/dialog-config.class';\nexport {OwlDialogContainerComponent as ɵl} from './lib/dialog/dialog-container.component';\nexport {OwlDialogModule as ɵk} from './lib/dialog/dialog.module';\nexport {OWL_DIALOG_DEFAULT_OPTIONS as ɵp,OWL_DIALOG_SCROLL_STRATEGY as ɵm,OWL_DIALOG_SCROLL_STRATEGY_PROVIDER as ɵo,OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵn,OwlDialogService as ɵq} from './lib/dialog/dialog.service';"],"names":["_moment.default","observableOf","OWL_DATETIME_VALUE_ACCESSOR","range"],"mappings":"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"}