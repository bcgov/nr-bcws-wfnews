{"version":3,"file":"calendar-month-view.component.d.ts","sources":["calendar-month-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * calendar-month-view.component\r\n */\r\nimport { AfterContentInit, ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { SelectMode } from './date-time.class';\r\nexport declare class OwlMonthViewComponent<T> implements OnInit, AfterContentInit, OnDestroy {\r\n    private cdRef;\r\n    private dateTimeAdapter;\r\n    private dateTimeFormats;\r\n    /**\r\n     * Whether to hide dates in other months at the start or end of the current month.\r\n     * */\r\n    hideOtherMonths: boolean;\r\n    /**\r\n     * Define the first day of a week\r\n     * Sunday: 0 ~ Saturday: 6\r\n     * */\r\n    private _firstDayOfWeek;\r\n    get firstDayOfWeek(): number;\r\n    set firstDayOfWeek(val: number);\r\n    /**\r\n     * The select mode of the picker;\r\n     * */\r\n    private _selectMode;\r\n    get selectMode(): SelectMode;\r\n    set selectMode(val: SelectMode);\r\n    /** The currently selected date. */\r\n    private _selected;\r\n    get selected(): T | null;\r\n    set selected(value: T | null);\r\n    private _selecteds;\r\n    get selecteds(): T[];\r\n    set selecteds(values: T[]);\r\n    private _pickerMoment;\r\n    get pickerMoment(): T;\r\n    set pickerMoment(value: T);\r\n    /**\r\n     * A function used to filter which dates are selectable\r\n     * */\r\n    private _dateFilter;\r\n    get dateFilter(): (date: T) => boolean;\r\n    set dateFilter(filter: (date: T) => boolean);\r\n    /** The minimum selectable date. */\r\n    private _minDate;\r\n    get minDate(): T | null;\r\n    set minDate(value: T | null);\r\n    /** The maximum selectable date. */\r\n    private _maxDate;\r\n    get maxDate(): T | null;\r\n    set maxDate(value: T | null);\r\n    private _weekdays;\r\n    get weekdays(): {\r\n        long: string;\r\n        short: string;\r\n        narrow: string;\r\n    }[];\r\n    private _days;\r\n    get days(): CalendarCell[][];\r\n    get activeCell(): number;\r\n    get isInSingleMode(): boolean;\r\n    get isInRangeMode(): boolean;\r\n    private firstDateOfMonth;\r\n    private localeSub;\r\n    private initiated;\r\n    private dateNames;\r\n    /**\r\n     * The date of the month that today falls on.\r\n     * */\r\n    todayDate: number | null;\r\n    /**\r\n     * An array to hold all selectedDates' value\r\n     * the value is the day number in current month\r\n     * */\r\n    selectedDates: number[];\r\n    firstRowOffset: number;\r\n    /**\r\n     * Callback to invoke when a new date is selected\r\n     * */\r\n    readonly selectedChange: EventEmitter<T>;\r\n    /**\r\n     * Callback to invoke when any date is selected.\r\n     * */\r\n    readonly userSelection: EventEmitter<void>;\r\n    /** Emits when any date is activated. */\r\n    readonly pickerMomentChange: EventEmitter<T>;\r\n    /** The body of calendar table */\r\n    calendarBodyElm: OwlCalendarBodyComponent;\r\n    get owlDTCalendarView(): boolean;\r\n    constructor(cdRef: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);\r\n    ngOnInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * Handle a calendarCell selected\r\n     * @param {CalendarCell} cell\r\n     * @return {void}\r\n     * */\r\n    selectCalendarCell(cell: CalendarCell): void;\r\n    /**\r\n     * Handle a new date selected\r\n     * @param {number} date -- a new date's numeric value\r\n     * @return {void}\r\n     * */\r\n    private selectDate;\r\n    /**\r\n     * Handle keydown event on calendar body\r\n     * @param {KeyboardEvent} event\r\n     * @return {void}\r\n     * */\r\n    handleCalendarKeydown(event: KeyboardEvent): void;\r\n    /**\r\n     * Generate the calendar weekdays array\r\n     * */\r\n    private generateWeekDays;\r\n    /**\r\n     * Generate the calendar days array\r\n     * */\r\n    private generateCalendar;\r\n    /**\r\n     * Creates CalendarCell for days.\r\n     * @param {Date} date -- the date that the cell represents\r\n     * @param {number} daysDiff -- the amount of days from the first date of the month\r\n     * @return {CalendarCell}\r\n     * */\r\n    private createDateCell;\r\n    /**\r\n     * Check if the date is valid\r\n     * @param date\r\n     * @return {boolean}\r\n     * */\r\n    private isDateEnabled;\r\n    /**\r\n     * Get a valid date object\r\n     * @param {any} obj -- The object to check.\r\n     * @return {Date | null} -- The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    private getValidDate;\r\n    /**\r\n     * Check if the give dates are none-null and in the same month\r\n     * @param {Date} dateLeft\r\n     * @param {Date} dateRight\r\n     * @return {boolean}\r\n     * */\r\n    isSameMonth(dateLeft: T, dateRight: T): boolean;\r\n    /**\r\n     * Set the selectedDates value.\r\n     * In single mode, it has only one value which represent the selected date\r\n     * In range mode, it would has two values, one for the fromValue and the other for the toValue\r\n     * */\r\n    private setSelectedDates;\r\n    private focusActiveCell;\r\n}\r\n"]}