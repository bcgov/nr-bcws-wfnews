{"version":3,"file":"date-time-inline.component.d.ts","sources":["date-time-inline.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * date-time-inline.component\r\n */\r\nimport { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\r\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\r\nimport { OwlDateTimeFormats } from './adapter/date-time-format.class';\r\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\r\nexport declare const OWL_DATETIME_VALUE_ACCESSOR: any;\r\nexport declare class OwlDateTimeInlineComponent<T> extends OwlDateTime<T> implements OnInit, ControlValueAccessor {\r\n    protected changeDetector: ChangeDetectorRef;\r\n    protected dateTimeAdapter: DateTimeAdapter<T>;\r\n    protected dateTimeFormats: OwlDateTimeFormats;\r\n    container: OwlDateTimeContainerComponent<T>;\r\n    /**\r\n     * Set the type of the dateTime picker\r\n     *      'both' -- show both calendar and timer\r\n     *      'calendar' -- show only calendar\r\n     *      'timer' -- show only timer\r\n     * @default 'both'\r\n     * @type {'both' | 'calendar' | 'timer'}\r\n     * */\r\n    private _pickerType;\r\n    get pickerType(): PickerType;\r\n    set pickerType(val: PickerType);\r\n    private _disabled;\r\n    get disabled(): boolean;\r\n    set disabled(value: boolean);\r\n    private _selectMode;\r\n    get selectMode(): SelectMode;\r\n    set selectMode(mode: SelectMode);\r\n    /** The date to open the calendar to initially. */\r\n    private _startAt;\r\n    get startAt(): T | null;\r\n    set startAt(date: T | null);\r\n    private _dateTimeFilter;\r\n    get dateTimeFilter(): (date: T | null) => boolean;\r\n    set dateTimeFilter(filter: (date: T | null) => boolean);\r\n    /** The minimum valid date. */\r\n    private _min;\r\n    get minDateTime(): T | null;\r\n    set minDateTime(value: T | null);\r\n    /** The maximum valid date. */\r\n    private _max;\r\n    get maxDateTime(): T | null;\r\n    set maxDateTime(value: T | null);\r\n    private _value;\r\n    get value(): T | null;\r\n    set value(value: T | null);\r\n    private _values;\r\n    get values(): T[];\r\n    set values(values: T[]);\r\n    /**\r\n     * Emits selected year in multi-year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    yearSelected: EventEmitter<T>;\r\n    /**\r\n     * Emits selected month in year view\r\n     * This doesn't imply a change on the selected date.\r\n     * */\r\n    monthSelected: EventEmitter<T>;\r\n    private _selected;\r\n    get selected(): T | null;\r\n    set selected(value: T | null);\r\n    private _selecteds;\r\n    get selecteds(): T[];\r\n    set selecteds(values: T[]);\r\n    get opened(): boolean;\r\n    get pickerMode(): PickerMode;\r\n    get isInSingleMode(): boolean;\r\n    get isInRangeMode(): boolean;\r\n    get owlDTInlineClass(): boolean;\r\n    private onModelChange;\r\n    private onModelTouched;\r\n    constructor(changeDetector: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);\r\n    ngOnInit(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    select(date: T[] | T): void;\r\n    /**\r\n     * Emits the selected year in multi-year view\r\n     * */\r\n    selectYear(normalizedYear: T): void;\r\n    /**\r\n     * Emits selected month in year view\r\n     * */\r\n    selectMonth(normalizedMonth: T): void;\r\n}\r\n"]}