{"version":3,"file":"dialog-container.component.d.ts","sources":["dialog-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * dialog-container.component\r\n */\r\nimport { ChangeDetectorRef, ComponentRef, ElementRef, EmbeddedViewRef, EventEmitter, OnInit } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\r\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\r\nimport { OwlDialogConfig } from './dialog-config.class';\r\nexport declare class OwlDialogContainerComponent extends BasePortalOutlet implements OnInit {\r\n    private changeDetector;\r\n    private elementRef;\r\n    private focusTrapFactory;\r\n    private document;\r\n    portalOutlet: CdkPortalOutlet;\r\n    /** The class that traps and manages focus within the dialog. */\r\n    private focusTrap;\r\n    /** ID of the element that should be considered as the dialog's label. */\r\n    ariaLabelledBy: string | null;\r\n    /** Emits when an animation state changes. */\r\n    animationStateChanged: EventEmitter<AnimationEvent>;\r\n    isAnimating: boolean;\r\n    private _config;\r\n    get config(): OwlDialogConfig;\r\n    private state;\r\n    private params;\r\n    private elementFocusedBeforeDialogWasOpened;\r\n    get owlDialogContainerClass(): boolean;\r\n    get owlDialogContainerTabIndex(): number;\r\n    get owlDialogContainerId(): string;\r\n    get owlDialogContainerRole(): string;\r\n    get owlDialogContainerAriaLabelledby(): string;\r\n    get owlDialogContainerAriaDescribedby(): string;\r\n    get owlDialogContainerAnimation(): any;\r\n    constructor(changeDetector: ChangeDetectorRef, elementRef: ElementRef, focusTrapFactory: FocusTrapFactory, document: any);\r\n    ngOnInit(): void;\r\n    /**\r\n     * Attach a ComponentPortal as content to this dialog container.\r\n     * @param portal Portal to be attached as the dialog content.\r\n     */\r\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\r\n    setConfig(config: OwlDialogConfig): void;\r\n    onAnimationStart(event: AnimationEvent): void;\r\n    onAnimationDone(event: AnimationEvent): void;\r\n    startExitAnimation(): void;\r\n    /**\r\n     * Calculate origin used in the `zoomFadeInFrom()`\r\n     * for animation purpose\r\n     * @param {any} event\r\n     * @return {void}\r\n     */\r\n    private calculateZoomOrigin;\r\n    /**\r\n     * Save the focused element before dialog was open\r\n     * @return {void}\r\n     * */\r\n    private savePreviouslyFocusedElement;\r\n    private trapFocus;\r\n    private restoreFocus;\r\n}\r\n"]}