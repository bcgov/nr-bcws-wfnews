{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface FCMPlugin {\n  /**\n   * Subscribe to fcm topic\n   * @param options\n   */\n  subscribeTo(options: { topic: string }): Promise<{ message: string }>;\n\n  /**\n   * Unsubscribe from fcm topic\n   * @param options\n   */\n  unsubscribeFrom(options: { topic: string }): Promise<{ message: string }>;\n\n  /**\n   * Get fcm token to eventually use from a serve\n   *\n   * Recommended to use this instead of\n   * @usage\n   * ```typescript\n   * PushNotifications.addListener(\"registration\", (token) => {\n   *   console.log(token.data);\n   * });\n   * ```\n   * because the native capacitor method, for apple, returns the APN's token\n   */\n  getToken(): Promise<{ token: string }>;\n\n  \n  /**\n   * Refresh fcm token to eventually use from a serve\n   *\n   * Recommended to use this instead of\n   * @usage\n   * ```typescript\n   * PushNotifications.addListener(\"registration\", (token) => {\n   *   console.log(token.data);\n   * });\n   * ```\n   * because the native capacitor method, for apple, returns the APN's token\n   */\n   refreshToken(): Promise<{ token: string }>;\n\n  /**\n   * Remove local fcm instance completely\n   */\n  deleteInstance(): Promise<boolean>;\n\n  /**\n   * Enabled/disabled auto initialization.\n   * @param options\n   */\n  setAutoInit(options: { enabled: boolean }): Promise<void>;\n\n  /**\n   * Retrieve the auto initialization status.\n   */\n  isAutoInitEnabled(): Promise<{ enabled: boolean }>;\n}\n"]}