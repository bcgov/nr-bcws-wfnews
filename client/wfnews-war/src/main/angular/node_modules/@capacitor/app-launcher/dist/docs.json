{
  "api": {
    "name": "AppLauncherPlugin",
    "slug": "applauncherplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "canOpenUrl",
        "signature": "(options: CanOpenURLOptions) => Promise<CanOpenURLResult>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "CanOpenURLOptions"
          }
        ],
        "returns": "Promise<CanOpenURLResult>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Check if an app can be opened with the given URL.\n\nOn iOS you must declare the URL schemes you pass to this method by adding\nthe `LSApplicationQueriesSchemes` key to your app's `Info.plist` file.\nLearn more about configuring\n[`Info.plist`](https://capacitorjs.com/docs/ios/configuration#configuring-infoplist).\n\nThis method always returns false for undeclared schemes, whether or not an\nappropriate app is installed. To learn more about the key, see\n[LSApplicationQueriesSchemes](https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/plist/info/LSApplicationQueriesSchemes).",
        "complexTypes": [
          "CanOpenURLResult",
          "CanOpenURLOptions"
        ],
        "slug": "canopenurl"
      },
      {
        "name": "openUrl",
        "signature": "(options: OpenURLOptions) => Promise<OpenURLResult>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "OpenURLOptions"
          }
        ],
        "returns": "Promise<OpenURLResult>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Open an app with the given URL.\nOn iOS the URL should be a known URLScheme.\nOn Android the URL can be a known URLScheme or an app package name.",
        "complexTypes": [
          "OpenURLResult",
          "OpenURLOptions"
        ],
        "slug": "openurl"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "CanOpenURLResult",
      "slug": "canopenurlresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "value",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "CanOpenURLOptions",
      "slug": "canopenurloptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "OpenURLResult",
      "slug": "openurlresult",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "completed",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "OpenURLOptions",
      "slug": "openurloptions",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "url",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}