{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface AppLauncherPlugin {\n  /**\n   * Check if an app can be opened with the given URL.\n   *\n   * On iOS you must declare the URL schemes you pass to this method by adding\n   * the `LSApplicationQueriesSchemes` key to your app's `Info.plist` file.\n   * Learn more about configuring\n   * [`Info.plist`](https://capacitorjs.com/docs/ios/configuration#configuring-infoplist).\n   *\n   * This method always returns false for undeclared schemes, whether or not an\n   * appropriate app is installed. To learn more about the key, see\n   * [LSApplicationQueriesSchemes](https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/LaunchServicesKeys.html#//apple_ref/doc/plist/info/LSApplicationQueriesSchemes).\n   *\n   * @since 1.0.0\n   */\n  canOpenUrl(options: CanOpenURLOptions): Promise<CanOpenURLResult>;\n\n  /**\n   * Open an app with the given URL.\n   * On iOS the URL should be a known URLScheme.\n   * On Android the URL can be a known URLScheme or an app package name.\n   *\n   * @since 1.0.0\n   */\n  openUrl(options: OpenURLOptions): Promise<OpenURLResult>;\n}\n\nexport interface CanOpenURLOptions {\n  url: string;\n}\n\nexport interface CanOpenURLResult {\n  value: boolean;\n}\n\nexport interface OpenURLOptions {\n  url: string;\n}\n\nexport interface OpenURLResult {\n  completed: boolean;\n}\n"]}