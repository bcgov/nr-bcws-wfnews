{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PermissionState } from '@capacitor/core';\n\nexport type CallbackID = string;\n\nexport interface PermissionStatus {\n  /**\n   * Permission state for location alias.\n   *\n   * On Android it requests/checks both ACCESS_COARSE_LOCATION and\n   * ACCESS_FINE_LOCATION permissions.\n   *\n   * On iOS and web it requests/checks location permission.\n   *\n   * @since 1.0.0\n   */\n  location: PermissionState;\n\n  /**\n   * Permission state for coarseLocation alias.\n   *\n   * On Android it requests/checks ACCESS_COARSE_LOCATION.\n   *\n   * On Android 12+, users can choose between Approximate location (ACCESS_COARSE_LOCATION) or\n   * Precise location (ACCESS_FINE_LOCATION), so this alias can be used if the app doesn't\n   * need high accuracy.\n   *\n   * On iOS and web it will have the same value as location alias.\n   *\n   * @since 1.2.0\n   */\n  coarseLocation: PermissionState;\n}\n\nexport type GeolocationPermissionType = 'location' | 'coarseLocation';\n\nexport interface GeolocationPluginPermissions {\n  permissions: GeolocationPermissionType[];\n}\n\nexport interface GeolocationPlugin {\n  /**\n   * Get the current GPS location of the device\n   *\n   * @since 1.0.0\n   */\n  getCurrentPosition(options?: PositionOptions): Promise<Position>;\n\n  /**\n   * Set up a watch for location changes. Note that watching for location changes\n   * can consume a large amount of energy. Be smart about listening only when you need to.\n   *\n   * @since 1.0.0\n   */\n  watchPosition(\n    options: PositionOptions,\n    callback: WatchPositionCallback,\n  ): Promise<CallbackID>;\n\n  /**\n   * Clear a given watch\n   *\n   * @since 1.0.0\n   */\n  clearWatch(options: ClearWatchOptions): Promise<void>;\n\n  /**\n   * Check location permissions.  Will throw if system location services are disabled.\n   *\n   * @since 1.0.0\n   */\n  checkPermissions(): Promise<PermissionStatus>;\n\n  /**\n   * Request location permissions.  Will throw if system location services are disabled.\n   *\n   * @since 1.0.0\n   */\n  requestPermissions(\n    permissions?: GeolocationPluginPermissions,\n  ): Promise<PermissionStatus>;\n}\n\nexport interface ClearWatchOptions {\n  id: CallbackID;\n}\n\nexport interface Position {\n  /**\n   * Creation timestamp for coords\n   *\n   * @since 1.0.0\n   */\n  timestamp: number;\n\n  /**\n   * The GPS coordinates along with the accuracy of the data\n   *\n   * @since 1.0.0\n   */\n  coords: {\n    /**\n     * Latitude in decimal degrees\n     *\n     * @since 1.0.0\n     */\n    latitude: number;\n\n    /**\n     * longitude in decimal degrees\n     *\n     * @since 1.0.0\n     */\n    longitude: number;\n\n    /**\n     * Accuracy level of the latitude and longitude coordinates in meters\n     *\n     * @since 1.0.0\n     */\n    accuracy: number;\n\n    /**\n     * Accuracy level of the altitude coordinate in meters, if available.\n     *\n     * Available on all iOS versions and on Android 8.0+.\n     *\n     * @since 1.0.0\n     */\n    altitudeAccuracy: number | null | undefined;\n\n    /**\n     * The altitude the user is at (if available)\n     *\n     * @since 1.0.0\n     */\n    altitude: number | null;\n\n    /**\n     * The speed the user is traveling (if available)\n     *\n     * @since 1.0.0\n     */\n    speed: number | null;\n\n    /**\n     * The heading the user is facing (if available)\n     *\n     * @since 1.0.0\n     */\n    heading: number | null;\n  };\n}\n\nexport interface PositionOptions {\n  /**\n   * High accuracy mode (such as GPS, if available)\n   *\n   * On Android 12+ devices it will be ignored if users didn't grant\n   * ACCESS_FINE_LOCATION permissions (can be checked with location alias).\n   *\n   * @default false\n   * @since 1.0.0\n   */\n  enableHighAccuracy?: boolean;\n\n  /**\n   * The maximum wait time in milliseconds for location updates.\n   *\n   * In Android, since version 4.0.0 of the plugin, timeout gets ignored for getCurrentPosition.\n   *\n   * @default 10000\n   * @since 1.0.0\n   */\n  timeout?: number;\n\n  /**\n   * The maximum age in milliseconds of a possible cached position that is acceptable to return\n   *\n   * @default 0\n   * @since 1.0.0\n   */\n  maximumAge?: number;\n}\n\nexport type WatchPositionCallback = (\n  position: Position | null,\n  err?: any,\n) => void;\n\n/**\n * @deprecated Use `PositionOptions`.\n * @since 1.0.0\n */\nexport type GeolocationOptions = PositionOptions;\n\n/**\n * @deprecated Use `WatchPositionCallback`.\n * @since 1.0.0\n */\nexport type GeolocationWatchCallback = WatchPositionCallback;\n\n/**\n * @deprecated Use `Position`.\n * @since 1.0.0\n */\nexport type GeolocationPosition = Position;\n"]}