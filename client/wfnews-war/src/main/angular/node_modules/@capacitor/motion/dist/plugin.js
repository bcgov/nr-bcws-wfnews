var capacitorMotion = (function (exports, core) {
    'use strict';

    const Motion = core.registerPlugin('Motion', {
        android: () => Promise.resolve().then(function () { return web; }).then(m => new m.MotionWeb()),
        ios: () => Promise.resolve().then(function () { return web; }).then(m => new m.MotionWeb()),
        web: () => Promise.resolve().then(function () { return web; }).then(m => new m.MotionWeb()),
    });

    class MotionWeb extends core.WebPlugin {
        constructor() {
            super();
            this.registerWindowListener('devicemotion', 'accel');
            this.registerWindowListener('deviceorientation', 'orientation');
        }
    }

    var web = /*#__PURE__*/Object.freeze({
        __proto__: null,
        MotionWeb: MotionWeb
    });

    exports.Motion = Motion;

    Object.defineProperty(exports, '__esModule', { value: true });

    return exports;

})({}, capacitorExports);
//# sourceMappingURL=plugin.js.map
