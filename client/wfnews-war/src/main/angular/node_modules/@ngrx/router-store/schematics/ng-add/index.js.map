{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../modules/router-store/schematics/ng-add/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAQoC;AACpC,0DAA0E;AAC1E,+BAAiC;AACjC,yDAS+B;AAG/B,SAAS,mBAAmB,CAAC,OAA2B;IACtD,OAAO,UAAC,IAAU;;QAChB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC;QAElC,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;YAC5B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;SACpD;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACnC,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,MAAM,IAAI,gCAAmB,CAAC,eAAQ,UAAU,qBAAkB,CAAC,CAAC;SACrE;QACD,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAE1C,IAAM,MAAM,GAAG,EAAE,CAAC,gBAAgB,CAChC,UAAU,EACV,UAAU,EACV,EAAE,CAAC,YAAY,CAAC,MAAM,EACtB,IAAI,CACL,CAAC;QAEI,IAAA,KAAA,OAA8B,IAAA,mCAAiB,EACnD,MAAM,EACN,UAAU,EACV,uCAAuC,EACvC,oBAAoB,CACrB,IAAA,EALM,yBAAyB,QAK/B,CAAC;QAEF,IAAM,OAAO,GAAG;YACd,IAAA,8BAAY,EACV,MAAM,EACN,UAAU,EACV,6BAA6B,EAC7B,oBAAoB,CACrB;YACD,yBAAyB;SAC1B,CAAC;QACF,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;;YAE9C,KAAqB,IAAA,YAAA,SAAA,OAAO,CAAA,gCAAA,qDAAE;gBAAzB,IAAM,MAAM,oBAAA;gBACf,IAAI,MAAM,YAAY,8BAAY,EAAE;oBAClC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC/C;aACF;;;;;;;;;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE5B,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,SAAS,+BAA+B;IACtC,OAAO,UAAC,IAAU,EAAE,OAAyB;QAC3C,IAAA,yCAAuB,EACrB,IAAI,EACJ,cAAc,EACd,oBAAoB,EACpB,iCAAe,CAChB,CAAC;QACF,OAAO,CAAC,OAAO,CAAC,IAAI,8BAAsB,EAAE,CAAC,CAAC;QAC9C,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAED,mBAAyB,OAA2B;IAClD,OAAO,UAAC,IAAU,EAAE,OAAyB;QAC3C,OAAO,CAAC,IAAI,GAAG,IAAA,gCAAc,EAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAE7C,IAAI,OAAO,CAAC,MAAM,EAAE;YAClB,OAAO,CAAC,MAAM,GAAG,IAAA,uCAAqB,EAAC,IAAI,EAAE;gBAC3C,IAAI,EAAE,EAAE;gBACR,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,IAAI,EAAE,OAAO,CAAC,IAAI;aACnB,CAAC,CAAC;SACJ;QAED,IAAM,UAAU,GAAG,IAAA,2BAAS,EAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAC/C,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAE/B,OAAO,IAAA,kBAAK,EAAC;YACX,IAAA,2BAAc,EAAC,IAAA,kBAAK,EAAC,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACrD,OAAO,IAAI,OAAO,CAAC,eAAe;gBAChC,CAAC,CAAC,IAAA,iBAAI,GAAE;gBACR,CAAC,CAAC,+BAA+B,EAAE;SACtC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACpB,CAAC,CAAC;AACJ,CAAC;AAtBD,+BAsBC","sourcesContent":["import {\n  Rule,\n  SchematicContext,\n  SchematicsException,\n  Tree,\n  branchAndMerge,\n  chain,\n  noop,\n} from '@angular-devkit/schematics';\nimport { NodePackageInstallTask } from '@angular-devkit/schematics/tasks';\nimport * as ts from 'typescript';\nimport {\n  InsertChange,\n  addImportToModule,\n  addPackageToPackageJson,\n  findModuleFromOptions,\n  getProjectPath,\n  insertImport,\n  parseName,\n  platformVersion,\n} from '../../schematics-core';\nimport { Schema as RouterStoreOptions } from './schema';\n\nfunction addImportToNgModule(options: RouterStoreOptions): Rule {\n  return (host: Tree) => {\n    const modulePath = options.module;\n\n    if (!modulePath) {\n      return host;\n    }\n\n    if (!host.exists(modulePath)) {\n      throw new Error('Specified module does not exist');\n    }\n\n    const text = host.read(modulePath);\n    if (text === null) {\n      throw new SchematicsException(`File ${modulePath} does not exist.`);\n    }\n    const sourceText = text.toString('utf-8');\n\n    const source = ts.createSourceFile(\n      modulePath,\n      sourceText,\n      ts.ScriptTarget.Latest,\n      true\n    );\n\n    const [routerStoreNgModuleImport] = addImportToModule(\n      source,\n      modulePath,\n      `StoreRouterConnectingModule.forRoot()`,\n      `@ngrx/router-store`\n    );\n\n    const changes = [\n      insertImport(\n        source,\n        modulePath,\n        'StoreRouterConnectingModule',\n        '@ngrx/router-store'\n      ),\n      routerStoreNgModuleImport,\n    ];\n    const recorder = host.beginUpdate(modulePath);\n\n    for (const change of changes) {\n      if (change instanceof InsertChange) {\n        recorder.insertLeft(change.pos, change.toAdd);\n      }\n    }\n    host.commitUpdate(recorder);\n\n    return host;\n  };\n}\n\nfunction addNgRxRouterStoreToPackageJson() {\n  return (host: Tree, context: SchematicContext) => {\n    addPackageToPackageJson(\n      host,\n      'dependencies',\n      '@ngrx/router-store',\n      platformVersion\n    );\n    context.addTask(new NodePackageInstallTask());\n    return host;\n  };\n}\n\nexport default function (options: RouterStoreOptions): Rule {\n  return (host: Tree, context: SchematicContext) => {\n    options.path = getProjectPath(host, options);\n\n    if (options.module) {\n      options.module = findModuleFromOptions(host, {\n        name: '',\n        module: options.module,\n        path: options.path,\n      });\n    }\n\n    const parsedPath = parseName(options.path, '');\n    options.path = parsedPath.path;\n\n    return chain([\n      branchAndMerge(chain([addImportToNgModule(options)])),\n      options && options.skipPackageJson\n        ? noop()\n        : addNgRxRouterStoreToPackageJson(),\n    ])(host, context);\n  };\n}\n"]}