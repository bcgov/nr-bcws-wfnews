import { Component, Input, TemplateRef } from "@angular/core";
import { TokenService } from "../services/token.service";
export class FullWidthContainerComponent {
    constructor(token) {
        this.token = token;
        this.isInitializing = true;
        this.isInitializing = token.getOauthToken() === null;
    }
    ngOnInit() {
        this.token.authTokenEmitter.subscribe(() => {
            this.isInitializing = false;
        });
    }
}
FullWidthContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-full-width-container',
                template: "<!--\n  DEFAULT TEMPLATE DECLARATIONS FOR SUB-COMPONENTS\n-->\n\n<ng-template #defaultMainContent>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur consectetur debitis, delectus deleniti dolore\n    earum explicabo facere facilis, fugiat itaque numquam provident quam quo quos sint veritatis vero voluptas voluptate?\n  </p>\n</ng-template>\n\n<!--\n  MAIN TEMPLATE DECLARATION\n-->\n<div id=\"core-interface-container\">\n  <wf1-application-header [titleText]=\"titleText\"></wf1-application-header>\n\n  <div class=\"wf1-loading-screen\" *ngIf=\"isInitializing\">\n    <h1>Initializing Application</h1>\n    <wf1-spinner></wf1-spinner>\n    <h3>Please wait while the application initializes.</h3>\n  </div>\n\n  <div class=\"main-content-container\" *ngIf=\"!isInitializing\">\n    <ng-container *ngTemplateOutlet=\"mainContentTemplate ? mainContentTemplate: defaultMainContent\"></ng-container>\n  </div>\n</div>\n"
            },] }
];
FullWidthContainerComponent.ctorParameters = () => [
    { type: TokenService }
];
FullWidthContainerComponent.propDecorators = {
    titleText: [{ type: Input }],
    mainContentTemplate: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbC13aWR0aC1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS11aS9zcmMvbGliL2Z1bGwtd2lkdGgtY29udGFpbmVyL2Z1bGwtd2lkdGgtY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBT3ZELE1BQU0sT0FBTywyQkFBMkI7SUFRdEMsWUFBb0IsS0FBbUI7UUFBbkIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQUZoQyxtQkFBYyxHQUFHLElBQUksQ0FBQztRQUczQixJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQyxhQUFhLEVBQUUsS0FBSyxJQUFJLENBQUM7SUFDdkQsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7WUFDekMsSUFBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7UUFDOUIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwwQkFBMEI7Z0JBQ3BDLGk4QkFBb0Q7YUFFckQ7OztZQU5PLFlBQVk7Ozt3QkFRakIsS0FBSztrQ0FFTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHtUb2tlblNlcnZpY2V9IGZyb20gXCIuLi9zZXJ2aWNlcy90b2tlbi5zZXJ2aWNlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3dmMS1mdWxsLXdpZHRoLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9mdWxsLXdpZHRoLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlczogW11cbn0pXG5leHBvcnQgY2xhc3MgRnVsbFdpZHRoQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgdGl0bGVUZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG1haW5Db250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgcHVibGljIGlzSW5pdGlhbGl6aW5nID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRva2VuOiBUb2tlblNlcnZpY2UpIHtcbiAgICB0aGlzLmlzSW5pdGlhbGl6aW5nID0gdG9rZW4uZ2V0T2F1dGhUb2tlbigpID09PSBudWxsO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50b2tlbi5hdXRoVG9rZW5FbWl0dGVyLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLmlzSW5pdGlhbGl6aW5nID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cblxufVxuIl19