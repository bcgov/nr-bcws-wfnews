import { Component, EventEmitter, Input, Output } from "@angular/core";
import { TokenService } from "../services/token.service";
export class FullWidthPanelComponent {
    constructor(token) {
        this.token = token;
        this.recordCount = 0;
        this.linkClick = new EventEmitter();
        this.isInitializing = true;
        this.isShowingFilterOptions = false;
        this.isInitializing = token.getOauthToken() === null;
    }
    ngOnInit() {
        this.token.authTokenEmitter.subscribe(() => {
            this.isInitializing = false;
        });
    }
    getMainContentClasses() {
        return (this.isShowingFilterOptions) ? 'side-panel-with-toolbar-and-filter-and-filter-content' : 'side-panel-with-toolbar-and-filter-content';
    }
    setFilterSize(isShowingFilterOptions) {
        this.isShowingFilterOptions = isShowingFilterOptions;
    }
    titleLinkClicked() {
        this.linkClick.emit(this.titleText);
    }
}
FullWidthPanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-full-width-panel',
                template: "<div class=\"side-panel-container\">\n    <div class=\"side-panel-title-section\">\n        <h3 class=\"side-panel-title\">{{titleText}}</h3>\n        <div class=\"side-panel-link-button\" *ngIf=\"linkIcon !== undefined\">\n            <button mat-button (click)=\"titleLinkClicked()\"><mat-icon>{{linkIcon}}</mat-icon></button>\n        </div>\n    </div>\n    <wf1-search-bar [count]=\"recordCount\"></wf1-search-bar>\n    <wf1-filters [filters]=\"filters\" (isShowingFilterOptions)=\"setFilterSize($event)\"></wf1-filters>\n    <div [ngClass]=\"getMainContentClasses()\">\n        <div class=\"interior-panel\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</div>\n"
            },] }
];
FullWidthPanelComponent.ctorParameters = () => [
    { type: TokenService }
];
FullWidthPanelComponent.propDecorators = {
    titleText: [{ type: Input }],
    linkIcon: [{ type: Input }],
    recordCount: [{ type: Input }],
    filters: [{ type: Input }],
    linkClick: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnVsbC13aWR0aC1wYW5lbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlLXVpL3NyYy9saWIvZnVsbC13aWR0aC1wYW5lbC9mdWxsLXdpZHRoLXBhbmVsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQVF2RCxNQUFNLE9BQU8sdUJBQXVCO0lBZWxDLFlBQW9CLEtBQW1CO1FBQW5CLFVBQUssR0FBTCxLQUFLLENBQWM7UUFUdkMsZ0JBQVcsR0FBRyxDQUFDLENBQUM7UUFJaEIsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFVLENBQUM7UUFFdkMsbUJBQWMsR0FBRyxJQUFJLENBQUM7UUFDdEIsMkJBQXNCLEdBQUcsS0FBSyxDQUFDO1FBRzdCLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLElBQUksQ0FBQztJQUN2RCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxxQkFBcUI7UUFDbkIsT0FBTyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyx1REFBdUQsQ0FBQyxDQUFDLENBQUMsNENBQTRDLENBQUM7SUFDaEosQ0FBQztJQUVELGFBQWEsQ0FBQyxzQkFBK0I7UUFDM0MsSUFBSSxDQUFDLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0lBQ3ZELENBQUM7SUFFRCxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7O1lBeENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQywrckJBQWdEO2FBRWpEOzs7WUFQTyxZQUFZOzs7d0JBU2pCLEtBQUs7dUJBRUwsS0FBSzswQkFFTCxLQUFLO3NCQUVMLEtBQUs7d0JBRUwsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7VG9rZW5TZXJ2aWNlfSBmcm9tIFwiLi4vc2VydmljZXMvdG9rZW4uc2VydmljZVwiO1xuaW1wb3J0IHtGaWx0ZXJDb25maWd9IGZyb20gXCIuLi9zZWFyY2gvbW9kZWxzL2ZpbHRlci9maWx0ZXItY29uZmlnXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3dmMS1mdWxsLXdpZHRoLXBhbmVsJyxcbiAgdGVtcGxhdGVVcmw6IGAuL2Z1bGwtd2lkdGgtcGFuZWwuY29tcG9uZW50Lmh0bWxgLFxuICBzdHlsZXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIEZ1bGxXaWR0aFBhbmVsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KClcbiAgdGl0bGVUZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGxpbmtJY29uPzogc3RyaW5nO1xuICBASW5wdXQoKVxuICByZWNvcmRDb3VudCA9IDA7XG4gIEBJbnB1dCgpXG4gIGZpbHRlcnM/OiBGaWx0ZXJDb25maWdbXTtcbiAgQE91dHB1dCgpXG4gIGxpbmtDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xuXG4gIGlzSW5pdGlhbGl6aW5nID0gdHJ1ZTtcbiAgaXNTaG93aW5nRmlsdGVyT3B0aW9ucyA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdG9rZW46IFRva2VuU2VydmljZSkge1xuICAgIHRoaXMuaXNJbml0aWFsaXppbmcgPSB0b2tlbi5nZXRPYXV0aFRva2VuKCkgPT09IG51bGw7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnRva2VuLmF1dGhUb2tlbkVtaXR0ZXIuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIHRoaXMuaXNJbml0aWFsaXppbmcgPSBmYWxzZTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldE1haW5Db250ZW50Q2xhc3NlcygpOiBzdHJpbmcge1xuICAgIHJldHVybiAodGhpcy5pc1Nob3dpbmdGaWx0ZXJPcHRpb25zKSA/ICdzaWRlLXBhbmVsLXdpdGgtdG9vbGJhci1hbmQtZmlsdGVyLWFuZC1maWx0ZXItY29udGVudCcgOiAnc2lkZS1wYW5lbC13aXRoLXRvb2xiYXItYW5kLWZpbHRlci1jb250ZW50JztcbiAgfVxuXG4gIHNldEZpbHRlclNpemUoaXNTaG93aW5nRmlsdGVyT3B0aW9uczogYm9vbGVhbikge1xuICAgIHRoaXMuaXNTaG93aW5nRmlsdGVyT3B0aW9ucyA9IGlzU2hvd2luZ0ZpbHRlck9wdGlvbnM7XG4gIH1cblxuICB0aXRsZUxpbmtDbGlja2VkKCkge1xuICAgIHRoaXMubGlua0NsaWNrLmVtaXQodGhpcy50aXRsZVRleHQpO1xuICB9XG59XG4iXX0=