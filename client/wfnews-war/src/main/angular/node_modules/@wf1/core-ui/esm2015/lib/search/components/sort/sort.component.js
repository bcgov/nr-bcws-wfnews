import { Component, Input } from "@angular/core";
// External
import { select, Store } from "@ngrx/store";
import * as SearchActions from "../../store/actions";
import { selectCurrentSearchParam } from "../../../utils";
export class SortComponent {
    constructor(store) {
        this.store = store;
        this.isVisible = false;
        this.toggleSortDirection = (dir) => dir === 'ASC' ? 'DESC' : 'ASC';
        this.isActiveParam = (param) => param === this.activeSortParam;
        this.isActiveDir = (dir) => dir === this.activeSortDir;
        this.showArrow = (param, dir) => this.isActiveParam(param) && this.isActiveDir(dir);
    }
    ngOnInit() {
        this.setVisiblility();
        this.setDefaultSort();
    }
    setVisiblility() {
        this.isVisible = true;
        this.store.pipe(select(selectCurrentSearchParam(this.componentId, 'sortModalVisible'))).subscribe((isVisible) => this.isVisible = isVisible);
    }
    setDefaultSort() {
        if (this.defaultSort) {
            this.store.dispatch(new SearchActions.UpdateSortAction(this.defaultSort.param, this.defaultSort.direction, this.componentId));
        }
        this.store.pipe(select(selectCurrentSearchParam(this.componentId, 'sortParam'))).subscribe((param) => this.activeSortParam = param);
        this.store.pipe(select(selectCurrentSearchParam(this.componentId, 'sortDirection'))).subscribe((dir) => this.activeSortDir = dir);
    }
    updateSort(option) {
        const direction = option.param === this.activeSortParam ? this.toggleSortDirection(this.activeSortDir) : 'DESC';
        this.store.dispatch(new SearchActions.UpdateSortAction(option.param, direction, this.componentId));
    }
    close() {
        this.store.dispatch(new SearchActions.ToggleSortModalAction(this.componentId));
    }
}
SortComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-sort-modal',
                template: "<div class=\"sort-popup\" [class.sort-popup--visible]=\"isVisible\">\n\t<div class=\"sort-popup__header\">\n\t\t<span class=\"sort-popup__header__text\">Sort</span>\n\t\t<mat-icon class=\"sort-popup__header__icon\" (click)=\"close()\" (keydown)=\"close()\">close</mat-icon>\n\t</div>\n\t<ng-container *ngFor=\"let option of options\">\n\t\t<div class=\"sort-popup__item\" [ngClass]=\"{'sort-popup__item--active': isActiveParam(option.param)}\" (click)=\"updateSort(option)\" (keydown)=\"updateSort(option)\">\n\t\t\t<span class=\"sort-popup__item__text\">{{option.label}}</span>\n\t\t\t<mat-icon class=\"sort-popup__item__icon\" *ngIf=\"!isActiveParam(option.param) || showArrow(option.param, 'DESC')\">\n\t\t\t\tarrow_drop_down\n\t\t\t</mat-icon>\n\t\t\t<mat-icon class=\"sort-popup__item__icon\" *ngIf=\"showArrow(option.param, 'ASC')\">\n\t\t\t\tarrow_drop_up\n\t\t\t</mat-icon>\n\t\t</div>\n\t</ng-container>\n</div>\n"
            },] }
];
SortComponent.ctorParameters = () => [
    { type: Store }
];
SortComponent.propDecorators = {
    defaultSort: [{ type: Input }],
    options: [{ type: Input }],
    componentId: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29ydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlLXVpL3NyYy9saWIvc2VhcmNoL2NvbXBvbmVudHMvc29ydC9zb3J0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUN2RCxXQUFXO0FBQ1gsT0FBTyxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFPMUMsT0FBTyxLQUFLLGFBQWEsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQU94RCxNQUFNLE9BQU8sYUFBYTtJQVd4QixZQUNVLEtBQXlCO1FBQXpCLFVBQUssR0FBTCxLQUFLLENBQW9CO1FBTm5DLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFxQ2xCLHdCQUFtQixHQUFHLENBQUMsR0FBa0IsRUFBRSxFQUFFLENBQUMsR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFFN0Usa0JBQWEsR0FBRyxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxlQUFlLENBQUM7UUFDbEUsZ0JBQVcsR0FBRyxDQUFDLEdBQWtCLEVBQUUsRUFBRSxDQUFDLEdBQUcsS0FBSyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2pFLGNBQVMsR0FBRyxDQUFDLEtBQWEsRUFBRSxHQUFrQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFsQ25HLENBQUM7SUFFSixRQUFRO1FBQ04sSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBRUQsY0FBYztRQUNaLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFNBQWtCLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDeEosQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxhQUFhLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7U0FDL0g7UUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBYSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQyxDQUFDO1FBQzVJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFrQixFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0lBQ25KLENBQUM7SUFFRCxVQUFVLENBQUMsTUFBa0I7UUFDM0IsTUFBTSxTQUFTLEdBQWtCLE1BQU0sQ0FBQyxLQUFLLEtBQUssSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQy9ILElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksYUFBYSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBQ3JHLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBSSxhQUFhLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFDakYsQ0FBQzs7O1lBOUNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixzNkJBQW9DO2FBRXJDOzs7WUFkZSxLQUFLOzs7MEJBaUJsQixLQUFLO3NCQUNMLEtBQUs7MEJBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuLy8gRXh0ZXJuYWxcbmltcG9ydCB7c2VsZWN0LCBTdG9yZX0gZnJvbSBcIkBuZ3J4L3N0b3JlXCI7XG4vLyBNb2RlbHNcbmltcG9ydCB7RGVmYXVsdFNvcnR9IGZyb20gXCIuLi8uLi9tb2RlbHMvc29ydC9kZWZhdWx0LXNvcnRcIjtcbmltcG9ydCB7U29ydERpcmVjdGlvbn0gZnJvbSBcIi4uLy4uL21vZGVscy9zb3J0L3NvcnQtZGlyZWN0aW9uXCI7XG5pbXBvcnQge1NvcnRPcHRpb259IGZyb20gXCIuLi8uLi9tb2RlbHMvc29ydC9zb3J0LW9wdGlvblwiO1xuLy8gUmVkdXhcbmltcG9ydCB7U2VhcmNoU3RhdGV9IGZyb20gXCIuLi8uLi9zdG9yZS9zdGF0ZVwiO1xuaW1wb3J0ICogYXMgU2VhcmNoQWN0aW9ucyBmcm9tIFwiLi4vLi4vc3RvcmUvYWN0aW9uc1wiO1xuaW1wb3J0IHtzZWxlY3RDdXJyZW50U2VhcmNoUGFyYW19IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd3ZjEtc29ydC1tb2RhbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zb3J0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBTb3J0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBkZWZhdWx0U29ydDogRGVmYXVsdFNvcnQ7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IFNvcnRPcHRpb25bXTtcbiAgQElucHV0KCkgY29tcG9uZW50SWQ6IHN0cmluZztcblxuICBpc1Zpc2libGUgPSBmYWxzZTtcblxuICBhY3RpdmVTb3J0UGFyYW06IHN0cmluZztcbiAgYWN0aXZlU29ydERpcjogU29ydERpcmVjdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHN0b3JlOiBTdG9yZTxTZWFyY2hTdGF0ZT5cbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0VmlzaWJsaWxpdHkoKTtcbiAgICB0aGlzLnNldERlZmF1bHRTb3J0KCk7XG4gIH1cblxuICBzZXRWaXNpYmxpbGl0eSgpIHtcbiAgICB0aGlzLmlzVmlzaWJsZSA9IHRydWU7XG4gICAgdGhpcy5zdG9yZS5waXBlKHNlbGVjdChzZWxlY3RDdXJyZW50U2VhcmNoUGFyYW0odGhpcy5jb21wb25lbnRJZCwgJ3NvcnRNb2RhbFZpc2libGUnKSkpLnN1YnNjcmliZSgoaXNWaXNpYmxlOiBib29sZWFuKSA9PiB0aGlzLmlzVmlzaWJsZSA9IGlzVmlzaWJsZSk7XG4gIH1cblxuICBzZXREZWZhdWx0U29ydCgpIHtcbiAgICBpZiAodGhpcy5kZWZhdWx0U29ydCkge1xuICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChuZXcgU2VhcmNoQWN0aW9ucy5VcGRhdGVTb3J0QWN0aW9uKHRoaXMuZGVmYXVsdFNvcnQucGFyYW0sIHRoaXMuZGVmYXVsdFNvcnQuZGlyZWN0aW9uLCB0aGlzLmNvbXBvbmVudElkKSk7XG4gICAgfVxuXG4gICAgdGhpcy5zdG9yZS5waXBlKHNlbGVjdChzZWxlY3RDdXJyZW50U2VhcmNoUGFyYW0odGhpcy5jb21wb25lbnRJZCwgJ3NvcnRQYXJhbScpKSkuc3Vic2NyaWJlKChwYXJhbTogc3RyaW5nKSA9PiB0aGlzLmFjdGl2ZVNvcnRQYXJhbSA9IHBhcmFtKTtcbiAgICB0aGlzLnN0b3JlLnBpcGUoc2VsZWN0KHNlbGVjdEN1cnJlbnRTZWFyY2hQYXJhbSh0aGlzLmNvbXBvbmVudElkLCAnc29ydERpcmVjdGlvbicpKSkuc3Vic2NyaWJlKChkaXI6IFNvcnREaXJlY3Rpb24pID0+IHRoaXMuYWN0aXZlU29ydERpciA9IGRpcik7XG4gIH1cblxuICB1cGRhdGVTb3J0KG9wdGlvbjogU29ydE9wdGlvbikge1xuICAgIGNvbnN0IGRpcmVjdGlvbjogU29ydERpcmVjdGlvbiA9IG9wdGlvbi5wYXJhbSA9PT0gdGhpcy5hY3RpdmVTb3J0UGFyYW0gPyB0aGlzLnRvZ2dsZVNvcnREaXJlY3Rpb24odGhpcy5hY3RpdmVTb3J0RGlyKSA6ICdERVNDJztcbiAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKG5ldyBTZWFyY2hBY3Rpb25zLlVwZGF0ZVNvcnRBY3Rpb24ob3B0aW9uLnBhcmFtLCBkaXJlY3Rpb24sIHRoaXMuY29tcG9uZW50SWQpKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuc3RvcmUuZGlzcGF0Y2gobmV3IFNlYXJjaEFjdGlvbnMuVG9nZ2xlU29ydE1vZGFsQWN0aW9uKHRoaXMuY29tcG9uZW50SWQpKTtcbiAgfVxuXG4gIHRvZ2dsZVNvcnREaXJlY3Rpb24gPSAoZGlyOiBTb3J0RGlyZWN0aW9uKSA9PiBkaXIgPT09ICdBU0MnID8gJ0RFU0MnIDogJ0FTQyc7XG5cbiAgaXNBY3RpdmVQYXJhbSA9IChwYXJhbTogc3RyaW5nKSA9PiBwYXJhbSA9PT0gdGhpcy5hY3RpdmVTb3J0UGFyYW07XG4gIGlzQWN0aXZlRGlyID0gKGRpcjogU29ydERpcmVjdGlvbikgPT4gZGlyID09PSB0aGlzLmFjdGl2ZVNvcnREaXI7XG4gIHNob3dBcnJvdyA9IChwYXJhbTogc3RyaW5nLCBkaXI6IFNvcnREaXJlY3Rpb24pID0+IHRoaXMuaXNBY3RpdmVQYXJhbShwYXJhbSkgJiYgdGhpcy5pc0FjdGl2ZURpcihkaXIpO1xuXG59XG4iXX0=