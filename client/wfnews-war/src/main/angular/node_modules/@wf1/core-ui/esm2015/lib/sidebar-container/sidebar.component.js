import { Component, Input, TemplateRef } from "@angular/core";
import { TokenService } from "../services/token.service";
export class SidebarComponent {
    constructor(token) {
        this.token = token;
        this.opened = true;
        this.isInitializing = true;
        this.isInitializing = token.getOauthToken() === null;
    }
    ngOnInit() {
        this.token.authTokenEmitter.subscribe(() => {
            this.isInitializing = false;
        });
    }
}
SidebarComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-sidebar-container',
                template: "<!--\n  DEFAULT TEMPLATE DECLARATIONS FOR SUB-COMPONENTS\n-->\n\n<ng-template #defaultSidebar>\n  <h4>WILDFIRE INCIDENT MANAGEMENT</h4>\n  <mat-accordion>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <i class=\"material-icons\">layers</i>\n        </mat-panel-title>\n        <mat-panel-description>\n          Layers\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      Content here\n      <!--<mat-tree>-->\n        <!--<mat-nested-tree-node>-->\n          <!--parent node-->\n          <!--<mat-nested-tree-node> &#45;&#45; child node1 </mat-nested-tree-node>-->\n          <!--<mat-nested-tree-node> &#45;&#45; child node2 </mat-nested-tree-node>-->\n        <!--</mat-nested-tree-node>-->\n      <!--</mat-tree>-->\n\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <i class=\"material-icons\">apps</i>\n        </mat-panel-title>\n        <mat-panel-description>\n          Basemaps\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <mat-button-toggle-group name=\"basemaps\" aria-label=\"Basemaps\">\n        <mat-button-toggle value=\"imagery\">Imagery</mat-button-toggle>\n        <mat-button-toggle value=\"street\">Street</mat-button-toggle>\n        <mat-button-toggle value=\"topographic\">Topographic</mat-button-toggle>\n      </mat-button-toggle-group>\n\n    </mat-expansion-panel>\n  </mat-accordion>\n</ng-template>\n\n<ng-template #defaultMainContent>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur consectetur debitis, delectus deleniti dolore\n    earum explicabo facere facilis, fugiat itaque numquam provident quam quo quos sint veritatis vero voluptas voluptate?\n  </p>\n</ng-template>\n\n<!--\n  MAIN TEMPLATE DECLARATION\n-->\n<div id=\"core-interface-container\">\n  <wf1-application-header [titleText]=\"titleText\"></wf1-application-header>\n\n  <div class=\"wf1-loading-screen\" *ngIf=\"isInitializing\">\n    <h1>Initializing Application</h1>\n    <wf1-spinner></wf1-spinner>\n    <h3>Please wait while the application initializes.</h3>\n  </div>\n\n  <ng-container *ngIf=\"!isInitializing\">\n    <wf1-application-toolbar menuTemplate=\"menuTemplate\" toolbarTemplate=\"toolbarTemplate\"></wf1-application-toolbar>\n\n    <mat-sidenav-container class=\"mat-typography\" hasBackdrop=false>\n      <mat-sidenav id=\"side-nav\" #sidebar mode=\"side\" [(opened)]=\"opened\" >\n        <ng-container *ngTemplateOutlet=\"sidebarTemplate ? sidebarTemplate: defaultSidebar\"></ng-container>\n      </mat-sidenav>\n      <mat-sidenav-content>\n        <div id=\"side-nav-toggle\" (click)=\"sidebar.toggle()\" (keydown)=\"sidebar.toggle()\">\n          <mat-icon>{{ (opened) ? 'arrow_left' : 'arrow_right' }}</mat-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"mainContentTemplate ? mainContentTemplate: defaultMainContent\"></ng-container>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </ng-container>\n</div>\n"
            },] }
];
SidebarComponent.ctorParameters = () => [
    { type: TokenService }
];
SidebarComponent.propDecorators = {
    titleText: [{ type: Input }],
    menuTemplate: [{ type: Input }],
    toolbarTemplate: [{ type: Input }],
    sidebarTemplate: [{ type: Input }],
    mainContentTemplate: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lkZWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlLXVpL3NyYy9saWIvc2lkZWJhci1jb250YWluZXIvc2lkZWJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxLQUFLLEVBQVUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQU92RCxNQUFNLE9BQU8sZ0JBQWdCO0lBZTNCLFlBQW9CLEtBQW1CO1FBQW5CLFVBQUssR0FBTCxLQUFLLENBQWM7UUFIaEMsV0FBTSxHQUFHLElBQUksQ0FBQztRQUNkLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBRzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLElBQUksQ0FBQztJQUN2RCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRTtZQUN6QyxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQTVCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHVCQUF1QjtnQkFDakMsc2lHQUF1QzthQUV4Qzs7O1lBTk8sWUFBWTs7O3dCQVFqQixLQUFLOzJCQUVMLEtBQUs7OEJBRUwsS0FBSzs4QkFFTCxLQUFLO2tDQUVMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWZ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1Rva2VuU2VydmljZX0gZnJvbSBcIi4uL3NlcnZpY2VzL3Rva2VuLnNlcnZpY2VcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnd2YxLXNpZGViYXItY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6IGAuL3NpZGViYXIuY29tcG9uZW50Lmh0bWxgLFxuICBzdHlsZXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIFNpZGViYXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICB0aXRsZVRleHQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgbWVudVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBASW5wdXQoKVxuICB0b29sYmFyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpXG4gIHNpZGViYXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KClcbiAgbWFpbkNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICBwdWJsaWMgb3BlbmVkID0gdHJ1ZTtcbiAgcHVibGljIGlzSW5pdGlhbGl6aW5nID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRva2VuOiBUb2tlblNlcnZpY2UpIHtcbiAgICB0aGlzLmlzSW5pdGlhbGl6aW5nID0gdG9rZW4uZ2V0T2F1dGhUb2tlbigpID09PSBudWxsO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy50b2tlbi5hdXRoVG9rZW5FbWl0dGVyLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICB0aGlzLmlzSW5pdGlhbGl6aW5nID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==