import { Component, Input, TemplateRef } from "@angular/core";
import { TokenService } from "../services/token.service";
import { AppConfigService } from "../services/app-config.service";
export class WFMLMappingContainerComponent {
    //   isMapInitialized = false;
    constructor(token, appConfig) {
        this.token = token;
        this.appConfig = appConfig;
        this.showToolbar = true;
        this.opened = true;
        //   mapControlsOpened = false;
        //   layerTreeSelected = false;
        //   basemapsSelected = false;
        this.isInitializing = true;
        this.isInitializing = token.getOauthToken() === null;
    }
    ngOnInit() {
        if (!this.appConfig.getConfig().application.lazyAuthenticate) {
            this.token.authTokenEmitter.subscribe(() => {
                this.isInitializing = false;
            });
        }
        else {
            this.isInitializing = false;
        }
    }
    ngAfterViewChecked() {
        // if (!this.isInitializing && !this.isMapInitialized) {
        //   this.initializeMap();
        //   this.isMapInitialized = true;
        // }
    }
    toggleSideNav() {
        // this.mapService.onResize();
    }
    initializeMap() {
        // this.mapService.initializeMap('map');
    }
    onMapControlToggled(currentMapControl) {
        // this.mapControlsOpened = currentMapControl !== MapControl.NONE;
        // this.layerTreeSelected = currentMapControl === MapControl.LAYER_TREE;
        // this.basemapsSelected = currentMapControl === MapControl.BASEMAPS;
    }
}
WFMLMappingContainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'wf1-wfml-mapping-container',
                template: "<!--\n  TEMPLATE DECLARATIONS FOR SUB-COMPONENTS\n-->\n<ng-template #wfmlMapPanel>\n  <div id=\"map\"></div>\n</ng-template>\n\n<ng-template #wfmlSidebar>\n  <header>\n    <h4>WILDFIRE INCIDENT MANAGEMENT</h4>\n  </header>\n  <mat-accordion>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <i class=\"material-icons\">layers</i>\n        </mat-panel-title>\n        <mat-panel-description>\n          Layers\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <wf1-wfml-layer-tree></wf1-wfml-layer-tree>\n\n    </mat-expansion-panel>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          <i class=\"material-icons\">apps</i>\n        </mat-panel-title>\n        <mat-panel-description>\n          Basemaps\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <mat-button-toggle-group name=\"basemaps\" aria-label=\"Basemaps\">\n        <mat-button-toggle value=\"imagery\">Imagery</mat-button-toggle>\n        <mat-button-toggle value=\"street\">Street</mat-button-toggle>\n        <mat-button-toggle value=\"topographic\">Topographic</mat-button-toggle>\n      </mat-button-toggle-group>\n\n    </mat-expansion-panel>\n  </mat-accordion>\n</ng-template>\n\n<!--\n  MAIN TEMPLATE DECLARATION\n-->\n\n\n<!--\n  MAIN TEMPLATE DECLARATION\n-->\n<div id=\"core-interface-container\">\n  <wf1-application-header [titleText]=\"titleText\"></wf1-application-header>\n\n  <div class=\"wf1-loading-screen\" *ngIf=\"isInitializing\">\n    <h1>Initializing Application</h1>\n    <wf1-spinner></wf1-spinner>\n    <h3>Please wait while the application initializes.</h3>\n  </div>\n\n  <ng-container *ngIf=\"!isInitializing\">\n    <wf1-application-toolbar \n        *ngIf=\"showToolbar\"\n        [menuTemplate]=\"menuTemplate\" \n        [toolbarTemplate]=\"toolbarTemplate\" \n        (selectedMapControl)=\"onMapControlToggled($event)\"\n    ></wf1-application-toolbar>\n\n    <mat-sidenav-container class=\"mat-typography\" hasBackdrop=false>\n      <mat-sidenav id=\"side-nav\" #sidebar mode=\"side\" [(opened)]=\"opened\" >\n        <ng-container *ngTemplateOutlet=\"sidebarTemplate ? sidebarTemplate : wfmlSidebar\"></ng-container>\n      </mat-sidenav>\n      <!-- <mat-sidenav id=\"layers-sidebar\" #mapControls mode=\"over\" hasBackdrop=\"false\" position=\"end\" [(opened)]=\"mapControlsOpened\" > -->\n        <!-- <ng-container *ngIf=\"layerTreeSelected\">\n          <wf1-wfml-layer-tree></wf1-wfml-layer-tree>\n        </ng-container>\n        <ng-container *ngIf=\"basemapsSelected\">\n          <wf1-wfml-basemap-selector></wf1-wfml-basemap-selector>\n        </ng-container> -->\n      <!-- </mat-sidenav> -->\n      <mat-sidenav-content>\n        <div id=\"side-nav-toggle\" (click)=\"sidebar.toggle();toggleSideNav()\" (keydown)=\"sidebar.toggle();toggleSideNav()\">\n          <mat-icon>{{ (opened) ? 'arrow_left' : 'arrow_right' }}</mat-icon>\n        </div>\n        <ng-container *ngTemplateOutlet=\"mainContentTemplate ? mainContentTemplate : wfmlMapPanel\"></ng-container>\n      </mat-sidenav-content>\n    </mat-sidenav-container>\n  </ng-container>\n</div>\n"
            },] }
];
WFMLMappingContainerComponent.ctorParameters = () => [
    { type: TokenService },
    { type: AppConfigService }
];
WFMLMappingContainerComponent.propDecorators = {
    titleText: [{ type: Input }],
    menuTemplate: [{ type: Input }],
    toolbarTemplate: [{ type: Input }],
    sidebarTemplate: [{ type: Input }],
    mainContentTemplate: [{ type: Input }],
    showToolbar: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ZtbC1tYXBwaW5nLWNvbnRhaW5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlLXVpL3NyYy9saWIvd2ZtbC1tYXBwaW5nLWNvbnRhaW5lci93Zm1sLW1hcHBpbmctY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW1CLFNBQVMsRUFBRSxLQUFLLEVBQVUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXRGLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUV2RCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQztBQU9oRSxNQUFNLE9BQU8sNkJBQTZCO0lBbUIxQyw4QkFBOEI7SUFFNUIsWUFBb0IsS0FBbUIsRUFDbkIsU0FBMkI7UUFEM0IsVUFBSyxHQUFMLEtBQUssQ0FBYztRQUNuQixjQUFTLEdBQVQsU0FBUyxDQUFrQjtRQVZ0QyxnQkFBVyxHQUFZLElBQUksQ0FBQTtRQUVwQyxXQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLCtCQUErQjtRQUMvQiwrQkFBK0I7UUFDL0IsOEJBQThCO1FBQzVCLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBS3BCLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLElBQUksQ0FBQztJQUN2RCxDQUFDO0lBRUQsUUFBUTtRQUNKLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRTtZQUMxRCxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUU7Z0JBQ3ZDLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1lBQ2hDLENBQUMsQ0FBQyxDQUFDO1NBQ047YUFBTTtZQUNMLElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1NBQzdCO0lBQ0wsQ0FBQztJQUVELGtCQUFrQjtRQUNoQix3REFBd0Q7UUFDeEQsMEJBQTBCO1FBQzFCLGtDQUFrQztRQUNsQyxJQUFJO0lBQ04sQ0FBQztJQUVELGFBQWE7UUFDWCw4QkFBOEI7SUFDaEMsQ0FBQztJQUVELGFBQWE7UUFDWCx3Q0FBd0M7SUFDMUMsQ0FBQztJQUVELG1CQUFtQixDQUFDLGlCQUE2QjtRQUMvQyxrRUFBa0U7UUFDbEUsd0VBQXdFO1FBQ3hFLHFFQUFxRTtJQUN2RSxDQUFDOzs7WUE1REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw0QkFBNEI7Z0JBQ3RDLHlxR0FBc0Q7YUFFdkQ7OztZQVJPLFlBQVk7WUFFWixnQkFBZ0I7Ozt3QkFRckIsS0FBSzsyQkFFTCxLQUFLOzhCQUVMLEtBQUs7OEJBRUwsS0FBSztrQ0FFTCxLQUFLOzBCQUdMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0FmdGVyVmlld0NoZWNrZWQsIENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWZ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5cbmltcG9ydCB7VG9rZW5TZXJ2aWNlfSBmcm9tIFwiLi4vc2VydmljZXMvdG9rZW4uc2VydmljZVwiO1xuaW1wb3J0IHtNYXBDb250cm9sfSBmcm9tIFwiLi4vYXBwbGljYXRpb24tdG9vbGJhci9hcHBsaWNhdGlvbi10b29sYmFyLmNvbXBvbmVudFwiO1xuaW1wb3J0IHtBcHBDb25maWdTZXJ2aWNlfSBmcm9tIFwiLi4vc2VydmljZXMvYXBwLWNvbmZpZy5zZXJ2aWNlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3dmMS13Zm1sLW1hcHBpbmctY29udGFpbmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3dmbWwtbWFwcGluZy1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZXM6IFtdXG59KVxuZXhwb3J0IGNsYXNzIFdGTUxNYXBwaW5nQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdDaGVja2VkIHtcbiAgQElucHV0KClcbiAgdGl0bGVUZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIG1lbnVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcbiAgQElucHV0KClcbiAgdG9vbGJhclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuICBASW5wdXQoKVxuICBzaWRlYmFyVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpXG4gIG1haW5Db250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KCkgc2hvd1Rvb2xiYXI6IGJvb2xlYW4gPSB0cnVlXG5cbiAgb3BlbmVkID0gdHJ1ZTtcbi8vICAgbWFwQ29udHJvbHNPcGVuZWQgPSBmYWxzZTtcbi8vICAgbGF5ZXJUcmVlU2VsZWN0ZWQgPSBmYWxzZTtcbi8vICAgYmFzZW1hcHNTZWxlY3RlZCA9IGZhbHNlO1xuICBpc0luaXRpYWxpemluZyA9IHRydWU7XG4vLyAgIGlzTWFwSW5pdGlhbGl6ZWQgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRva2VuOiBUb2tlblNlcnZpY2UsXG4gICAgICAgICAgICAgIHByaXZhdGUgYXBwQ29uZmlnOiBBcHBDb25maWdTZXJ2aWNlKSB7XG4gICAgdGhpcy5pc0luaXRpYWxpemluZyA9IHRva2VuLmdldE9hdXRoVG9rZW4oKSA9PT0gbnVsbDtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgICAgaWYgKCF0aGlzLmFwcENvbmZpZy5nZXRDb25maWcoKS5hcHBsaWNhdGlvbi5sYXp5QXV0aGVudGljYXRlKSB7XG4gICAgICAgICAgdGhpcy50b2tlbi5hdXRoVG9rZW5FbWl0dGVyLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuaXNJbml0aWFsaXppbmcgPSBmYWxzZTtcbiAgICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaXNJbml0aWFsaXppbmcgPSBmYWxzZTtcbiAgICAgIH1cbiAgfVxuXG4gIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpIHtcbiAgICAvLyBpZiAoIXRoaXMuaXNJbml0aWFsaXppbmcgJiYgIXRoaXMuaXNNYXBJbml0aWFsaXplZCkge1xuICAgIC8vICAgdGhpcy5pbml0aWFsaXplTWFwKCk7XG4gICAgLy8gICB0aGlzLmlzTWFwSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIC8vIH1cbiAgfVxuXG4gIHRvZ2dsZVNpZGVOYXYoKSB7XG4gICAgLy8gdGhpcy5tYXBTZXJ2aWNlLm9uUmVzaXplKCk7XG4gIH1cblxuICBpbml0aWFsaXplTWFwKCkge1xuICAgIC8vIHRoaXMubWFwU2VydmljZS5pbml0aWFsaXplTWFwKCdtYXAnKTtcbiAgfVxuXG4gIG9uTWFwQ29udHJvbFRvZ2dsZWQoY3VycmVudE1hcENvbnRyb2w6IE1hcENvbnRyb2wpIHtcbiAgICAvLyB0aGlzLm1hcENvbnRyb2xzT3BlbmVkID0gY3VycmVudE1hcENvbnRyb2wgIT09IE1hcENvbnRyb2wuTk9ORTtcbiAgICAvLyB0aGlzLmxheWVyVHJlZVNlbGVjdGVkID0gY3VycmVudE1hcENvbnRyb2wgPT09IE1hcENvbnRyb2wuTEFZRVJfVFJFRTtcbiAgICAvLyB0aGlzLmJhc2VtYXBzU2VsZWN0ZWQgPSBjdXJyZW50TWFwQ29udHJvbCA9PT0gTWFwQ29udHJvbC5CQVNFTUFQUztcbiAgfVxufVxuIl19