{"version":3,"file":"filters.component.d.ts","sources":["filters.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Store } from \"@ngrx/store\";\nimport { IncidentType } from \"../../../application-icon/application-icon.model\";\nimport { FilterConfig } from \"../../models/filter/filter-config\";\nimport { SearchState } from \"../../store/state\";\nexport declare class FiltersComponent implements OnInit, AfterViewInit, OnChanges {\n    private formBuilder;\n    private store;\n    filters: FilterConfig[];\n    constructor(formBuilder: FormBuilder, store: Store<SearchState>);\n    ngOnChanges(changes: SimpleChanges): void;\n    TOOLTIP_DELAY: number;\n    fromDateMin: any[];\n    toDateMax: any[];\n    DATE_FORMATS: {\n        fullPickerInput: string;\n        datePickerInput: string;\n        timePickerInput: string;\n        monthYearLabel: string;\n        dateA11yLabel: string;\n        monthYearA11yLabel: string;\n    };\n    private _filters;\n    componentId: string;\n    isShowingFilterOptions: EventEmitter<boolean>;\n    filterForm: FormGroup;\n    activeFilters: {\n        [param: string]: any[];\n    };\n    showBody: boolean;\n    lastTabPosition: number;\n    clearFilterIconType: IncidentType;\n    filterTabBodyEl: ElementRef;\n    validateDate: (m: any) => boolean;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    createForm(): void;\n    checkboxUpdated(event: any): void;\n    dateUpdated(event: any, param: any, fromTo: any): void;\n    getActiveFilters(): void;\n    selectTab(tab: any): void;\n    toggleActiveTabContent(isActiveTab: any, showBody: any): void;\n    clearFilter(param: string): void;\n    updateFormValues(): void;\n    extractValuesFromForm(filterValues: {\n        [prop: string]: any;\n    }): void;\n    getFormArrayNames(group: FormGroup): string[];\n    getFormControlsFromArray(group: FormGroup, prop: string): FormGroup[];\n    getSelectedFilterValues(param: string): string;\n}\n"]}