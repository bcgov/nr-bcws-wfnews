{"version":3,"file":"wfml-layer-tree.component.d.ts","sources":["wfml-layer-tree.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, OnInit } from \"@angular/core\";\nimport { MapService } from \"../services/map.service\";\nimport { TreeNode } from \"../interfaces/layer-treemap\";\nimport { NestedTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeNestedDataSource } from \"@angular/material/tree\";\nimport { SelectionModel } from \"@angular/cdk/collections\";\nexport declare class WFMLLayerTreeComponent implements OnInit {\n    private mapService;\n    private changeDetectorRef;\n    treeControl: NestedTreeControl<TreeNode>;\n    dataSource: MatTreeNestedDataSource<TreeNode>;\n    /** The selection for checklist */\n    checklistSelection: SelectionModel<TreeNode>;\n    constructor(mapService: MapService, changeDetectorRef: ChangeDetectorRef);\n    ngOnInit(): void;\n    initializeTreeLayer(): void;\n    findSelectedElements(node: TreeNode): TreeNode[];\n    hasChildren: (_: number, node: TreeNode) => boolean;\n    /** Whether all the descendants of the node are selected */\n    descendantsAllSelected(node: TreeNode): boolean;\n    /** Whether part of the descendants are selected */\n    descendantsPartiallySelected(node: TreeNode): boolean;\n    /** Toggle the game selection. Select/deselect all the descendants node */\n    nodeSelectionToggle(node: TreeNode): void;\n}\n"]}