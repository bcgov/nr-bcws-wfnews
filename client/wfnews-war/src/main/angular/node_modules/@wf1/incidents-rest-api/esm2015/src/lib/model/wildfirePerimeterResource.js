/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function WildfirePerimeterResource() { }
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.links;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.versionNumber;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.mappingLabel;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.collectionDate;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.collectorName;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.contactName;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.contactEmail;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.featureSizeHectares;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.featurePerimeterMeters;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.waterRemovedInd;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.unburnedAreasRemovedInd;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.perimeterComment;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.perimeterPoly;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.perimeterStatusCode;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.collectionMethod;
/** @type {?|undefined} */
WildfirePerimeterResource.prototype.etag;
/** @type {?} */
WildfirePerimeterResource.prototype.type;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lsZGZpcmVQZXJpbWV0ZXJSZXNvdXJjZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B3ZjEvaW5jaWRlbnRzLXJlc3QtYXBpL3NyYy9saWIvIiwic291cmNlcyI6WyJtb2RlbC93aWxkZmlyZVBlcmltZXRlclJlc291cmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdGSU0gSW5jaWRlbnQgTWFuYWdlciBBUElcbiAqIE5vIGRlc2NyaXB0aW9uIHByb3ZpZGVkIChnZW5lcmF0ZWQgYnkgT3BlbmFwaSBHZW5lcmF0b3IgaHR0cHM6Ly9naXRodWIuY29tL29wZW5hcGl0b29scy9vcGVuYXBpLWdlbmVyYXRvcilcbiAqXG4gKiBUaGUgdmVyc2lvbiBvZiB0aGUgT3BlbkFQSSBkb2N1bWVudDogMS44LjAtU05BUFNIT1RcbiAqIFxuICpcbiAqIE5PVEU6IFRoaXMgY2xhc3MgaXMgYXV0byBnZW5lcmF0ZWQgYnkgT3BlbkFQSSBHZW5lcmF0b3IgKGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaCkuXG4gKiBodHRwczovL29wZW5hcGktZ2VuZXJhdG9yLnRlY2hcbiAqIERvIG5vdCBlZGl0IHRoZSBjbGFzcyBtYW51YWxseS5cbiAqL1xuaW1wb3J0IHsgQ29sbGVjdGlvbk1ldGhvZFJlc291cmNlIH0gZnJvbSAnLi9jb2xsZWN0aW9uTWV0aG9kUmVzb3VyY2UnO1xuaW1wb3J0IHsgUmVsTGluayB9IGZyb20gJy4vcmVsTGluayc7XG5cblxuZXhwb3J0IGludGVyZmFjZSBXaWxkZmlyZVBlcmltZXRlclJlc291cmNlIHsgXG4gICAgbGlua3M/OiBBcnJheTxSZWxMaW5rPjtcbiAgICB2ZXJzaW9uTnVtYmVyPzogbnVtYmVyO1xuICAgIG1hcHBpbmdMYWJlbD86IHN0cmluZztcbiAgICBjb2xsZWN0aW9uRGF0ZT86IHN0cmluZztcbiAgICBjb2xsZWN0b3JOYW1lPzogc3RyaW5nO1xuICAgIGNvbnRhY3ROYW1lPzogc3RyaW5nO1xuICAgIGNvbnRhY3RFbWFpbD86IHN0cmluZztcbiAgICBmZWF0dXJlU2l6ZUhlY3RhcmVzPzogbnVtYmVyO1xuICAgIGZlYXR1cmVQZXJpbWV0ZXJNZXRlcnM/OiBudW1iZXI7XG4gICAgd2F0ZXJSZW1vdmVkSW5kPzogYm9vbGVhbjtcbiAgICB1bmJ1cm5lZEFyZWFzUmVtb3ZlZEluZD86IGJvb2xlYW47XG4gICAgcGVyaW1ldGVyQ29tbWVudD86IHN0cmluZztcbiAgICBwZXJpbWV0ZXJQb2x5Pzogb2JqZWN0O1xuICAgIHBlcmltZXRlclN0YXR1c0NvZGU/OiBzdHJpbmc7XG4gICAgY29sbGVjdGlvbk1ldGhvZD86IENvbGxlY3Rpb25NZXRob2RSZXNvdXJjZTtcbiAgICBldGFnPzogc3RyaW5nO1xuICAgIHR5cGU6IHN0cmluZztcbn1cblxuIl19