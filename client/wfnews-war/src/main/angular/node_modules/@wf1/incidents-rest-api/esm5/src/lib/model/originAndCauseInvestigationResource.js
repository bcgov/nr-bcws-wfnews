/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function OriginAndCauseInvestigationResource() { }
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.links;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigatorName;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigationReferenceNumber;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigationRequestedTimestamp;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigationAgencyRespondedTimestamp;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigationRequesterCode;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigationDeterminationStatusCode;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.resourcesRequestedInd;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.agencyRespondedInd;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.claimExpectedInd;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.estimatedDamageAmount;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.investigatingParty;
/** @type {?|undefined} */
OriginAndCauseInvestigationResource.prototype.etag;
/** @type {?} */
OriginAndCauseInvestigationResource.prototype.type;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JpZ2luQW5kQ2F1c2VJbnZlc3RpZ2F0aW9uUmVzb3VyY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Ad2YxL2luY2lkZW50cy1yZXN0LWFwaS9zcmMvbGliLyIsInNvdXJjZXMiOlsibW9kZWwvb3JpZ2luQW5kQ2F1c2VJbnZlc3RpZ2F0aW9uUmVzb3VyY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogV0ZJTSBJbmNpZGVudCBNYW5hZ2VyIEFQSVxuICogTm8gZGVzY3JpcHRpb24gcHJvdmlkZWQgKGdlbmVyYXRlZCBieSBPcGVuYXBpIEdlbmVyYXRvciBodHRwczovL2dpdGh1Yi5jb20vb3BlbmFwaXRvb2xzL29wZW5hcGktZ2VuZXJhdG9yKVxuICpcbiAqIFRoZSB2ZXJzaW9uIG9mIHRoZSBPcGVuQVBJIGRvY3VtZW50OiAxLjguMC1TTkFQU0hPVFxuICogXG4gKlxuICogTk9URTogVGhpcyBjbGFzcyBpcyBhdXRvIGdlbmVyYXRlZCBieSBPcGVuQVBJIEdlbmVyYXRvciAoaHR0cHM6Ly9vcGVuYXBpLWdlbmVyYXRvci50ZWNoKS5cbiAqIGh0dHBzOi8vb3BlbmFwaS1nZW5lcmF0b3IudGVjaFxuICogRG8gbm90IGVkaXQgdGhlIGNsYXNzIG1hbnVhbGx5LlxuICovXG5pbXBvcnQgeyBXaWxkZmlyZVBhcnR5UmVzb3VyY2UgfSBmcm9tICcuL3dpbGRmaXJlUGFydHlSZXNvdXJjZSc7XG5pbXBvcnQgeyBSZWxMaW5rIH0gZnJvbSAnLi9yZWxMaW5rJztcblxuXG5leHBvcnQgaW50ZXJmYWNlIE9yaWdpbkFuZENhdXNlSW52ZXN0aWdhdGlvblJlc291cmNlIHsgXG4gICAgbGlua3M/OiBBcnJheTxSZWxMaW5rPjtcbiAgICBpbnZlc3RpZ2F0b3JOYW1lPzogc3RyaW5nO1xuICAgIGludmVzdGlnYXRpb25SZWZlcmVuY2VOdW1iZXI/OiBzdHJpbmc7XG4gICAgaW52ZXN0aWdhdGlvblJlcXVlc3RlZFRpbWVzdGFtcD86IHN0cmluZztcbiAgICBpbnZlc3RpZ2F0aW9uQWdlbmN5UmVzcG9uZGVkVGltZXN0YW1wPzogc3RyaW5nO1xuICAgIGludmVzdGlnYXRpb25SZXF1ZXN0ZXJDb2RlPzogc3RyaW5nO1xuICAgIGludmVzdGlnYXRpb25EZXRlcm1pbmF0aW9uU3RhdHVzQ29kZT86IHN0cmluZztcbiAgICByZXNvdXJjZXNSZXF1ZXN0ZWRJbmQ/OiBib29sZWFuO1xuICAgIGFnZW5jeVJlc3BvbmRlZEluZD86IGJvb2xlYW47XG4gICAgY2xhaW1FeHBlY3RlZEluZD86IGJvb2xlYW47XG4gICAgZXN0aW1hdGVkRGFtYWdlQW1vdW50PzogbnVtYmVyO1xuICAgIGludmVzdGlnYXRpbmdQYXJ0eT86IFdpbGRmaXJlUGFydHlSZXNvdXJjZTtcbiAgICBldGFnPzogc3RyaW5nO1xuICAgIHR5cGU6IHN0cmluZztcbn1cblxuIl19