import { HttpClient, HttpHeaders, HttpResponse, HttpEvent } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CodeHierarchyResource } from '../model/codeHierarchyResource';
import { OrgUnitConfiguration } from '../configuration';
export declare class CodeHierarchyEndpointsService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: OrgUnitConfiguration;
    constructor(httpClient: HttpClient, basePath: string, configuration: OrgUnitConfiguration);
    /**
     * @param consumes string[] mime-types
     * @return true: consumes contains 'multipart/form-data', false: otherwise
     */
    private canConsumeForm(consumes);
    /**
     * Get CodeHierarchy resource by code table name.
     * Get CodeHierarchy resource by code table name.
     * @param codeHierarchyName The identifier of the CodeHierarchy resource.
     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.
     * @param restVersion The version of the Rest API supported by the requesting client.
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'body', reportProgress?: boolean): Observable<CodeHierarchyResource>;
    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CodeHierarchyResource>>;
    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CodeHierarchyResource>>;
    /**
     * Update CodeHierarchy resource by code table name.
     * Update CodeHierarchy by code table name.
     * @param codeHierarchyName The identifier of the CodeHierarchy resource.
     * @param codeHierarchy The CodeHierarchy resource containing the new values.
     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.
     * @param restVersion The version of the Rest API supported by the requesting client.
     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.
     * @param reportProgress flag to report request and response progress.
     */
    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'body', reportProgress?: boolean): Observable<CodeHierarchyResource>;
    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CodeHierarchyResource>>;
    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CodeHierarchyResource>>;
}
