{"version":3,"file":"codeHierarchyEndpoints.service.d.ts","sources":["codeHierarchyEndpoints.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { HttpClient, HttpHeaders, HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CodeHierarchyResource } from '../model/codeHierarchyResource';\nimport { OrgUnitConfiguration } from '../configuration';\nexport declare class CodeHierarchyEndpointsService {\n    protected httpClient: HttpClient;\n    protected basePath: string;\n    defaultHeaders: HttpHeaders;\n    configuration: OrgUnitConfiguration;\n    constructor(httpClient: HttpClient, basePath: string, configuration: OrgUnitConfiguration);\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes);\n    /**\n     * Get CodeHierarchy resource by code table name.\n     * Get CodeHierarchy resource by code table name.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'body', reportProgress?: boolean): Observable<CodeHierarchyResource>;\n    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CodeHierarchyResource>>;\n    getCodeHierarchy1(codeHierarchyName: string, effectiveAsOfDate?: string, restVersion?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CodeHierarchyResource>>;\n    /**\n     * Update CodeHierarchy resource by code table name.\n     * Update CodeHierarchy by code table name.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param codeHierarchy The CodeHierarchy resource containing the new values.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'body', reportProgress?: boolean): Observable<CodeHierarchyResource>;\n    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<CodeHierarchyResource>>;\n    updateCodeHierarchy1(codeHierarchyName: string, codeHierarchy: CodeHierarchyResource, ifMatch: string, restVersion?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<CodeHierarchyResource>>;\n}\n"]}