import { Component, EventEmitter, Input, Output } from "@angular/core";
import { BaseComponent } from "../base.component";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/router";
export class WfMenuBarComponent extends BaseComponent {
    constructor() {
        super();
        this.activeItemChanged = new EventEmitter();
        this.tooltipShowDelay = 300;
        this.activeItemChanged.subscribe((item) => {
            if (item.menuStateAfterActive && this.config && this.config.device != "desktop") {
                this.menuState = item.menuStateAfterActive;
            }
        });
    }
    set menuItems(m) {
        this._menu = m;
        this._menu.forEach(i => i.OnActiveChanged(() => {
            this.activeItemChanged.emit(i);
        }));
    }
    get menuItems() { return this._menu; }
    onItemClick(item) {
        this.activeItemChanged.emit(item);
    }
}
WfMenuBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: WfMenuBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
WfMenuBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.9", type: WfMenuBarComponent, selector: "wf-menu-bar", inputs: { menuItems: "menuItems" }, outputs: { activeItemChanged: "activeItemChanged" }, usesInheritance: true, ngImport: i0, template: "<div class=\"body\">\n    <div class=\"nav-items\">\n        <ng-container *ngFor=\"let item of menuItems\">\n            <ng-container *ngIf=\"item.type == 'router-link'\">\n                <a class=\"nav-item\"\n                    [routerLink]=\"item.route\"\n                    [class.active]=\"item.isActive\"\n                    (click)=\"onItemClick( item )\"\n                >\n                    <span class=\"label\">{{ item.title }}</span>\n                </a>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n", styles: [":host{background-color:var(--wf-menu-bar-background-color);display:flex}:host .header{display:none}:host .body .nav-items{padding:15px 0}:host .body .nav-items a.nav-item{display:inline-flex;flex-direction:row;justify-content:flex-start;align-items:center;font-size:15px;text-decoration:none;cursor:pointer;height:var(--wf-menu-bar-item-row-height);border-right:1px solid var(--wf-menu-bar-divider-color)}:host .body .nav-items a.nav-item .label{color:#fff;min-width:200px;text-align:center}:host .body .nav-items a.nav-item:hover{font-weight:var(--wf-menu-bar-font-weight)}:host .body .nav-items a.nav-item.active{font-weight:700;color:var(--wf-menu-active-color)}:host .body .nav-items a.nav-item.active .label{color:#fff;text-decoration:underline;text-underline-offset:5px;text-decoration-thickness:2px}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.RouterLink, selector: "[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.9", ngImport: i0, type: WfMenuBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'wf-menu-bar', template: "<div class=\"body\">\n    <div class=\"nav-items\">\n        <ng-container *ngFor=\"let item of menuItems\">\n            <ng-container *ngIf=\"item.type == 'router-link'\">\n                <a class=\"nav-item\"\n                    [routerLink]=\"item.route\"\n                    [class.active]=\"item.isActive\"\n                    (click)=\"onItemClick( item )\"\n                >\n                    <span class=\"label\">{{ item.title }}</span>\n                </a>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n", styles: [":host{background-color:var(--wf-menu-bar-background-color);display:flex}:host .header{display:none}:host .body .nav-items{padding:15px 0}:host .body .nav-items a.nav-item{display:inline-flex;flex-direction:row;justify-content:flex-start;align-items:center;font-size:15px;text-decoration:none;cursor:pointer;height:var(--wf-menu-bar-item-row-height);border-right:1px solid var(--wf-menu-bar-divider-color)}:host .body .nav-items a.nav-item .label{color:#fff;min-width:200px;text-align:center}:host .body .nav-items a.nav-item:hover{font-weight:var(--wf-menu-bar-font-weight)}:host .body .nav-items a.nav-item.active{font-weight:700;color:var(--wf-menu-active-color)}:host .body .nav-items a.nav-item.active .label{color:#fff;text-decoration:underline;text-underline-offset:5px;text-decoration-thickness:2px}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { menuItems: [{
                type: Input
            }], activeItemChanged: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2YtbWVudS1iYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvd2ZjYy1hcHBsaWNhdGlvbi11aS9zcmMvYXBwbGljYXRpb24vY29tcG9uZW50cy93Zi1tZW51LWJhci93Zi1tZW51LWJhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy93ZmNjLWFwcGxpY2F0aW9uLXVpL3NyYy9hcHBsaWNhdGlvbi9jb21wb25lbnRzL3dmLW1lbnUtYmFyL3dmLW1lbnUtYmFyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHdkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7O0FBUWxELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxhQUFhO0lBY2pEO1FBQ0ksS0FBSyxFQUFFLENBQUE7UUFMRCxzQkFBaUIsR0FBRyxJQUFJLFlBQVksRUFBYyxDQUFDO1FBRTdELHFCQUFnQixHQUFHLEdBQUcsQ0FBQTtRQUlsQixJQUFJLENBQUMsaUJBQWlCLENBQUMsU0FBUyxDQUFFLENBQUUsSUFBSSxFQUFHLEVBQUU7WUFDekMsSUFBSyxJQUFJLENBQUMsb0JBQW9CLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxTQUFTLEVBQUM7Z0JBQzdFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFBO2FBQzdDO1FBQ0wsQ0FBQyxDQUFFLENBQUE7SUFDUCxDQUFDO0lBbkJELElBQWEsU0FBUyxDQUFFLENBQWM7UUFDbEMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUE7UUFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUUsR0FBRyxFQUFFO1lBQzdDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUUsQ0FBQyxDQUFFLENBQUE7UUFDcEMsQ0FBQyxDQUFFLENBQUUsQ0FBQTtJQUNULENBQUM7SUFDRCxJQUFJLFNBQVMsS0FBSyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUEsQ0FBQyxDQUFDO0lBZXJDLFdBQVcsQ0FBRSxJQUFnQjtRQUN6QixJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFFLElBQUksQ0FBRSxDQUFBO0lBQ3ZDLENBQUM7OytHQXpCUSxrQkFBa0I7bUdBQWxCLGtCQUFrQixtS0NYL0IsMGlCQWVBOzJGREphLGtCQUFrQjtrQkFMOUIsU0FBUzsrQkFDSSxhQUFhOzBFQU1WLFNBQVM7c0JBQXJCLEtBQUs7Z0JBUUksaUJBQWlCO3NCQUExQixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgTmF2aWdhdGlvbkVuZCwgUm91dGVyLCBVcmxUcmVlIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgV2ZNZW51U3RhdGUgfSBmcm9tIFwiLi4vLi4vYXBwbGljYXRpb24uY29uZmlnXCI7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSBcIi4uL2Jhc2UuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBXZk1lbnVJdGVtLCBXZk1lbnVJdGVtcyB9IGZyb20gXCIuLi93Zi1tZW51L3dmLW1lbnUuY29tcG9uZW50XCI7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnd2YtbWVudS1iYXInLFxuICAgIHRlbXBsYXRlVXJsOiAnLi93Zi1tZW51LWJhci5jb21wb25lbnQuaHRtbCcsXG4gICAgc3R5bGVVcmxzOiBbJy4vd2YtbWVudS1iYXIuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgV2ZNZW51QmFyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICAgX21lbnU6IFdmTWVudUl0ZW1zXG4gICAgQElucHV0KCkgc2V0IG1lbnVJdGVtcyggbTogV2ZNZW51SXRlbXMgKSB7XG4gICAgICAgIHRoaXMuX21lbnUgPSBtXG4gICAgICAgIHRoaXMuX21lbnUuZm9yRWFjaCggaSA9PiBpLk9uQWN0aXZlQ2hhbmdlZCggKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmVJdGVtQ2hhbmdlZC5lbWl0KCBpIClcbiAgICAgICAgfSApIClcbiAgICB9XG4gICAgZ2V0IG1lbnVJdGVtcygpIHsgcmV0dXJuIHRoaXMuX21lbnUgfVxuXG4gICAgQE91dHB1dCgpIGFjdGl2ZUl0ZW1DaGFuZ2VkID0gbmV3IEV2ZW50RW1pdHRlcjxXZk1lbnVJdGVtPigpO1xuXG4gICAgdG9vbHRpcFNob3dEZWxheSA9IDMwMFxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5hY3RpdmVJdGVtQ2hhbmdlZC5zdWJzY3JpYmUoICggaXRlbSApID0+IHtcbiAgICAgICAgICAgIGlmICggaXRlbS5tZW51U3RhdGVBZnRlckFjdGl2ZSAmJiB0aGlzLmNvbmZpZyAmJiB0aGlzLmNvbmZpZy5kZXZpY2UgIT0gXCJkZXNrdG9wXCIpe1xuICAgICAgICAgICAgICAgIHRoaXMubWVudVN0YXRlID0gaXRlbS5tZW51U3RhdGVBZnRlckFjdGl2ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9IClcbiAgICB9XG5cbiAgICBvbkl0ZW1DbGljayggaXRlbTogV2ZNZW51SXRlbSApIHtcbiAgICAgICAgdGhpcy5hY3RpdmVJdGVtQ2hhbmdlZC5lbWl0KCBpdGVtIClcbiAgICB9XG59XG5cbi8vIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtXG5cbiIsIjxkaXYgY2xhc3M9XCJib2R5XCI+XG4gICAgPGRpdiBjbGFzcz1cIm5hdi1pdGVtc1wiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBpdGVtIG9mIG1lbnVJdGVtc1wiPlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIml0ZW0udHlwZSA9PSAncm91dGVyLWxpbmsnXCI+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJuYXYtaXRlbVwiXG4gICAgICAgICAgICAgICAgICAgIFtyb3V0ZXJMaW5rXT1cIml0ZW0ucm91dGVcIlxuICAgICAgICAgICAgICAgICAgICBbY2xhc3MuYWN0aXZlXT1cIml0ZW0uaXNBY3RpdmVcIlxuICAgICAgICAgICAgICAgICAgICAoY2xpY2spPVwib25JdGVtQ2xpY2soIGl0ZW0gKVwiXG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImxhYmVsXCI+e3sgaXRlbS50aXRsZSB9fTwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==