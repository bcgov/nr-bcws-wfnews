{"version":3,"file":"wf1-wfdm-document-management-api.js","sources":["@wf1/wfdm-document-management-api/encoder.ts","@wf1/wfdm-document-management-api/variables.ts","@wf1/wfdm-document-management-api/configuration.ts","@wf1/wfdm-document-management-api/api/default.service.ts","@wf1/wfdm-document-management-api/api/api.ts","@wf1/wfdm-document-management-api/model/bodyPart.ts","@wf1/wfdm-document-management-api/model/bodyPartMediaType.ts","@wf1/wfdm-document-management-api/model/codeHierarchyListRsrc.ts","@wf1/wfdm-document-management-api/model/codeHierarchyRsrc.ts","@wf1/wfdm-document-management-api/model/codeRsrc.ts","@wf1/wfdm-document-management-api/model/codeTableListRsrc.ts","@wf1/wfdm-document-management-api/model/codeTableRsrc.ts","@wf1/wfdm-document-management-api/model/contentDisposition.ts","@wf1/wfdm-document-management-api/model/endpointsRsrc.ts","@wf1/wfdm-document-management-api/model/fileCheckoutRsrc.ts","@wf1/wfdm-document-management-api/model/fileDetailsRsrc.ts","@wf1/wfdm-document-management-api/model/fileListRsrc.ts","@wf1/wfdm-document-management-api/model/fileMetadataRsrc.ts","@wf1/wfdm-document-management-api/model/fileRsrc.ts","@wf1/wfdm-document-management-api/model/fileSecurityRsrc.ts","@wf1/wfdm-document-management-api/model/fileVersionRsrc.ts","@wf1/wfdm-document-management-api/model/formDataBodyPart.ts","@wf1/wfdm-document-management-api/model/formDataContentDisposition.ts","@wf1/wfdm-document-management-api/model/healthCheckResponseRsrc.ts","@wf1/wfdm-document-management-api/model/hierarchy.ts","@wf1/wfdm-document-management-api/model/inlineObject.ts","@wf1/wfdm-document-management-api/model/inlineObject1.ts","@wf1/wfdm-document-management-api/model/lockListRsrc.ts","@wf1/wfdm-document-management-api/model/lockRsrc.ts","@wf1/wfdm-document-management-api/model/messageListRsrc.ts","@wf1/wfdm-document-management-api/model/messageRsrc.ts","@wf1/wfdm-document-management-api/model/multiPart.ts","@wf1/wfdm-document-management-api/model/parameterizedHeader.ts","@wf1/wfdm-document-management-api/model/relLink.ts","@wf1/wfdm-document-management-api/model/securityKeyRsrc.ts","@wf1/wfdm-document-management-api/api.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CodeHierarchyListRsrc } from '../model/models';\nimport { CodeHierarchyRsrc } from '../model/models';\nimport { CodeTableListRsrc } from '../model/models';\nimport { CodeTableRsrc } from '../model/models';\nimport { EndpointsRsrc } from '../model/models';\nimport { FileCheckoutRsrc } from '../model/models';\nimport { FileDetailsRsrc } from '../model/models';\nimport { FileListRsrc } from '../model/models';\nimport { FormDataBodyPart } from '../model/models';\nimport { HealthCheckResponseRsrc } from '../model/models';\nimport { LockListRsrc } from '../model/models';\nimport { LockRsrc } from '../model/models';\nimport { MessageListRsrc } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultService {\n\n    protected basePath = 'http://localhost';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param fileCheckoutRsrc The Checkout rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling addDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling addDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param requestBody fileid of file to add\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling addFilesToLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling addFilesToLock.');\n        }\n        if (requestBody === null || requestBody === undefined) {\n            throw new Error('Required parameter requestBody was null or undefined when calling addFilesToLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/addFile`,\n            requestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockRsrc The lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling addLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LockRsrc>(`${this.configuration.basePath}/lock`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param targetFilePath The target file path for the copy.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling copyDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling copyDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (targetFilePath !== undefined && targetFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>targetFilePath, 'targetFilePath');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/copy`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Document by Document ID\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a document checkout\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling deleteDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a lock\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling deleteLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Hierarchy List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeHierarchyName Filter the results by the codeHierarchyName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyListRsrc>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeHierarchyName !== undefined && codeHierarchyName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeHierarchyName, 'codeHierarchyName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyListRsrc>(`${this.configuration.basePath}/codeHierarchies`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeHierarchy resource by code table name.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling getCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Table List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeTableName Filter the results by the codeTableName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableListRsrc>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeTableName !== undefined && codeTableName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeTableName, 'codeTableName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableListRsrc>(`${this.configuration.basePath}/codeTables`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeTable resource by code table name.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling getCodeTableResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentById.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling getDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document Checkout List\n     * @param documentId The document resource id.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckoutList.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param versionNumber The versionId of the Document resource.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<string>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentFileBytesById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (versionNumber !== undefined && versionNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>versionNumber, 'versionNumber');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/bytes`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document List\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param parentId Parent Id\n     * @param recursive ChildrenRecursive\n     * @param lockId Lock Id\n     * @param metadata metadata\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (parentId !== undefined && parentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>parentId, 'parentId');\n        }\n        if (recursive !== undefined && recursive !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursive, 'recursive');\n        }\n        if (lockId !== undefined && lockId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>lockId, 'lockId');\n        }\n        if (metadata) {\n            metadata.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'metadata');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentLock.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/fileLock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param searchText searchText\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (searchText) {\n            searchText.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'searchText');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/lock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling getLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Swagger Document\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EndpointsRsrc>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/openapi.json`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Top Level Resources\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<EndpointsRsrc>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param newFilePath The new file path of the File.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling moveDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling moveDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (newFilePath !== undefined && newFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>newFilePath, 'newFilePath');\n        }\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/move`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Query the health of the service.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param callstack A comm separated list of the identifier of the calling components.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HealthCheckResponseRsrc>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (callstack !== undefined && callstack !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>callstack, 'callstack');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<HealthCheckResponseRsrc>(`${this.configuration.basePath}/checkHealth`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param body fileId of file to remove\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling removeFileFromLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling removeFileFromLock.');\n        }\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling removeFileFromLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/removeFile`,\n            body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeHierarchy by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param codeHierarchyRsrc The CodeHierarchy resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyRsrc === null || codeHierarchyRsrc === undefined) {\n            throw new Error('Required parameter codeHierarchyRsrc was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            codeHierarchyRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeTable by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param codeTableRsrc The CodeTable resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableRsrc === null || codeTableRsrc === undefined) {\n            throw new Error('Required parameter codeTableRsrc was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            codeTableRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocument1.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocument1.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling updateDocument1.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The checkoutId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param fileCheckoutRsrc The new values in checkoutRsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling updateDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param lockRsrc The new values in lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling updateLock.');\n        }\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling updateLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add Document Resource to the List of Document resources\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling uploadDocument.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export * from './default.service';\nimport { DefaultService } from './default.service';\nexport const APIS = [DefaultService];\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface BodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface BodyPartMediaType { \n    type?: string;\n    subtype?: string;\n    parameters?: { [key: string]: string; };\n    wildcardType?: boolean;\n    wildcardSubtype?: boolean;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { CodeHierarchyRsrc } from './codeHierarchyRsrc';\n\n\nexport interface CodeHierarchyListRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyList?: Array<CodeHierarchyRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { Hierarchy } from './hierarchy';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeHierarchyRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyName?: string;\n    lowerCodeTableName?: string;\n    upperCodeTableName?: string;\n    hierarchy?: Array<Hierarchy>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface CodeRsrc { \n    code?: string;\n    description?: string;\n    displayOrder?: number;\n    effectiveDate?: string;\n    expiryDate?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeTableRsrc } from './codeTableRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableListRsrc { \n    links?: Array<RelLink>;\n    codeTableList?: Array<CodeTableRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeRsrc } from './codeRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableRsrc { \n    links?: Array<RelLink>;\n    codeTableName?: string;\n    codes?: Array<CodeRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface EndpointsRsrc { \n    links?: Array<RelLink>;\n    releaseVersion?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileCheckoutRsrc { \n    links?: Array<RelLink>;\n    fileCheckoutId?: string;\n    file?: FileRsrc;\n    securityKey?: SecurityKeyRsrc;\n    checkOutComment?: string;\n    checkInComment?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FileVersionRsrc } from './fileVersionRsrc';\nimport { FileSecurityRsrc } from './fileSecurityRsrc';\nimport { FileCheckoutRsrc } from './fileCheckoutRsrc';\nimport { FileMetadataRsrc } from './fileMetadataRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileDetailsRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    versionNumber?: number;\n    fileExtension?: string;\n    fileType?: string;\n    mimeType?: string;\n    fileSize?: number;\n    retention?: string;\n    security?: Array<FileSecurityRsrc>;\n    metadata?: Array<FileMetadataRsrc>;\n    versions?: Array<FileVersionRsrc>;\n    uploadedBy?: string;\n    uploadedOnTimestamp?: string;\n    lastUpdatedBy?: string;\n    lastUpdatedByGuid?: string;\n    parent?: FileRsrc;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    fileCheckout?: FileCheckoutRsrc;\n    lockedInd?: boolean;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface FileListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<FileDetailsRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileMetadataRsrc { \n    metadataName?: string;\n    metadataValue?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface FileRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\n\n\nexport interface FileSecurityRsrc { \n    securityKey?: SecurityKeyRsrc;\n    grantorAccessInd?: boolean;\n    readAccessInd?: boolean;\n    writeAccessInd?: boolean;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileVersionRsrc { \n    versionNumber?: number;\n    fileSize?: number;\n    uploadedById?: string;\n    uploadedOnTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\nimport { FormDataContentDisposition } from './formDataContentDisposition';\n\n\nexport interface FormDataBodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    simple?: boolean;\n    formDataContentDisposition?: FormDataContentDisposition;\n    name?: string;\n    value?: string;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FormDataContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n    name?: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface HealthCheckResponseRsrc { \n    componentIdentifier?: string;\n    componentName?: string;\n    validationStatus?: HealthCheckResponseRsrc.ValidationStatusEnum;\n    statusDetails?: string;\n    dependencyComponentResponses?: Array<HealthCheckResponseRsrc>;\n    type: string;\n}\nexport namespace HealthCheckResponseRsrc {\n    export type ValidationStatusEnum = 'RED' | 'YELLOW' | 'GREEN';\n    export const ValidationStatusEnum = {\n        RED: 'RED' as ValidationStatusEnum,\n        YELLOW: 'YELLOW' as ValidationStatusEnum,\n        GREEN: 'GREEN' as ValidationStatusEnum\n    };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface Hierarchy { \n    lowerCode?: string;\n    upperCode?: string;\n    effectiveDate?: string;\n    expiryDate?: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject1 { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { LockRsrc } from './lockRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<LockRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockRsrc { \n    links?: Array<RelLink>;\n    lockId?: string;\n    securityKey?: SecurityKeyRsrc;\n    lockReason?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    lockedFiles?: Array<FileRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { MessageRsrc } from './messageRsrc';\n\n\nexport interface MessageListRsrc { \n    messages?: Array<MessageRsrc>;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface MessageRsrc { \n    path?: string;\n    message?: string;\n    messageTemplate?: string;\n    messageArguments?: Array<string>;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPart } from './bodyPart';\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface MultiPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    bodyParts?: Array<BodyPart>;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ParameterizedHeader { \n    value?: string;\n    parameters?: { [key: string]: string; };\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface RelLink { \n    rel?: string;\n    href?: string;\n    method?: string;\n    etag?: string;\n    type: string;\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface SecurityKeyRsrc { \n    securityKey?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { DefaultService } from './api/default.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n"]}