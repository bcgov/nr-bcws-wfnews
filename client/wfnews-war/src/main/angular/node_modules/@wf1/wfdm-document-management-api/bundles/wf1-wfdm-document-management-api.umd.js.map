{"version":3,"file":"wf1-wfdm-document-management-api.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@wf1/wfdm-document-management-api/encoder.ts","ng://@wf1/wfdm-document-management-api/variables.ts","ng://@wf1/wfdm-document-management-api/configuration.ts","ng://@wf1/wfdm-document-management-api/api/default.service.ts","ng://@wf1/wfdm-document-management-api/api/api.ts","ng://@wf1/wfdm-document-management-api/model/bodyPart.ts","ng://@wf1/wfdm-document-management-api/model/bodyPartMediaType.ts","ng://@wf1/wfdm-document-management-api/model/codeHierarchyListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeHierarchyRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeTableListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeTableRsrc.ts","ng://@wf1/wfdm-document-management-api/model/contentDisposition.ts","ng://@wf1/wfdm-document-management-api/model/endpointsRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileCheckoutRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileDetailsRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileMetadataRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileSecurityRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileVersionRsrc.ts","ng://@wf1/wfdm-document-management-api/model/formDataBodyPart.ts","ng://@wf1/wfdm-document-management-api/model/formDataContentDisposition.ts","ng://@wf1/wfdm-document-management-api/model/healthCheckResponseRsrc.ts","ng://@wf1/wfdm-document-management-api/model/hierarchy.ts","ng://@wf1/wfdm-document-management-api/model/inlineObject.ts","ng://@wf1/wfdm-document-management-api/model/inlineObject1.ts","ng://@wf1/wfdm-document-management-api/model/lockListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/lockRsrc.ts","ng://@wf1/wfdm-document-management-api/model/messageListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/messageRsrc.ts","ng://@wf1/wfdm-document-management-api/model/multiPart.ts","ng://@wf1/wfdm-document-management-api/model/parameterizedHeader.ts","ng://@wf1/wfdm-document-management-api/model/relLink.ts","ng://@wf1/wfdm-document-management-api/model/securityKeyRsrc.ts","ng://@wf1/wfdm-document-management-api/api.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CodeHierarchyListRsrc } from '../model/models';\nimport { CodeHierarchyRsrc } from '../model/models';\nimport { CodeTableListRsrc } from '../model/models';\nimport { CodeTableRsrc } from '../model/models';\nimport { EndpointsRsrc } from '../model/models';\nimport { FileCheckoutRsrc } from '../model/models';\nimport { FileDetailsRsrc } from '../model/models';\nimport { FileListRsrc } from '../model/models';\nimport { FormDataBodyPart } from '../model/models';\nimport { HealthCheckResponseRsrc } from '../model/models';\nimport { LockListRsrc } from '../model/models';\nimport { LockRsrc } from '../model/models';\nimport { MessageListRsrc } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultService {\n\n    protected basePath = 'http://localhost';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param fileCheckoutRsrc The Checkout rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling addDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling addDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param requestBody fileid of file to add\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling addFilesToLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling addFilesToLock.');\n        }\n        if (requestBody === null || requestBody === undefined) {\n            throw new Error('Required parameter requestBody was null or undefined when calling addFilesToLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/addFile`,\n            requestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockRsrc The lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling addLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LockRsrc>(`${this.configuration.basePath}/lock`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param targetFilePath The target file path for the copy.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling copyDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling copyDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (targetFilePath !== undefined && targetFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>targetFilePath, 'targetFilePath');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/copy`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Document by Document ID\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a document checkout\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling deleteDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a lock\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling deleteLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Hierarchy List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeHierarchyName Filter the results by the codeHierarchyName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyListRsrc>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeHierarchyName !== undefined && codeHierarchyName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeHierarchyName, 'codeHierarchyName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyListRsrc>(`${this.configuration.basePath}/codeHierarchies`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeHierarchy resource by code table name.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling getCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Table List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeTableName Filter the results by the codeTableName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableListRsrc>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeTableName !== undefined && codeTableName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeTableName, 'codeTableName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableListRsrc>(`${this.configuration.basePath}/codeTables`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeTable resource by code table name.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling getCodeTableResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentById.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling getDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document Checkout List\n     * @param documentId The document resource id.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckoutList.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param versionNumber The versionId of the Document resource.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<string>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentFileBytesById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (versionNumber !== undefined && versionNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>versionNumber, 'versionNumber');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/bytes`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document List\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param parentId Parent Id\n     * @param recursive ChildrenRecursive\n     * @param lockId Lock Id\n     * @param metadata metadata\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (parentId !== undefined && parentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>parentId, 'parentId');\n        }\n        if (recursive !== undefined && recursive !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursive, 'recursive');\n        }\n        if (lockId !== undefined && lockId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>lockId, 'lockId');\n        }\n        if (metadata) {\n            metadata.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'metadata');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentLock.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/fileLock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param searchText searchText\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (searchText) {\n            searchText.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'searchText');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/lock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling getLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Swagger Document\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EndpointsRsrc>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/openapi.json`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Top Level Resources\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<EndpointsRsrc>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param newFilePath The new file path of the File.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling moveDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling moveDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (newFilePath !== undefined && newFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>newFilePath, 'newFilePath');\n        }\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/move`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Query the health of the service.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param callstack A comm separated list of the identifier of the calling components.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HealthCheckResponseRsrc>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (callstack !== undefined && callstack !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>callstack, 'callstack');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<HealthCheckResponseRsrc>(`${this.configuration.basePath}/checkHealth`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param body fileId of file to remove\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling removeFileFromLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling removeFileFromLock.');\n        }\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling removeFileFromLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/removeFile`,\n            body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeHierarchy by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param codeHierarchyRsrc The CodeHierarchy resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyRsrc === null || codeHierarchyRsrc === undefined) {\n            throw new Error('Required parameter codeHierarchyRsrc was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            codeHierarchyRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeTable by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param codeTableRsrc The CodeTable resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableRsrc === null || codeTableRsrc === undefined) {\n            throw new Error('Required parameter codeTableRsrc was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            codeTableRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocument1.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocument1.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling updateDocument1.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The checkoutId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param fileCheckoutRsrc The new values in checkoutRsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling updateDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param lockRsrc The new values in lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling updateLock.');\n        }\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling updateLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add Document Resource to the List of Document resources\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling uploadDocument.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export * from './default.service';\nimport { DefaultService } from './default.service';\nexport const APIS = [DefaultService];\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface BodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface BodyPartMediaType { \n    type?: string;\n    subtype?: string;\n    parameters?: { [key: string]: string; };\n    wildcardType?: boolean;\n    wildcardSubtype?: boolean;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { CodeHierarchyRsrc } from './codeHierarchyRsrc';\n\n\nexport interface CodeHierarchyListRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyList?: Array<CodeHierarchyRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { Hierarchy } from './hierarchy';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeHierarchyRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyName?: string;\n    lowerCodeTableName?: string;\n    upperCodeTableName?: string;\n    hierarchy?: Array<Hierarchy>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface CodeRsrc { \n    code?: string;\n    description?: string;\n    displayOrder?: number;\n    effectiveDate?: string;\n    expiryDate?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeTableRsrc } from './codeTableRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableListRsrc { \n    links?: Array<RelLink>;\n    codeTableList?: Array<CodeTableRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeRsrc } from './codeRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableRsrc { \n    links?: Array<RelLink>;\n    codeTableName?: string;\n    codes?: Array<CodeRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface EndpointsRsrc { \n    links?: Array<RelLink>;\n    releaseVersion?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileCheckoutRsrc { \n    links?: Array<RelLink>;\n    fileCheckoutId?: string;\n    file?: FileRsrc;\n    securityKey?: SecurityKeyRsrc;\n    checkOutComment?: string;\n    checkInComment?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FileVersionRsrc } from './fileVersionRsrc';\nimport { FileSecurityRsrc } from './fileSecurityRsrc';\nimport { FileCheckoutRsrc } from './fileCheckoutRsrc';\nimport { FileMetadataRsrc } from './fileMetadataRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileDetailsRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    versionNumber?: number;\n    fileExtension?: string;\n    fileType?: string;\n    mimeType?: string;\n    fileSize?: number;\n    retention?: string;\n    security?: Array<FileSecurityRsrc>;\n    metadata?: Array<FileMetadataRsrc>;\n    versions?: Array<FileVersionRsrc>;\n    uploadedBy?: string;\n    uploadedOnTimestamp?: string;\n    lastUpdatedBy?: string;\n    lastUpdatedByGuid?: string;\n    parent?: FileRsrc;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    fileCheckout?: FileCheckoutRsrc;\n    lockedInd?: boolean;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface FileListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<FileDetailsRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileMetadataRsrc { \n    metadataName?: string;\n    metadataValue?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface FileRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\n\n\nexport interface FileSecurityRsrc { \n    securityKey?: SecurityKeyRsrc;\n    grantorAccessInd?: boolean;\n    readAccessInd?: boolean;\n    writeAccessInd?: boolean;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileVersionRsrc { \n    versionNumber?: number;\n    fileSize?: number;\n    uploadedById?: string;\n    uploadedOnTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\nimport { FormDataContentDisposition } from './formDataContentDisposition';\n\n\nexport interface FormDataBodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    simple?: boolean;\n    formDataContentDisposition?: FormDataContentDisposition;\n    name?: string;\n    value?: string;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FormDataContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n    name?: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface HealthCheckResponseRsrc { \n    componentIdentifier?: string;\n    componentName?: string;\n    validationStatus?: HealthCheckResponseRsrc.ValidationStatusEnum;\n    statusDetails?: string;\n    dependencyComponentResponses?: Array<HealthCheckResponseRsrc>;\n    type: string;\n}\nexport namespace HealthCheckResponseRsrc {\n    export type ValidationStatusEnum = 'RED' | 'YELLOW' | 'GREEN';\n    export const ValidationStatusEnum = {\n        RED: 'RED' as ValidationStatusEnum,\n        YELLOW: 'YELLOW' as ValidationStatusEnum,\n        GREEN: 'GREEN' as ValidationStatusEnum\n    };\n}\n\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface Hierarchy { \n    lowerCode?: string;\n    upperCode?: string;\n    effectiveDate?: string;\n    expiryDate?: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject1 { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { LockRsrc } from './lockRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<LockRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockRsrc { \n    links?: Array<RelLink>;\n    lockId?: string;\n    securityKey?: SecurityKeyRsrc;\n    lockReason?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    lockedFiles?: Array<FileRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { MessageRsrc } from './messageRsrc';\n\n\nexport interface MessageListRsrc { \n    messages?: Array<MessageRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface MessageRsrc { \n    path?: string;\n    message?: string;\n    messageTemplate?: string;\n    messageArguments?: Array<string>;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPart } from './bodyPart';\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface MultiPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    bodyParts?: Array<BodyPart>;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ParameterizedHeader { \n    value?: string;\n    parameters?: { [key: string]: string; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface RelLink { \n    rel?: string;\n    href?: string;\n    method?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface SecurityKeyRsrc { \n    securityKey?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { DefaultService } from './api/default.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n"],"names":["InjectionToken","HttpHeaders","HttpParams","Injectable","HttpClient","Optional","Inject","HealthCheckResponseRsrc","NgModule","SkipSelf"],"mappings":";;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,EAAC;AACD;IACO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;IACvF,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;IACvE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChF,YAAY,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD;IACO,SAAS,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IAC1D,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;IACjI,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnI,SAAS,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;IACtJ,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;AACD;IACO,SAAS,OAAO,CAAC,UAAU,EAAE,SAAS,EAAE;IAC/C,IAAI,OAAO,UAAU,MAAM,EAAE,GAAG,EAAE,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE;IACzE,CAAC;AACD;IACO,SAAS,UAAU,CAAC,WAAW,EAAE,aAAa,EAAE;IACvD,IAAI,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;AACD;IACO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;IAC7D,IAAI,SAAS,KAAK,CAAC,KAAK,EAAE,EAAE,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IAChH,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;IAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;IACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;IACtH,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9E,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACO,SAAS,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;IAC3C,IAAI,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrH,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7J,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;IACtE,IAAI,SAAS,IAAI,CAAC,EAAE,EAAE;IACtB,QAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;IACtE,QAAQ,OAAO,CAAC,EAAE,IAAI;IACtB,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACzK,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD,YAAY,QAAQ,EAAE,CAAC,CAAC,CAAC;IACzB,gBAAgB,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM;IAC9C,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACxE,gBAAgB,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS;IACjE,gBAAgB,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IACjE,gBAAgB;IAChB,oBAAoB,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE;IAChI,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;IAC1G,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE;IACzF,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE;IACvF,oBAAoB,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1C,oBAAoB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,SAAS;IAC3C,aAAa;IACb,YAAY,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvC,SAAS,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAClE,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACzF,KAAK;IACL,CAAC;AACD;IACO,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE;IAC7C,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC;IACjC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;AACD;IACO,SAAS,YAAY,CAAC,CAAC,EAAE,OAAO,EAAE;IACzC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;AACD;IACO,SAAS,QAAQ,CAAC,CAAC,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClF,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,IAAI,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ,EAAE,OAAO;IAClD,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC;IAC/C,YAAY,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;IACpD,SAAS;IACT,KAAK,CAAC;IACN,IAAI,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;AACD;IACO,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC/D,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACrB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;IACrC,IAAI,IAAI;IACR,QAAQ,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACnF,KAAK;IACL,IAAI,OAAO,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;IAC3C,YAAY;IACZ,QAAQ,IAAI;IACZ,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,gBAAgB,EAAE,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE;IACzC,KAAK;IACL,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;AACD;IACO,SAAS,QAAQ,GAAG;IAC3B,IAAI,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,QAAQ,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;AACD;IACO,SAAS,cAAc,GAAG;IACjC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACxF,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;IACpD,QAAQ,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;IACzE,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;AACF;IACO,SAAS,OAAO,CAAC,CAAC,EAAE;IAC3B,IAAI,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;AACD;IACO,SAAS,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;IACjE,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAClE,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1H,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9I,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;IACtF,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;IAC5H,IAAI,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IACtD,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;AACD;IACO,SAAS,gBAAgB,CAAC,CAAC,EAAE;IACpC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;IACb,IAAI,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAChJ,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;AACD;IACO,SAAS,aAAa,CAAC,CAAC,EAAE;IACjC,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;IAC3F,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACrN,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;IACpK,IAAI,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;AACD;IACO,SAAS,oBAAoB,CAAC,MAAM,EAAE,GAAG,EAAE;IAClD,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE;IACnH,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACO,SAAS,YAAY,CAAC,GAAG,EAAE;IAClC,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,CAAC;IAC1C,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACnG,IAAI,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;IACzB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACO,SAAS,eAAe,CAAC,GAAG,EAAE;IACrC,IAAI,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;AACD;IACO,SAAS,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAE;IAC7D,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IACnC,QAAQ,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,OAAO,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC;AACD;IACO,SAAS,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE;IACpE,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IACnC,QAAQ,MAAM,IAAI,SAAS,CAAC,gDAAgD,CAAC,CAAC;IAC9E,KAAK;IACL,IAAI,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACpC,IAAI,OAAO,KAAK,CAAC;IACjB;;;;;;;;;;ICnNA;;;;;QAAA;SAaC;;;;;QAZG,4CAAS;;;;QAAT,UAAU,CAAS;YACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;;;;;QACD,8CAAW;;;;QAAX,UAAY,CAAS;YACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;;;;;QACD,4CAAS;;;;QAAT,UAAU,CAAS;YACf,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;;;;;QACD,8CAAW;;;;QAAX,UAAY,CAAS;YACjB,OAAO,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAChC;QACL,+BAAC;IAAD,CAAC;;;;;;;QCjBY,SAAS,GAAG,IAAIA,mBAAc,CAAS,UAAU;;QACjD,kBAAkB,GAAG;QAC9B,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,KAAK;QACZ,KAAK,EAAE,GAAG;QACV,OAAO,EAAE,GAAG;;;;;;;;;;0CCGf;;;QAPG,0CAAoC;;QACpC,2CAAkB;;QAClB,2CAAkB;;QAClB,8CAAsC;;QACtC,2CAAkB;;QAClB,kDAA0B;;QAC1B,0CAA6B;;;QAY7B,uBAAY,uBAAqD;YAArD,wCAAA,EAAA,4BAAqD;YAC7D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;YAC/C,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,WAAW,GAAG,uBAAuB,CAAC,WAAW,CAAC;YACvD,IAAI,CAAC,QAAQ,GAAG,uBAAuB,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,eAAe,GAAG,uBAAuB,CAAC,eAAe,CAAC;YAC/D,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,OAAO,CAAC;SAClD;;;;;;;;;;;;;;;QASM,+CAAuB;;;;;;;QAA9B,UAAgC,YAAsB;YAAtD,iBAUC;YATG,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC3B,OAAO,SAAS,CAAC;aACpB;;gBAEK,IAAI,GAAG,YAAY,CAAC,IAAI,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC;YACjE,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;aAC1B;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;;;QASM,0CAAkB;;;;;;;QAAzB,UAA0B,OAAiB;YAA3C,iBAUC;YATG,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,OAAO,SAAS,CAAC;aACpB;;gBAEK,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,UAAC,CAAS,IAAK,OAAA,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAA,CAAC;YAC5D,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;aACrB;YACD,OAAO,IAAI,CAAC;SACf;;;;;;;;;;;;;;;;;;;;;QAYM,kCAAU;;;;;;;;;;QAAjB,UAAkB,IAAY;;gBACpB,QAAQ,GAAW,IAAI,MAAM,CAAC,+DAA+D,EAAE,GAAG,CAAC;YACzG,OAAO,IAAI,KAAK,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,6BAA6B,CAAC,CAAC;SACzG;QACL,oBAAC;IAAD,CAAC,IAAA;;;QAtEG,gCAAoC;;QACpC,iCAAkB;;QAClB,iCAAkB;;QAClB,oCAAsC;;QACtC,iCAAkB;;QAClB,wCAA0B;;QAC1B,gCAA6B;;;;;;;;QC6B7B,wBAAsB,UAAsB,EAAgC,QAAgB,EAAc,aAA4B;YAAhH,eAAU,GAAV,UAAU,CAAY;YALlC,aAAQ,GAAG,kBAAkB,CAAC;YACjC,mBAAc,GAAG,IAAIC,gBAAW,EAAE,CAAC;YACnC,kBAAa,GAAG,IAAI,aAAa,EAAE,CAAC;YAIvC,IAAI,aAAa,EAAE;gBACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;aACtC;YACD,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACjD,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;oBAC9B,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC5B;gBACD,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;aAC1C;YACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,IAAI,wBAAwB,EAAE,CAAC;SAC/E;;;;;;;;;QAMO,uCAAc;;;;QAAtB,UAAuB,QAAkB;;;gBAC/B,IAAI,GAAG,qBAAqB;;gBAClC,KAAsB,IAAA,aAAA,SAAA,QAAQ,CAAA,kCAAA,wDAAE;oBAA3B,IAAM,OAAO,qBAAA;oBACd,IAAI,IAAI,KAAK,OAAO,EAAE;wBAClB,OAAO,IAAI,CAAC;qBACf;iBACJ;;;;;;;;;YACD,OAAO,KAAK,CAAC;SAChB;;;;;;;QAGO,wCAAe;;;;;;QAAvB,UAAwB,UAAsB,EAAE,KAAU,EAAE,GAAY;YACpE,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,YAAY,IAAI,KAAK,KAAK,EAAE;gBAC9D,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;aACjE;iBAAM;gBACH,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;;;;;;;QAEO,iDAAwB;;;;;;QAAhC,UAAiC,UAAsB,EAAE,KAAW,EAAE,GAAY;YAAlF,iBAyBC;YAxBG,IAAI,KAAK,IAAI,IAAI,EAAE;gBACf,OAAO,UAAU,CAAC;aACrB;YAED,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;oBACtB,oBAAC,KAAK,IAAW,OAAO,CAAE,UAAA,IAAI,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,IAAI,EAAE,GAAG,CAAC,GAAA,CAAC,CAAC;iBACxG;qBAAM,IAAI,KAAK,YAAY,IAAI,EAAE;oBAC9B,IAAI,GAAG,IAAI,IAAI,EAAE;wBACb,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAC9B,oBAAC,KAAK,IAAU,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACpD;yBAAM;wBACJ,MAAM,KAAK,CAAC,sCAAsC,CAAC,CAAC;qBACtD;iBACJ;qBAAM;oBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAE,UAAA,CAAC,IAAI,OAAA,UAAU,GAAG,KAAI,CAAC,wBAAwB,CACvE,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,GAAM,GAAG,SAAI,CAAG,GAAG,CAAC,CAAC,GAAA,CAAC,CAAC;iBAC/D;aACJ;iBAAM,IAAI,GAAG,IAAI,IAAI,EAAE;gBACpB,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACH,MAAM,KAAK,CAAC,qDAAqD,CAAC,CAAC;aACtE;YACD,OAAO,UAAU,CAAC;SACrB;;;;;;;;;;;;;;QAgBM,4CAAmB;;;;;;;;;;;;;QAA1B,UAA2B,UAAkB,EAAE,gBAAkC,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC/O,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;aAC5G;YACD,IAAI,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,KAAK,SAAS,EAAE;gBAC7D,MAAM,IAAI,KAAK,CAAC,6FAA6F,CAAC,CAAC;aAClH;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAsB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,cAAW,EACvI,gBAAgB,EAChB;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAiBM,uCAAc;;;;;;;;;;;;;;QAArB,UAAsB,OAAe,EAAE,MAAc,EAAE,WAA0B,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC/O,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,+EAA+E,CAAC,CAAC;aACpG;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,8EAA8E,CAAC,CAAC;aACnG;YACD,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,SAAS,EAAE;gBACnD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,cAAS,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAU,EACpH,WAAW,EACX;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;QAeM,gCAAO;;;;;;;;;;;;QAAd,UAAe,QAAkB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC/L,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;aAC9F;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,UAAO,EACvE,QAAQ,EACR;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;QAaM,qCAAY;;;;;;;;;;QAAnB,UAAoB,OAAe,EAAE,UAAkB,EAAE,WAAoB,EAAE,cAAuB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1J,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;aAClG;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;;gBAEG,eAAe,GAAG,IAAIC,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,cAAc,KAAK,SAAS,IAAI,cAAc,KAAK,IAAI,EAAE;gBAC3D,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,cAAc,IAAE,gBAAgB,CAAC,CAAC;aAC1C;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAqB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,UAAO,EAClI,IAAI,EACJ;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;QAcM,mDAA0B;;;;;;;;;;QAAjC,UAAkC,OAAe,EAAE,UAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAoC;YAA5F,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACtK,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,8FAA8F,CAAC,CAAC;aACnH;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,KAAK;iBACR;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,EACnH;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAkBM,+CAAsB;;;;;;;;;;;;;;QAA7B,UAA8B,OAAe,EAAE,UAAkB,EAAE,kBAA0B,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAoC;YAA5F,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC3P,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;aAC5G;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YACD,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;gBACjE,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;aACvH;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,KAAK;iBACR;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAa,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAG,EAC9K;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAiBM,mCAAU;;;;;;;;;;;;;QAAjB,UAAkB,OAAe,EAAE,MAAc,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAoC;YAA5F,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC/M,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;aAChG;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;aAC/F;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,KAAK;iBACR;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAS,IAAI,CAAC,aAAa,CAAC,QAAQ,cAAS,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAG,EAC1G;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAiBM,qDAA4B;;;;;;;;;;;;;QAAnC,UAAoC,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,iBAA0B,EAAE,iBAA0B,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAEpP,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,IAAI,EAAE;gBACjE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,iBAAiB,IAAE,mBAAmB,CAAC,CAAC;aAChD;YACD,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,IAAI,EAAE;gBACjE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,iBAAiB,IAAE,mBAAmB,CAAC,CAAC;aAChD;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA2B,IAAI,CAAC,aAAa,CAAC,QAAQ,qBAAkB,EAC9F;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAiBM,gEAAuC;;;;;;;;;;;;;QAA9C,UAA+C,iBAAyB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,iBAA0B,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClQ,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;gBAC/D,MAAM,IAAI,KAAK,CAAC,kHAAkH,CAAC,CAAC;aACvI;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,IAAI,EAAE;gBACjE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,iBAAiB,IAAE,mBAAmB,CAAC,CAAC;aAChD;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuB,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAoB,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAG,EAC3I;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAiBM,iDAAwB;;;;;;;;;;;;;QAA/B,UAAgC,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,iBAA0B,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAE5O,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,IAAI,EAAE;gBACjE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,iBAAiB,IAAE,mBAAmB,CAAC,CAAC;aAChD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACzD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,aAAa,IAAE,eAAe,CAAC,CAAC;aACxC;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuB,IAAI,CAAC,aAAa,CAAC,QAAQ,gBAAa,EACrF;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAiBM,4DAAmC;;;;;;;;;;;;;QAA1C,UAA2C,aAAqB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,iBAA0B,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1P,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,0GAA0G,CAAC,CAAC;aAC/H;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,iBAAiB,KAAK,SAAS,IAAI,iBAAiB,KAAK,IAAI,EAAE;gBACjE,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,iBAAiB,IAAE,mBAAmB,CAAC,CAAC;aAChD;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,IAAI,CAAC,aAAa,CAAC,QAAQ,oBAAe,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,EAC9H;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;QAYM,wCAAe;;;;;;;;;QAAtB,UAAuB,UAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC1I,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,EAC5H;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;QAgBM,4CAAmB;;;;;;;;;;;;;QAA1B,UAA2B,UAAkB,EAAE,kBAA0B,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACvO,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;aAC5G;YACD,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;gBACjE,MAAM,IAAI,KAAK,CAAC,+FAA+F,CAAC,CAAC;aACpH;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAa,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAG,EACxL;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;;QAmBM,gDAAuB;;;;;;;;;;;;;;;QAA9B,UAA+B,UAAkB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,UAAmB,EAAE,YAAqB,EAAE,OAAgB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC7Q,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;aAChH;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,UAAU,IAAE,YAAY,CAAC,CAAC;aAClC;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,SAAS,CAAC,CAAC;aAC5B;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,cAAW,EAClI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;QAYM,iDAAwB;;;;;;;;;QAA/B,UAAgC,UAAkB,EAAE,WAAoB,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAoC;YAA5F,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACpJ,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,4FAA4F,CAAC,CAAC;aACjH;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACzD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,aAAa,IAAE,eAAe,CAAC,CAAC;aACxC;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,KAAK;iBACR;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAQ,EACzH;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;;;;;QAsBM,wCAAe;;;;;;;;;;;;;;;;;;QAAtB,UAAuB,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,QAAiB,EAAE,SAAkB,EAAE,MAAe,EAAE,QAAwB,EAAE,UAAmB,EAAE,YAAqB,EAAE,OAAgB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA9Y,iBAgFC;YAhFgR,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAE/T,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE;gBAC/C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,QAAQ,IAAE,UAAU,CAAC,CAAC;aAC9B;YACD,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,SAAS,IAAE,WAAW,CAAC,CAAC;aAChC;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBAC3C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,MAAM,IAAE,QAAQ,CAAC,CAAC;aAC1B;YACD,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,OAAO,CAAC,UAAC,OAAO;oBACrB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,UAAU,CAAC,CAAC;iBAC/B,CAAC,CAAA;aACL;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,UAAU,IAAE,YAAY,CAAC,CAAC;aAClC;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,SAAS,CAAC,CAAC;aAC5B;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,aAAa,CAAC,QAAQ,eAAY,EAC/E;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;;QAkBM,wCAAe;;;;;;;;;;;;;;;QAAtB,UAAuB,UAAkB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,UAAmB,EAAE,YAAqB,EAAE,OAAgB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACrQ,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,UAAU,IAAE,YAAY,CAAC,CAAC;aAClC;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,SAAS,CAAC,CAAC;aAC5B;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,cAAW,EAClI;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;;QAkBM,uCAAc;;;;;;;;;;;;;;;QAArB,UAAsB,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,UAA0B,EAAE,UAAmB,EAAE,YAAqB,EAAE,OAAgB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAAvV,iBAoEC;YApEyN,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAExQ,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,UAAU,EAAE;gBACZ,UAAU,CAAC,OAAO,CAAC,UAAC,OAAO;oBACvB,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,YAAY,CAAC,CAAC;iBACjC,CAAC,CAAA;aACL;YACD,IAAI,UAAU,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,EAAE;gBACnD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,UAAU,IAAE,YAAY,CAAC,CAAC;aAClC;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC7C,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,OAAO,IAAE,SAAS,CAAC,CAAC;aAC5B;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAkB,IAAI,CAAC,aAAa,CAAC,QAAQ,UAAO,EAC1E;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;QAeM,gCAAO;;;;;;;;;;;;QAAd,UAAe,MAAc,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC3L,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC,CAAC;aAC5F;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,cAAS,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAG,EAC5G;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;QAeM,2CAAkB;;;;;;;;;;;QAAzB,UAA0B,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAiD;YAAzG,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAElL,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;iBACrB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,IAAI,CAAC,aAAa,CAAC,QAAQ,kBAAe,EACnF;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;QAeM,6CAAoB;;;;;;;;;;;QAA3B,UAA4B,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAEpL,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,IAAI,CAAC,aAAa,CAAC,QAAQ,MAAG,EACvE;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;QAcM,qCAAY;;;;;;;;;;;QAAnB,UAAoB,OAAe,EAAE,UAAkB,EAAE,WAAoB,EAAE,WAAoB,EAAE,YAAqB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC9K,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,6EAA6E,CAAC,CAAC;aAClG;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;;gBAEG,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACrD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,WAAW,IAAE,aAAa,CAAC,CAAC;aACpC;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACvD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,YAAY,IAAE,cAAc,CAAC,CAAC;aACtC;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAqB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,UAAO,EAClI,IAAI,EACJ;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;QAgBM,mDAA0B;;;;;;;;;;;;QAAjC,UAAkC,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,SAAkB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;;gBAE9M,eAAe,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;YAC7D,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBACjD,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,qBAC/C,SAAS,IAAE,WAAW,CAAC,CAAC;aAChC;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;gBAGG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAA6B,IAAI,CAAC,aAAa,CAAC,QAAQ,iBAAc,EAC5F;gBACI,MAAM,EAAE,eAAe;gBACvB,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAiBM,2CAAkB;;;;;;;;;;;;;;QAAzB,UAA0B,OAAe,EAAE,MAAc,EAAE,IAAY,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACrO,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;aACvG;YACD,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,cAAS,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,gBAAa,EACvH,IAAI,EACJ;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAkBM,mEAA0C;;;;;;;;;;;;;;QAAjD,UAAkD,OAAe,EAAE,iBAAyB,EAAE,iBAAoC,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChS,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,2GAA2G,CAAC,CAAC;aAChI;YACD,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;gBAC/D,MAAM,IAAI,KAAK,CAAC,qHAAqH,CAAC,CAAC;aAC1I;YACD,IAAI,iBAAiB,KAAK,IAAI,IAAI,iBAAiB,KAAK,SAAS,EAAE;gBAC/D,MAAM,IAAI,KAAK,CAAC,qHAAqH,CAAC,CAAC;aAC1I;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAuB,IAAI,CAAC,aAAa,CAAC,QAAQ,yBAAoB,kBAAkB,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAG,EAC3I,iBAAiB,EACjB;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAkBM,+DAAsC;;;;;;;;;;;;;;QAA7C,UAA8C,OAAe,EAAE,aAAqB,EAAE,aAA4B,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAChR,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,uGAAuG,CAAC,CAAC;aAC5H;YACD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,6GAA6G,CAAC,CAAC;aAClI;YACD,IAAI,aAAa,KAAK,IAAI,IAAI,aAAa,KAAK,SAAS,EAAE;gBACvD,MAAM,IAAI,KAAK,CAAC,6GAA6G,CAAC,CAAC;aAClI;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,IAAI,CAAC,aAAa,CAAC,QAAQ,oBAAe,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAG,EAC9H,aAAa,EACb;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;QAcM,wCAAe;;;;;;;;;;;QAAtB,UAAuB,OAAe,EAAE,UAAkB,EAAE,QAAyB,EAAE,WAAoB,EAAE,IAAuB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACxL,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,mFAAmF,CAAC,CAAC;aACxG;YACD,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;aACtG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAGK,QAAQ,GAAa;gBACvB,qBAAqB;aACxB;;gBAEK,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;;gBAEhD,UAAuD;;gBACvD,OAAO,GAAG,KAAK;;gBACf,yBAAyB,GAAG,KAAK;YACrC,IAAI,OAAO,EAAE;gBACT,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC/B;iBAAM;gBACH,UAAU,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;aACxD;YAED,IAAI,QAAQ,KAAK,SAAS,EAAE;gBACxB,UAAU,GAAG,mBAAA,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,sBAAQ,QAAQ,EAAA,CAAC,MAAW,UAAU,CAAC;aAC/J;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,UAAU,GAAG,mBAAA,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,sBAAQ,IAAI,EAAA,CAAC,MAAW,UAAU,CAAC;aACnJ;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAG,EAC5H,yBAAyB,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,UAAU,EAC9D;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;;QAkBM,+CAAsB;;;;;;;;;;;;;;;QAA7B,UAA8B,OAAe,EAAE,UAAkB,EAAE,kBAA0B,EAAE,gBAAkC,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAC/R,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,uFAAuF,CAAC,CAAC;aAC5G;YACD,IAAI,UAAU,KAAK,IAAI,IAAI,UAAU,KAAK,SAAS,EAAE;gBACjD,MAAM,IAAI,KAAK,CAAC,0FAA0F,CAAC,CAAC;aAC/G;YACD,IAAI,kBAAkB,KAAK,IAAI,IAAI,kBAAkB,KAAK,SAAS,EAAE;gBACjE,MAAM,IAAI,KAAK,CAAC,kGAAkG,CAAC,CAAC;aACvH;YACD,IAAI,gBAAgB,KAAK,IAAI,IAAI,gBAAgB,KAAK,SAAS,EAAE;gBAC7D,MAAM,IAAI,KAAK,CAAC,gGAAgG,CAAC,CAAC;aACrH;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAsB,IAAI,CAAC,aAAa,CAAC,QAAQ,mBAAc,kBAAkB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,kBAAa,kBAAkB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAG,EACxL,gBAAgB,EAChB;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;;;;;;QAiBM,mCAAU;;;;;;;;;;;;;;QAAjB,UAAkB,OAAe,EAAE,MAAc,EAAE,QAAkB,EAAE,SAAkB,EAAE,WAAoB,EAAE,YAAqB,EAAE,MAAe,EAAE,aAAsB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YACnO,IAAI,OAAO,KAAK,IAAI,IAAI,OAAO,KAAK,SAAS,EAAE;gBAC3C,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;aAChG;YACD,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;aAC/F;YACD,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,4EAA4E,CAAC,CAAC;aACjG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,KAAK,IAAI,EAAE;gBAC/C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;aACzD;YACD,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;YACD,IAAI,YAAY,KAAK,SAAS,IAAI,YAAY,KAAK,IAAI,EAAE;gBACrD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aAChE;YACD,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,IAAI,EAAE;gBACzC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;gBACvD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;aACjE;YACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;gBAC3C,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;aACtD;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAIK,QAAQ,GAAa;gBACvB,kBAAkB;gBAClB,iBAAiB;aACpB;;gBACK,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC;YACxG,IAAI,uBAAuB,KAAK,SAAS,EAAE;gBACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;aAClE;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAc,IAAI,CAAC,aAAa,CAAC,QAAQ,cAAS,kBAAkB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAG,EAC5G,QAAQ,EACR;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;;;;;;;;;QAaM,uCAAc;;;;;;;;;QAArB,UAAsB,QAAyB,EAAE,WAAoB,EAAE,IAAuB,EAAE,OAAqB,EAAE,cAA+B,EAAE,OAAqE;YAA7H,wBAAA,EAAA,gBAAqB;YAAE,+BAAA,EAAA,sBAA+B;YAClJ,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC7C,MAAM,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;aACrG;;gBAEG,OAAO,GAAG,IAAI,CAAC,cAAc;YACjC,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,IAAI,EAAE;gBACnD,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;aAC9D;;gBAEG,wBAAwB,GAAuB,OAAO,IAAI,OAAO,CAAC,gBAAgB;YACtF,IAAI,wBAAwB,KAAK,SAAS,EAAE;;;oBAElC,iBAAiB,GAAa;oBAChC,kBAAkB;oBAClB,iBAAiB;iBACpB;gBACD,wBAAwB,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;aACvF;YACD,IAAI,wBAAwB,KAAK,SAAS,EAAE;gBACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;aAC7D;;;gBAGK,QAAQ,GAAa;gBACvB,qBAAqB;aACxB;;gBAEK,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;;gBAEhD,UAAuD;;gBACvD,OAAO,GAAG,KAAK;;gBACf,yBAAyB,GAAG,KAAK;YACrC,IAAI,OAAO,EAAE;gBACT,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;aAC/B;iBAAM;gBACH,UAAU,GAAG,IAAIA,eAAU,CAAC,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC,CAAC;aACxD;YAED,IAAI,QAAQ,KAAK,SAAS,EAAE;gBACxB,UAAU,GAAG,mBAAA,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,sBAAQ,QAAQ,EAAA,CAAC,MAAW,UAAU,CAAC;aAC/J;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACpB,UAAU,GAAG,mBAAA,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,EAAC,IAAI,EAAE,kBAAkB,EAAC,CAAC,sBAAQ,IAAI,EAAA,CAAC,MAAW,UAAU,CAAC;aACnJ;;gBAEG,YAAY,GAAoB,MAAM;YAC1C,IAAG,wBAAwB,IAAI,wBAAwB,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACxE,YAAY,GAAG,MAAM,CAAC;aACzB;YAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAqB,IAAI,CAAC,aAAa,CAAC,QAAQ,eAAY,EACnF,yBAAyB,GAAG,UAAU,CAAC,QAAQ,EAAE,GAAG,UAAU,EAC9D;gBACI,YAAY,qBAAO,YAAY,EAAA;gBAC/B,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;gBACnD,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,OAAO;gBAChB,cAAc,EAAE,cAAc;aACjC,CACJ,CAAC;SACL;;oBA9yEJC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;oBA1BQC,eAAU;iDAkCgCC,aAAQ,YAAGC,WAAM,SAAC,SAAS;oBAdrE,aAAa,uBAc6ED,aAAQ;;;6BAhD3G;KAsCA,IAgzEC;;;QA3yEG,kCAAwC;;QACxC,wCAA0C;;QAC1C,uCAA2C;;QAC3C,iCAAmC;;QAEvB,oCAAgC;;;;;;;;QC9CnC,IAAI,GAAG,CAAC,cAAc;;;;;;;;;2BCwBlC;;;QARG,sCAAwC;;QACxC,0BAAgB;;QAChB,2BAA4C;;QAC5C,6BAA8B;;QAC9B,sCAA4B;;QAC5B,0BAAmB;;QACnB,6BAAmB;;QACnB,wCAAsE;;;;;;;;;;;;;;;;;;;;;oCCNzE;;;QALG,iCAAc;;QACd,oCAAiB;;QACjB,uCAAwC;;QACxC,yCAAuB;;QACvB,4CAA0B;;;;;;;;;;wCCE7B;;;QAJG,sCAAuB;;QACvB,kDAA6C;;QAC7C,qCAAc;;QACd,qCAAa;;;;;;;;;;oCCIhB;;;QAPG,kCAAuB;;QACvB,8CAA2B;;QAC3B,+CAA4B;;QAC5B,+CAA4B;;QAC5B,sCAA6B;;QAC7B,iCAAc;;QACd,iCAAa;;;;;;;;;;;;;;;;;;;;;2BCFhB;;;QANG,wBAAc;;QACd,+BAAqB;;QACrB,gCAAsB;;QACtB,iCAAuB;;QACvB,8BAAoB;;QACpB,wBAAa;;;;;;;;;;oCCChB;;;QAJG,kCAAuB;;QACvB,0CAAqC;;QACrC,iCAAc;;QACd,iCAAa;;;;;;;;;;gCCEhB;;;QALG,8BAAuB;;QACvB,sCAAuB;;QACvB,8BAAwB;;QACxB,6BAAc;;QACd,6BAAa;;;;;;;;;;;;;;;;;;;;;qCCChB;;;QAPG,kCAAc;;QACd,wCAAwC;;QACxC,sCAAkB;;QAClB,0CAAsB;;QACtB,8CAA0B;;QAC1B,sCAAkB;;QAClB,kCAAc;;;;;;;;;;gCCDjB;;;QAJG,8BAAuB;;QACvB,uCAAwB;;QACxB,6BAAc;;QACd,6BAAa;;;;;;;;;;mCCUhB;;;QAXG,iCAAuB;;QACvB,0CAAwB;;QACxB,gCAAgB;;QAChB,uCAA8B;;QAC9B,2CAAyB;;QACzB,0CAAwB;;QACxB,+CAA6B;;QAC7B,6CAA2B;;QAC3B,wCAAsB;;QACtB,gCAAc;;QACd,gCAAa;;;;;;;;;;kCCiBhB;;;QAxBG,gCAAuB;;QACvB,iCAAgB;;QAChB,mCAAkB;;QAClB,+CAA8B;;QAC9B,wCAAuB;;QACvB,wCAAuB;;QACvB,mCAAkB;;QAClB,mCAAkB;;QAClB,mCAAkB;;QAClB,oCAAmB;;QACnB,mCAAmC;;QACnC,mCAAmC;;QACnC,mCAAkC;;QAClC,qCAAoB;;QACpB,8CAA6B;;QAC7B,wCAAuB;;QACvB,4CAA2B;;QAC3B,iCAAkB;;QAClB,8CAA6B;;QAC7B,4CAA2B;;QAC3B,uCAAgC;;QAChC,oCAAoB;;QACpB,+BAAc;;QACd,+BAAa;;;;;;;;;;+BCnBhB;;;QARG,6BAAuB;;QACvB,kCAAoB;;QACpB,oCAAsB;;QACtB,qCAAuB;;QACvB,sCAAwB;;QACxB,kCAAoC;;QACpC,4BAAc;;QACd,4BAAa;;;;;;;;;;;;;;;;;;;;;mCCLhB;;;QAJG,wCAAsB;;QACtB,yCAAuB;;QACvB,gCAAc;;QACd,gCAAa;;;;;;;;;;2BCIhB;;;QANG,yBAAuB;;QACvB,0BAAgB;;QAChB,4BAAkB;;QAClB,wCAA8B;;QAC9B,wBAAc;;QACd,wBAAa;;;;;;;;;;mCCChB;;;QANG,uCAA8B;;QAC9B,4CAA2B;;QAC3B,yCAAwB;;QACxB,0CAAyB;;QACzB,gCAAc;;QACd,gCAAa;;;;;;;;;;;;;;;;;;;;;kCCAhB;;;QANG,wCAAuB;;QACvB,mCAAkB;;QAClB,uCAAsB;;QACtB,8CAA6B;;QAC7B,+BAAc;;QACd,+BAAa;;;;;;;;;;mCCYhB;;;QAZG,8CAAwC;;QACxC,kCAAgB;;QAChB,mCAA4C;;QAC5C,qCAA8B;;QAC9B,8CAA4B;;QAC5B,kCAAmB;;QACnB,qCAAmB;;QACnB,kCAAiB;;QACjB,sDAAwD;;QACxD,gCAAc;;QACd,iCAAe;;QACf,gDAAsE;;;;;;;;;;;;;;;;;;;;;6CCRzE;;;QARG,0CAAc;;QACd,gDAAwC;;QACxC,8CAAkB;;QAClB,kDAAsB;;QACtB,sDAA0B;;QAC1B,8CAAkB;;QAClB,0CAAc;;QACd,0CAAc;;;;;;;;;;;;;;;;;;;ACOjB;IAPD,WAAiB,uBAAuB;QAEvB,4CAAoB,GAAG;YAChC,GAAG,qBAAE,KAAK,EAAwB;YAClC,MAAM,qBAAE,QAAQ,EAAwB;YACxC,KAAK,qBAAE,OAAO,EAAwB;SACzC;IACL,CAAC,EAPgBE,+BAAuB,KAAvBA,+BAAuB;;;;;;;;;;;;;;;;;;;;4BCHvC;;;QAJG,8BAAmB;;QACnB,8BAAmB;;QACnB,kCAAuB;;QACvB,+BAAoB;;;;;;;;;;+BCCvB;;;QAFG,gCAA0B;;QAC1B,4BAAwB;;;;;;;;;;gCCC3B;;;QAFG,iCAA0B;;QAC1B,6BAAwB;;;;;;;;;;+BCO3B;;;QARG,6BAAuB;;QACvB,kCAAoB;;QACpB,oCAAsB;;QACtB,qCAAuB;;QACvB,sCAAwB;;QACxB,kCAA6B;;QAC7B,4BAAc;;QACd,4BAAa;;;;;;;;;;2BCGhB;;;QATG,yBAAuB;;QACvB,0BAAgB;;QAChB,+BAA8B;;QAC9B,8BAAoB;;QACpB,uCAA6B;;QAC7B,qCAA2B;;QAC3B,+BAA8B;;QAC9B,wBAAc;;QACd,wBAAa;;;;;;;;;;kCCPhB;;;QAHG,mCAA8B;;QAC9B,+BAAc;;QACd,+BAAa;;;;;;;;;;;;;;;;;;;;;8BCEhB;;;QALG,2BAAc;;QACd,8BAAiB;;QACjB,sCAAyB;;QACzB,uCAAiC;;QACjC,2BAAa;;;;;;;;;;4BCShB;;;QATG,uCAAwC;;QACxC,2BAAgB;;QAChB,4BAA4C;;QAC5C,8BAA8B;;QAC9B,uCAA4B;;QAC5B,2BAAmB;;QACnB,8BAAmB;;QACnB,8BAA4B;;QAC5B,yCAAsE;;;;;;;;;;;;;;;;;;;;;sCCVzE;;;QAFG,oCAAe;;QACf,yCAAwC;;;;;;;;;;;;;;;;;;;;;0BCI3C;;;QALG,sBAAa;;QACb,uBAAc;;QACd,yBAAgB;;QAChB,uBAAc;;QACd,uBAAa;;;;;;;;;;;;;;;;;;;;;kCCAhB;;;QAJG,sCAAqB;;QACrB,uCAAsB;;QACtB,+BAAc;;QACd,+BAAa;;;;;;;;;;;;;QCIb,mBAAqC,YAAuB,EACnC,IAAgB;YACrC,IAAI,YAAY,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;aACvF;YACD,IAAI,CAAC,IAAI,EAAE;gBACP,MAAM,IAAI,KAAK,CAAC,+DAA+D;oBAC/E,0DAA0D,CAAC,CAAC;aAC/D;SACJ;;;;;QAhBa,iBAAO;;;;QAArB,UAAsB,oBAAyC;YAC3D,OAAO;gBACH,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE,CAAE,EAAE,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,oBAAoB,EAAE,CAAE;aAC9E,CAAC;SACL;;oBAZJC,aAAQ,SAAC;wBACR,OAAO,EAAO,EAAE;wBAChB,YAAY,EAAE,EAAE;wBAChB,OAAO,EAAO,EAAE;wBAChB,SAAS,EAAE,EAAE;qBACd;;;;oBASsD,SAAS,uBAA9CH,aAAQ,YAAII,aAAQ;oBAnB7BL,eAAU,uBAoBDC,aAAQ;;QAS1B,gBAAC;KAxBD;;;;;;;;;;;;;;;;;"}