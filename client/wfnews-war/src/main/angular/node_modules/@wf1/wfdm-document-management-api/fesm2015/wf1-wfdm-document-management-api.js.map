{"version":3,"file":"wf1-wfdm-document-management-api.js","sources":["ng://@wf1/wfdm-document-management-api/encoder.ts","ng://@wf1/wfdm-document-management-api/variables.ts","ng://@wf1/wfdm-document-management-api/configuration.ts","ng://@wf1/wfdm-document-management-api/api/default.service.ts","ng://@wf1/wfdm-document-management-api/api/api.ts","ng://@wf1/wfdm-document-management-api/model/bodyPart.ts","ng://@wf1/wfdm-document-management-api/model/bodyPartMediaType.ts","ng://@wf1/wfdm-document-management-api/model/codeHierarchyListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeHierarchyRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeTableListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/codeTableRsrc.ts","ng://@wf1/wfdm-document-management-api/model/contentDisposition.ts","ng://@wf1/wfdm-document-management-api/model/endpointsRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileCheckoutRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileDetailsRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileMetadataRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileSecurityRsrc.ts","ng://@wf1/wfdm-document-management-api/model/fileVersionRsrc.ts","ng://@wf1/wfdm-document-management-api/model/formDataBodyPart.ts","ng://@wf1/wfdm-document-management-api/model/formDataContentDisposition.ts","ng://@wf1/wfdm-document-management-api/model/healthCheckResponseRsrc.ts","ng://@wf1/wfdm-document-management-api/model/hierarchy.ts","ng://@wf1/wfdm-document-management-api/model/inlineObject.ts","ng://@wf1/wfdm-document-management-api/model/inlineObject1.ts","ng://@wf1/wfdm-document-management-api/model/lockListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/lockRsrc.ts","ng://@wf1/wfdm-document-management-api/model/messageListRsrc.ts","ng://@wf1/wfdm-document-management-api/model/messageRsrc.ts","ng://@wf1/wfdm-document-management-api/model/multiPart.ts","ng://@wf1/wfdm-document-management-api/model/parameterizedHeader.ts","ng://@wf1/wfdm-document-management-api/model/relLink.ts","ng://@wf1/wfdm-document-management-api/model/securityKeyRsrc.ts","ng://@wf1/wfdm-document-management-api/api.module.ts"],"sourcesContent":["import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CodeHierarchyListRsrc } from '../model/models';\nimport { CodeHierarchyRsrc } from '../model/models';\nimport { CodeTableListRsrc } from '../model/models';\nimport { CodeTableRsrc } from '../model/models';\nimport { EndpointsRsrc } from '../model/models';\nimport { FileCheckoutRsrc } from '../model/models';\nimport { FileDetailsRsrc } from '../model/models';\nimport { FileListRsrc } from '../model/models';\nimport { FormDataBodyPart } from '../model/models';\nimport { HealthCheckResponseRsrc } from '../model/models';\nimport { LockListRsrc } from '../model/models';\nimport { LockRsrc } from '../model/models';\nimport { MessageListRsrc } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultService {\n\n    protected basePath = 'http://localhost';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param fileCheckoutRsrc The Checkout rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public addDocumentCheckout(documentId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling addDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling addDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param requestBody fileid of file to add\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addFilesToLock(ifMatch: string, lockId: string, requestBody: Array<string>, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling addFilesToLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling addFilesToLock.');\n        }\n        if (requestBody === null || requestBody === undefined) {\n            throw new Error('Required parameter requestBody was null or undefined when calling addFilesToLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/addFile`,\n            requestBody,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockRsrc The lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public addLock(lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling addLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<LockRsrc>(`${this.configuration.basePath}/lock`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param targetFilePath The target file path for the copy.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public copyDocument(ifMatch: string, documentId: string, restVersion?: number, targetFilePath?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling copyDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling copyDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (targetFilePath !== undefined && targetFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>targetFilePath, 'targetFilePath');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/copy`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Document by Document ID\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentByDocumentID(ifMatch: string, documentId: string, restVersion?: number, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentByDocumentID.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a document checkout\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling deleteDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling deleteDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete a lock\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<any>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<any>>;\n    public deleteLock(ifMatch: string, lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling deleteLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling deleteLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Hierarchy List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeHierarchyName Filter the results by the codeHierarchyName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyListRsrc>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyListRsrc>>;\n    public getCodeHierarchyListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeHierarchyName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeHierarchyName !== undefined && codeHierarchyName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeHierarchyName, 'codeHierarchyName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyListRsrc>(`${this.configuration.basePath}/codeHierarchies`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeHierarchy resource by code table name.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public getCodeHierarchyResourceByCodeTableName(codeHierarchyName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling getCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Code Table List Resource\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param codeTableName Filter the results by the codeTableName.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableListRsrc>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableListRsrc>>;\n    public getCodeTableListResource(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, codeTableName?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n        if (codeTableName !== undefined && codeTableName !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>codeTableName, 'codeTableName');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableListRsrc>(`${this.configuration.basePath}/codeTables`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get CodeTable resource by code table name.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param effectiveAsOfDate Return the results as of the effectiveAsOfDate.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public getCodeTableResourceByCodeTableName(codeTableName: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, effectiveAsOfDate?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling getCodeTableResourceByCodeTableName.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (effectiveAsOfDate !== undefined && effectiveAsOfDate !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>effectiveAsOfDate, 'effectiveAsOfDate');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public getDocumentById(documentId: string, restVersion?: number, cacheControl?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentById.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public getDocumentCheckout(documentId: string, documentCheckoutId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling getDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document Checkout List\n     * @param documentId The document resource id.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentCheckoutList(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentCheckoutList.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param versionNumber The versionId of the Document resource.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<string>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpResponse<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: '*/*'}): Observable<HttpEvent<string>>;\n    public getDocumentFileBytesById(documentId: string, restVersion?: number, versionNumber?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: '*/*'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentFileBytesById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (versionNumber !== undefined && versionNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>versionNumber, 'versionNumber');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                '*/*'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<string>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/bytes`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Document List\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param parentId Parent Id\n     * @param recursive ChildrenRecursive\n     * @param lockId Lock Id\n     * @param metadata metadata\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileListRsrc>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileListRsrc>>;\n    public getDocumentList(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, parentId?: string, recursive?: string, lockId?: string, metadata?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (parentId !== undefined && parentId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>parentId, 'parentId');\n        }\n        if (recursive !== undefined && recursive !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursive, 'recursive');\n        }\n        if (lockId !== undefined && lockId !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>lockId, 'lockId');\n        }\n        if (metadata) {\n            metadata.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'metadata');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<FileListRsrc>(`${this.configuration.basePath}/documents`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param documentId The documentId of the Document resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getDocumentLock(documentId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling getDocumentLock.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/fileLock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param searchText searchText\n     * @param pageNumber The page number of the results to be returned.\n     * @param pageRowCount The number of results per page.\n     * @param orderBy Comma separated list of property names to order the result set by.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockListRsrc>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockListRsrc>>;\n    public getListOfLocks(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, searchText?: Array<string>, pageNumber?: string, pageRowCount?: string, orderBy?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (searchText) {\n            searchText.forEach((element) => {\n                queryParameters = this.addToHttpParams(queryParameters,\n                  <any>element, 'searchText');\n            })\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageNumber, 'pageNumber');\n        }\n        if (pageRowCount !== undefined && pageRowCount !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>pageRowCount, 'pageRowCount');\n        }\n        if (orderBy !== undefined && orderBy !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>orderBy, 'orderBy');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockListRsrc>(`${this.configuration.basePath}/lock`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param lockId The lockId of the lock resource.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public getLock(lockId: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling getLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Swagger Document\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EndpointsRsrc>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getSwaggerDocument(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/openapi.json`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Top Level Resources\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<EndpointsRsrc>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<EndpointsRsrc>>;\n    public getTopLevelResources(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<EndpointsRsrc>(`${this.configuration.basePath}/`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param newFilePath The new file path of the File.\n     * @param recursiveInd Is the delete recursive?\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public moveDocument(ifMatch: string, documentId: string, restVersion?: number, newFilePath?: string, recursiveInd?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling moveDocument.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling moveDocument.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (newFilePath !== undefined && newFilePath !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>newFilePath, 'newFilePath');\n        }\n        if (recursiveInd !== undefined && recursiveInd !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>recursiveInd, 'recursiveInd');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/move`,\n            null,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Query the health of the service.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param callstack A comm separated list of the identifier of the calling components.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HealthCheckResponseRsrc>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<HealthCheckResponseRsrc>>;\n    public queryTheHealthOfTheService(requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, callstack?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (callstack !== undefined && callstack !== null) {\n          queryParameters = this.addToHttpParams(queryParameters,\n            <any>callstack, 'callstack');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<HealthCheckResponseRsrc>(`${this.configuration.basePath}/checkHealth`,\n            {\n                params: queryParameters,\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param body fileId of file to remove\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public removeFileFromLock(ifMatch: string, lockId: string, body: string, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling removeFileFromLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling removeFileFromLock.');\n        }\n        if (body === null || body === undefined) {\n            throw new Error('Required parameter body was null or undefined when calling removeFileFromLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}/removeFile`,\n            body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeHierarchy by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeHierarchyName The identifier of the CodeHierarchy resource.\n     * @param codeHierarchyRsrc The CodeHierarchy resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeHierarchyRsrc>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeHierarchyRsrc>>;\n    public updateCodeHierarchyResourceByCodeTableName(ifMatch: string, codeHierarchyName: string, codeHierarchyRsrc: CodeHierarchyRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyName === null || codeHierarchyName === undefined) {\n            throw new Error('Required parameter codeHierarchyName was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n        if (codeHierarchyRsrc === null || codeHierarchyRsrc === undefined) {\n            throw new Error('Required parameter codeHierarchyRsrc was null or undefined when calling updateCodeHierarchyResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeHierarchyRsrc>(`${this.configuration.basePath}/codeHierarchies/${encodeURIComponent(String(codeHierarchyName))}`,\n            codeHierarchyRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update CodeTable by code table name.\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param codeTableName The identifier of the CodeTable resource.\n     * @param codeTableRsrc The CodeTable resource containing the new values.\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<CodeTableRsrc>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<CodeTableRsrc>>;\n    public updateCodeTableResourceByCodeTableName(ifMatch: string, codeTableName: string, codeTableRsrc: CodeTableRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableName === null || codeTableName === undefined) {\n            throw new Error('Required parameter codeTableName was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n        if (codeTableRsrc === null || codeTableRsrc === undefined) {\n            throw new Error('Required parameter codeTableRsrc was null or undefined when calling updateCodeTableResourceByCodeTableName.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<CodeTableRsrc>(`${this.configuration.basePath}/codeTables/${encodeURIComponent(String(codeTableName))}`,\n            codeTableRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The documentId of the Document resource.\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public updateDocument1(ifMatch: string, documentId: string, resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocument1.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocument1.');\n        }\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling updateDocument1.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileDetailsRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param documentId The checkoutId being updated.\n     * @param documentCheckoutId The documentCheckoutId of the checkout resource.\n     * @param fileCheckoutRsrc The new values in checkoutRsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileCheckoutRsrc>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileCheckoutRsrc>>;\n    public updateDocumentCheckout(ifMatch: string, documentId: string, documentCheckoutId: string, fileCheckoutRsrc: FileCheckoutRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentId === null || documentId === undefined) {\n            throw new Error('Required parameter documentId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (documentCheckoutId === null || documentCheckoutId === undefined) {\n            throw new Error('Required parameter documentCheckoutId was null or undefined when calling updateDocumentCheckout.');\n        }\n        if (fileCheckoutRsrc === null || fileCheckoutRsrc === undefined) {\n            throw new Error('Required parameter fileCheckoutRsrc was null or undefined when calling updateDocumentCheckout.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<FileCheckoutRsrc>(`${this.configuration.basePath}/documents/${encodeURIComponent(String(documentId))}/checkout/${encodeURIComponent(String(documentCheckoutId))}`,\n            fileCheckoutRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param ifMatch The If-Match request-header must match the current eTag of the resource or the request will fail.\n     * @param lockId The lockId being updated.\n     * @param lockRsrc The new values in lock rsrc\n     * @param requestId The unique identity of the request assigned by the originator to help trace the request through the logs.\n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param cacheControl Used to specify directives for caches along the request-response chain\n     * @param pragma An implementation-specific header that may have various effects along the request-response chain. It is used for backwards compatibility with HTTP/1.0 caches where the Cache-Control HTTP/1.1 header is not yet present.\n     * @param authorization Contains the credentials to authenticate a user agent with a server.\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<LockRsrc>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<LockRsrc>>;\n    public updateLock(ifMatch: string, lockId: string, lockRsrc: LockRsrc, requestId?: string, restVersion?: number, cacheControl?: string, pragma?: string, authorization?: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (ifMatch === null || ifMatch === undefined) {\n            throw new Error('Required parameter ifMatch was null or undefined when calling updateLock.');\n        }\n        if (lockId === null || lockId === undefined) {\n            throw new Error('Required parameter lockId was null or undefined when calling updateLock.');\n        }\n        if (lockRsrc === null || lockRsrc === undefined) {\n            throw new Error('Required parameter lockRsrc was null or undefined when calling updateLock.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (requestId !== undefined && requestId !== null) {\n            headers = headers.set('RequestId', String(requestId));\n        }\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n        if (cacheControl !== undefined && cacheControl !== null) {\n            headers = headers.set('Cache-Control', String(cacheControl));\n        }\n        if (pragma !== undefined && pragma !== null) {\n            headers = headers.set('Pragma', String(pragma));\n        }\n        if (authorization !== undefined && authorization !== null) {\n            headers = headers.set('Authorization', String(authorization));\n        }\n        if (ifMatch !== undefined && ifMatch !== null) {\n            headers = headers.set('If-Match', String(ifMatch));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json',\n            'application/xml'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.put<LockRsrc>(`${this.configuration.basePath}/lock/${encodeURIComponent(String(lockId))}`,\n            lockRsrc,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add Document Resource to the List of Document resources\n     * @param resource \n     * @param restVersion The version of the Rest API supported by the requesting client.\n     * @param file \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<FileDetailsRsrc>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpResponse<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<HttpEvent<FileDetailsRsrc>>;\n    public uploadDocument(resource: FileDetailsRsrc, restVersion?: number, file?: FormDataBodyPart, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json' | 'application/xml'}): Observable<any> {\n        if (resource === null || resource === undefined) {\n            throw new Error('Required parameter resource was null or undefined when calling uploadDocument.');\n        }\n\n        let headers = this.defaultHeaders;\n        if (restVersion !== undefined && restVersion !== null) {\n            headers = headers.set('Rest-Version', String(restVersion));\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json',\n                'application/xml'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'multipart/form-data'\n        ];\n\n        const canConsumeForm = this.canConsumeForm(consumes);\n\n        let formParams: { append(param: string, value: any): any; };\n        let useForm = false;\n        let convertFormParamsToString = false;\n        if (useForm) {\n            formParams = new FormData();\n        } else {\n            formParams = new HttpParams({encoder: this.encoder});\n        }\n\n        if (resource !== undefined) {\n            formParams = formParams.append('resource', useForm ? new Blob([JSON.stringify(resource)], {type: 'application/json'}) : <any>resource) as any || formParams;\n        }\n        if (file !== undefined) {\n            formParams = formParams.append('file', useForm ? new Blob([JSON.stringify(file)], {type: 'application/json'}) : <any>file) as any || formParams;\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<FileDetailsRsrc>(`${this.configuration.basePath}/documents`,\n            convertFormParamsToString ? formParams.toString() : formParams,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","export * from './default.service';\nimport { DefaultService } from './default.service';\nexport const APIS = [DefaultService];\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface BodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface BodyPartMediaType { \n    type?: string;\n    subtype?: string;\n    parameters?: { [key: string]: string; };\n    wildcardType?: boolean;\n    wildcardSubtype?: boolean;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { CodeHierarchyRsrc } from './codeHierarchyRsrc';\n\n\nexport interface CodeHierarchyListRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyList?: Array<CodeHierarchyRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { Hierarchy } from './hierarchy';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeHierarchyRsrc { \n    links?: Array<RelLink>;\n    codeHierarchyName?: string;\n    lowerCodeTableName?: string;\n    upperCodeTableName?: string;\n    hierarchy?: Array<Hierarchy>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface CodeRsrc { \n    code?: string;\n    description?: string;\n    displayOrder?: number;\n    effectiveDate?: string;\n    expiryDate?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeTableRsrc } from './codeTableRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableListRsrc { \n    links?: Array<RelLink>;\n    codeTableList?: Array<CodeTableRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { CodeRsrc } from './codeRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface CodeTableRsrc { \n    links?: Array<RelLink>;\n    codeTableName?: string;\n    codes?: Array<CodeRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface EndpointsRsrc { \n    links?: Array<RelLink>;\n    releaseVersion?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileCheckoutRsrc { \n    links?: Array<RelLink>;\n    fileCheckoutId?: string;\n    file?: FileRsrc;\n    securityKey?: SecurityKeyRsrc;\n    checkOutComment?: string;\n    checkInComment?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FileVersionRsrc } from './fileVersionRsrc';\nimport { FileSecurityRsrc } from './fileSecurityRsrc';\nimport { FileCheckoutRsrc } from './fileCheckoutRsrc';\nimport { FileMetadataRsrc } from './fileMetadataRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface FileDetailsRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    versionNumber?: number;\n    fileExtension?: string;\n    fileType?: string;\n    mimeType?: string;\n    fileSize?: number;\n    retention?: string;\n    security?: Array<FileSecurityRsrc>;\n    metadata?: Array<FileMetadataRsrc>;\n    versions?: Array<FileVersionRsrc>;\n    uploadedBy?: string;\n    uploadedOnTimestamp?: string;\n    lastUpdatedBy?: string;\n    lastUpdatedByGuid?: string;\n    parent?: FileRsrc;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    fileCheckout?: FileCheckoutRsrc;\n    lockedInd?: boolean;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface FileListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<FileDetailsRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileMetadataRsrc { \n    metadataName?: string;\n    metadataValue?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RelLink } from './relLink';\n\n\nexport interface FileRsrc { \n    links?: Array<RelLink>;\n    fileId?: string;\n    filePath?: string;\n    lastUpdatedTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\n\n\nexport interface FileSecurityRsrc { \n    securityKey?: SecurityKeyRsrc;\n    grantorAccessInd?: boolean;\n    readAccessInd?: boolean;\n    writeAccessInd?: boolean;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FileVersionRsrc { \n    versionNumber?: number;\n    fileSize?: number;\n    uploadedById?: string;\n    uploadedOnTimestamp?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { MultiPart } from './multiPart';\nimport { ContentDisposition } from './contentDisposition';\nimport { FormDataContentDisposition } from './formDataContentDisposition';\n\n\nexport interface FormDataBodyPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    simple?: boolean;\n    formDataContentDisposition?: FormDataContentDisposition;\n    name?: string;\n    value?: string;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface FormDataContentDisposition { \n    type?: string;\n    parameters?: { [key: string]: string; };\n    fileName?: string;\n    creationDate?: string;\n    modificationDate?: string;\n    readDate?: string;\n    size?: number;\n    name?: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface HealthCheckResponseRsrc { \n    componentIdentifier?: string;\n    componentName?: string;\n    validationStatus?: HealthCheckResponseRsrc.ValidationStatusEnum;\n    statusDetails?: string;\n    dependencyComponentResponses?: Array<HealthCheckResponseRsrc>;\n    type: string;\n}\nexport namespace HealthCheckResponseRsrc {\n    export type ValidationStatusEnum = 'RED' | 'YELLOW' | 'GREEN';\n    export const ValidationStatusEnum = {\n        RED: 'RED' as ValidationStatusEnum,\n        YELLOW: 'YELLOW' as ValidationStatusEnum,\n        GREEN: 'GREEN' as ValidationStatusEnum\n    };\n}\n\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface Hierarchy { \n    lowerCode?: string;\n    upperCode?: string;\n    effectiveDate?: string;\n    expiryDate?: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { FormDataBodyPart } from './formDataBodyPart';\nimport { FileDetailsRsrc } from './fileDetailsRsrc';\n\n\nexport interface InlineObject1 { \n    resource: FileDetailsRsrc;\n    file?: FormDataBodyPart;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { LockRsrc } from './lockRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockListRsrc { \n    links?: Array<RelLink>;\n    pageNumber?: number;\n    pageRowCount?: number;\n    totalRowCount?: number;\n    totalPageCount?: number;\n    collection?: Array<LockRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { SecurityKeyRsrc } from './securityKeyRsrc';\nimport { FileRsrc } from './fileRsrc';\nimport { RelLink } from './relLink';\n\n\nexport interface LockRsrc { \n    links?: Array<RelLink>;\n    lockId?: string;\n    securityKey?: SecurityKeyRsrc;\n    lockReason?: string;\n    validStartTimestamp?: string;\n    validEndTimestamp?: string;\n    lockedFiles?: Array<FileRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { MessageRsrc } from './messageRsrc';\n\n\nexport interface MessageListRsrc { \n    messages?: Array<MessageRsrc>;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface MessageRsrc { \n    path?: string;\n    message?: string;\n    messageTemplate?: string;\n    messageArguments?: Array<string>;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BodyPart } from './bodyPart';\nimport { BodyPartMediaType } from './bodyPartMediaType';\nimport { ParameterizedHeader } from './parameterizedHeader';\nimport { ContentDisposition } from './contentDisposition';\n\n\nexport interface MultiPart { \n    contentDisposition?: ContentDisposition;\n    entity?: object;\n    headers?: { [key: string]: Array<string>; };\n    mediaType?: BodyPartMediaType;\n    messageBodyWorkers?: object;\n    parent?: MultiPart;\n    providers?: object;\n    bodyParts?: Array<BodyPart>;\n    parameterizedHeaders?: { [key: string]: Array<ParameterizedHeader>; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface ParameterizedHeader { \n    value?: string;\n    parameters?: { [key: string]: string; };\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface RelLink { \n    rel?: string;\n    href?: string;\n    method?: string;\n    etag?: string;\n    type: string;\n}\n\n","/**\n * WFDM Document Management API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.2.0-SNAPSHOT\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport interface SecurityKeyRsrc { \n    securityKey?: string;\n    displayLabel?: string;\n    etag?: string;\n    type: string;\n}\n\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { DefaultService } from './api/default.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n"],"names":[],"mappings":"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"}