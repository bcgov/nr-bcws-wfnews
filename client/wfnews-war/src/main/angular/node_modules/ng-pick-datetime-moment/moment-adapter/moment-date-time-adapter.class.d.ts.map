{"version":3,"file":"moment-date-time-adapter.class.d.ts","sources":["moment-date-time-adapter.class.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken } from '@angular/core';\nimport { DateTimeAdapter } from 'ng-pick-datetime';\nimport { Moment } from 'moment/moment';\nexport interface OwlMomentDateTimeAdapterOptions {\n    useUtc: boolean;\n}\nexport declare const OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS: InjectionToken<OwlMomentDateTimeAdapterOptions>;\nexport declare function OWL_MOMENT_DATE_TIME_ADAPTER_OPTIONS_FACTORY(): OwlMomentDateTimeAdapterOptions;\nexport declare class MomentDateTimeAdapter extends DateTimeAdapter<Moment> {\n    private owlDateTimeLocale;\n    private options;\n    private _localeData;\n    constructor(owlDateTimeLocale: string, options?: OwlMomentDateTimeAdapterOptions);\n    setLocale(locale: string): void;\n    getYear(date: Moment): number;\n    getMonth(date: Moment): number;\n    getDay(date: Moment): number;\n    getDate(date: Moment): number;\n    getHours(date: Moment): number;\n    getMinutes(date: Moment): number;\n    getSeconds(date: Moment): number;\n    getTime(date: Moment): number;\n    getNumDaysInMonth(date: Moment): number;\n    differenceInCalendarDays(dateLeft: Moment, dateRight: Moment): number;\n    getYearName(date: Moment): string;\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\n    getDateNames(): string[];\n    toIso8601(date: Moment): string;\n    isEqual(dateLeft: Moment, dateRight: Moment): boolean;\n    isSameDay(dateLeft: Moment, dateRight: Moment): boolean;\n    isValid(date: Moment): boolean;\n    invalid(): Moment;\n    isDateInstance(obj: any): boolean;\n    addCalendarYears(date: Moment, amount: number): Moment;\n    addCalendarMonths(date: Moment, amount: number): Moment;\n    addCalendarDays(date: Moment, amount: number): Moment;\n    setHours(date: Moment, amount: number): Moment;\n    setMinutes(date: Moment, amount: number): Moment;\n    setSeconds(date: Moment, amount: number): Moment;\n    createDate(year: number, month: number, date: number): Moment;\n    clone(date: Moment): Moment;\n    now(): Moment;\n    format(date: Moment, displayFormat: any): string;\n    parse(value: any, parseFormat: any): Moment | null;\n    deserialize(value: any): Moment | null;\n    private createMoment(...args);\n}\n"]}