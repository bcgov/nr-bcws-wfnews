{"version":3,"file":"calendar.component.d.ts","sources":["calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, AfterViewChecked, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { OwlDateTimeIntl } from './date-time-picker-intl.service';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OwlDateTimeFormats } from './adapter/date-time-format.class';\nimport { SelectMode } from './date-time.class';\nexport declare class OwlCalendarComponent<T> implements OnInit, AfterContentInit, AfterViewChecked, OnDestroy {\n    private elmRef;\n    private pickerIntl;\n    private ngZone;\n    private cdRef;\n    private dateTimeAdapter;\n    private dateTimeFormats;\n    dateFilter: Function;\n    firstDayOfWeek: number;\n    private _minDate;\n    minDate: T | null;\n    private _maxDate;\n    maxDate: T | null;\n    private _pickerMoment;\n    pickerMoment: T;\n    selectMode: SelectMode;\n    private _selected;\n    selected: T | null;\n    private _selecteds;\n    selecteds: T[];\n    startView: 'month' | 'year' | 'multi-years';\n    hideOtherMonths: boolean;\n    pickerMomentChange: EventEmitter<T>;\n    selectedChange: EventEmitter<T>;\n    userSelection: EventEmitter<void>;\n    readonly yearSelected: EventEmitter<T>;\n    readonly monthSelected: EventEmitter<T>;\n    readonly periodButtonText: string;\n    readonly periodButtonLabel: string;\n    readonly prevButtonLabel: string;\n    readonly nextButtonLabel: string;\n    private _currentView;\n    currentView: 'month' | 'year' | 'multi-years';\n    readonly isInSingleMode: boolean;\n    readonly isInRangeMode: boolean;\n    readonly showControlArrows: boolean;\n    readonly isMonthView: boolean;\n    dateFilterForViews: (date: T) => boolean;\n    readonly owlDTCalendarClass: boolean;\n    private intlChangesSub;\n    private moveFocusOnNextTick;\n    constructor(elmRef: ElementRef, pickerIntl: OwlDateTimeIntl, ngZone: NgZone, cdRef: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewChecked(): void;\n    ngOnDestroy(): void;\n    toggleViews(): void;\n    previousClicked(): void;\n    nextClicked(): void;\n    dateSelected(date: T): void;\n    goToDateInView(date: T, view: 'month' | 'year' | 'multi-years'): void;\n    handlePickerMomentChange(date: T): void;\n    userSelected(): void;\n    prevButtonEnabled(): boolean;\n    nextButtonEnabled(): boolean;\n    focusActiveCell(): void;\n    selectYearInMultiYearView(normalizedYear: T): void;\n    selectMonthInYearView(normalizedMonth: T): void;\n    private isSameView(date1, date2);\n    private getValidDate(obj);\n}\n"]}