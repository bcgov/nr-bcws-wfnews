{"version":3,"file":"date-time-inline.component.d.ts","sources":["date-time-inline.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { OwlDateTime, PickerMode, PickerType, SelectMode } from './date-time.class';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OwlDateTimeFormats } from './adapter/date-time-format.class';\nimport { OwlDateTimeContainerComponent } from './date-time-picker-container.component';\nexport declare const OWL_DATETIME_VALUE_ACCESSOR: any;\nexport declare class OwlDateTimeInlineComponent<T> extends OwlDateTime<T> implements OnInit, ControlValueAccessor {\n    protected changeDetector: ChangeDetectorRef;\n    protected dateTimeAdapter: DateTimeAdapter<T>;\n    protected dateTimeFormats: OwlDateTimeFormats;\n    container: OwlDateTimeContainerComponent<T>;\n    private _pickerType;\n    pickerType: PickerType;\n    private _disabled;\n    disabled: boolean;\n    private _selectMode;\n    selectMode: SelectMode;\n    private _startAt;\n    startAt: T | null;\n    private _dateTimeFilter;\n    dateTimeFilter: (date: T | null) => boolean;\n    private _min;\n    minDateTime: T | null;\n    private _max;\n    maxDateTime: T | null;\n    private _value;\n    value: T | null;\n    private _values;\n    values: T[];\n    yearSelected: EventEmitter<T>;\n    monthSelected: EventEmitter<T>;\n    private _selected;\n    selected: T | null;\n    private _selecteds;\n    selecteds: T[];\n    readonly opened: boolean;\n    readonly pickerMode: PickerMode;\n    readonly isInSingleMode: boolean;\n    readonly isInRangeMode: boolean;\n    readonly owlDTInlineClass: boolean;\n    private onModelChange;\n    private onModelTouched;\n    constructor(changeDetector: ChangeDetectorRef, dateTimeAdapter: DateTimeAdapter<T>, dateTimeFormats: OwlDateTimeFormats);\n    ngOnInit(): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    select(date: T[] | T): void;\n    selectYear(normalizedYear: T): void;\n    selectMonth(normalizedMonth: T): void;\n}\n"]}