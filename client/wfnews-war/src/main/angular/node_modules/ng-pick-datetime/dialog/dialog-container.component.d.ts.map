{"version":3,"file":"dialog-container.component.d.ts","sources":["dialog-container.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ComponentRef, ElementRef, EmbeddedViewRef, EventEmitter, OnInit } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { FocusTrapFactory } from '@angular/cdk/a11y';\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { OwlDialogConfig } from './dialog-config.class';\nexport declare class OwlDialogContainerComponent extends BasePortalOutlet implements OnInit {\n    private changeDetector;\n    private elementRef;\n    private focusTrapFactory;\n    private document;\n    portalOutlet: CdkPortalOutlet;\n    private focusTrap;\n    ariaLabelledBy: string | null;\n    animationStateChanged: EventEmitter<AnimationEvent>;\n    isAnimating: boolean;\n    private _config;\n    readonly config: OwlDialogConfig;\n    private state;\n    private params;\n    private elementFocusedBeforeDialogWasOpened;\n    readonly owlDialogContainerClass: boolean;\n    readonly owlDialogContainerTabIndex: number;\n    readonly owlDialogContainerId: string;\n    readonly owlDialogContainerRole: string;\n    readonly owlDialogContainerAriaLabelledby: string;\n    readonly owlDialogContainerAriaDescribedby: string;\n    readonly owlDialogContainerAnimation: any;\n    constructor(changeDetector: ChangeDetectorRef, elementRef: ElementRef, focusTrapFactory: FocusTrapFactory, document: any);\n    ngOnInit(): void;\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\n    setConfig(config: OwlDialogConfig): void;\n    onAnimationStart(event: AnimationEvent): void;\n    onAnimationDone(event: AnimationEvent): void;\n    startExitAnimation(): void;\n    private calculateZoomOrigin(event);\n    private savePreviouslyFocusedElement();\n    private trapFocus();\n    private restoreFocus();\n}\n"]}