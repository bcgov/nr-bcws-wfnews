{"version":3,"file":"dialog.service.d.ts","sources":["dialog.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { InjectionToken, Injector, TemplateRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { OwlDialogConfig } from './dialog-config.class';\nimport { OwlDialogRef } from './dialog-ref.class';\nimport { Observable, Subject } from 'rxjs';\nimport { Overlay, OverlayContainer, ScrollStrategy } from '@angular/cdk/overlay';\nimport { ComponentType } from '@angular/cdk/portal';\nexport declare const OWL_DIALOG_DATA: InjectionToken<any>;\nexport declare const OWL_DIALOG_SCROLL_STRATEGY: InjectionToken<() => ScrollStrategy>;\nexport declare function OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay): () => ScrollStrategy;\nexport declare const OWL_DIALOG_SCROLL_STRATEGY_PROVIDER: {\n    provide: InjectionToken<() => ScrollStrategy>;\n    deps: (typeof Overlay)[];\n    useFactory: typeof OWL_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY;\n};\nexport declare const OWL_DIALOG_DEFAULT_OPTIONS: InjectionToken<OwlDialogConfig>;\nexport declare class OwlDialogService {\n    private overlay;\n    private injector;\n    private location;\n    private scrollStrategy;\n    private defaultOptions;\n    private parentDialog;\n    private overlayContainer;\n    private ariaHiddenElements;\n    private _openDialogsAtThisLevel;\n    private _afterOpenAtThisLevel;\n    private _afterAllClosedAtThisLevel;\n    readonly openDialogs: OwlDialogRef<any>[];\n    readonly afterOpen: Subject<OwlDialogRef<any>>;\n    readonly _afterAllClosed: any;\n    afterAllClosed: Observable<void>;\n    constructor(overlay: Overlay, injector: Injector, location: Location, scrollStrategy: () => ScrollStrategy, defaultOptions: OwlDialogConfig, parentDialog: OwlDialogService, overlayContainer: OverlayContainer);\n    open<T>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>, config?: OwlDialogConfig): OwlDialogRef<any>;\n    closeAll(): void;\n    getDialogById(id: string): OwlDialogRef<any> | undefined;\n    private attachDialogContent<T>(componentOrTemplateRef, dialogContainer, overlayRef, config);\n    private createInjector<T>(config, dialogRef, dialogContainer);\n    private createOverlay(config);\n    private attachDialogContainer(overlayRef, config);\n    private getOverlayConfig(dialogConfig);\n    private removeOpenDialog(dialogRef);\n    private hideNonDialogContentFromAssistiveTechnology();\n}\n"]}