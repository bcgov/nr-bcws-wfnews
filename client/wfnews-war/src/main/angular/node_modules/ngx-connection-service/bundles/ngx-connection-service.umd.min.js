!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs"),require("rxjs/operators"),require("lodash"),require("@angular/core"),require("@angular/common/http")):"function"==typeof define&&define.amd?define("ngx-connection-service",["exports","rxjs","rxjs/operators","lodash","@angular/core","@angular/common/http"],t):t(e["ngx-connection-service"]={},e.rxjs,e.rxjs.operators,e._,e.ng.core,e.ng.common.http)}(this,function(e,n,r,i,o,t){"use strict";var s=new o.InjectionToken("ConnectionServiceOptionsToken"),c=(Object.defineProperty(a.prototype,"options",{get:function(){return i.clone(this.serviceOptions)},enumerable:!0,configurable:!0}),a.prototype.checkInternetState=function(){var t=this;i.isNil(this.httpSubscription)||this.httpSubscription.unsubscribe(),this.serviceOptions.enableHeartbeat?this.httpSubscription=n.timer(0,this.serviceOptions.heartbeatInterval).pipe(r.switchMap(function(){return t.serviceOptions.heartbeatExecutor(t.serviceOptions)}),r.retryWhen(function(e){return e.pipe(r.tap(function(e){console.error("Http error:",e),t.currentState.hasInternetAccess=!1,t.emitEvent()}),r.delay(t.serviceOptions.heartbeatRetryInterval))})).subscribe(function(e){t.currentState.hasInternetAccess=!0,t.emitEvent()}):(this.currentState.hasInternetAccess=!1,this.emitEvent())},a.prototype.checkNetworkState=function(){var e=this;this.onlineSubscription=n.fromEvent(window,"online").subscribe(function(){e.currentState.hasNetworkConnection=!0,e.checkInternetState(),e.emitEvent()}),this.offlineSubscription=n.fromEvent(window,"offline").subscribe(function(){e.currentState.hasNetworkConnection=!1,e.checkInternetState(),e.emitEvent()})},a.prototype.emitEvent=function(){this.stateChangeEventEmitter.emit(this.currentState)},a.prototype.ngOnDestroy=function(){try{this.offlineSubscription.unsubscribe(),this.onlineSubscription.unsubscribe(),this.httpSubscription.unsubscribe()}catch(e){}},a.prototype.monitor=function(e){return void 0===e&&(e=!0),e?this.stateChangeEventEmitter.pipe(r.debounceTime(300),r.startWith(this.currentState)):this.stateChangeEventEmitter.pipe(r.debounceTime(300))},a.prototype.updateOptions=function(e){this.serviceOptions=i.defaults({},e,this.serviceOptions),this.checkInternetState()},a.DEFAULT_OPTIONS={enableHeartbeat:!0,heartbeatUrl:"//server.test-cors.org/server?id="+Date.now()+"&enable=true&status=200&credentials=false",heartbeatInterval:3e4,heartbeatRetryInterval:1e3,requestMethod:"head"},a.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],a.ctorParameters=function(){return[{type:t.HttpClient},{type:undefined,decorators:[{type:o.Inject,args:[s]},{type:o.Optional}]}]},a.ngInjectableDef=o.defineInjectable({factory:function(){return new a(o.inject(t.HttpClient),o.inject(s,8))},token:a,providedIn:"root"}),a);function a(e,t){var n=this;this.http=e,this.stateChangeEventEmitter=new o.EventEmitter,this.currentState={hasInternetAccess:!1,hasNetworkConnection:window.navigator.onLine},this.serviceOptions=i.defaults({},t,a.DEFAULT_OPTIONS,{heartbeatExecutor:function(){return n.http.request(n.serviceOptions.requestMethod,n.serviceOptions.heartbeatUrl,{responseType:"text"})}}),this.checkNetworkState(),this.checkInternetState()}var u=(p.decorators=[{type:o.NgModule,args:[{imports:[t.HttpClientModule],providers:[c]}]}],p);function p(){}e.ConnectionServiceOptionsToken=s,e.ConnectionService=c,e.ConnectionServiceModule=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-connection-service.umd.min.js.map