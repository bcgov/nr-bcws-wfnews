{"version":3,"file":"mask.service.d.ts","sources":["mask.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2 } from '@angular/core';\nimport { IConfig } from './config';\nimport { MaskApplierService } from './mask-applier.service';\nexport declare class MaskService extends MaskApplierService {\n    private document;\n    protected _config: IConfig;\n    private _elementRef;\n    private _renderer;\n    maskExpression: string;\n    isNumberValue: boolean;\n    showMaskTyped: boolean;\n    maskIsShown: string;\n    private _formElement;\n    onChange: (_: any) => void;\n    onTouch: () => void;\n    constructor(document: any, _config: IConfig, _elementRef: ElementRef, _renderer: Renderer2);\n    applyMask(inputValue: string, maskExpression: string, position?: number, cb?: Function): string;\n    applyValueChanges(position?: number, cb?: Function): void;\n    showMaskInInput(): void;\n    clearIfNotMatchFn(): void;\n    formElementProperty: [string, string | boolean];\n    private _removeMask;\n    private _removePrefix;\n    private _removeSufix;\n    private _regExpForRemove;\n}\n"]}