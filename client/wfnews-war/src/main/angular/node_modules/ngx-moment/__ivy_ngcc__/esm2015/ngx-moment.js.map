{"version":3,"file":"ngx-moment.js","sources":["ngx-moment/out/add.pipe.ts","ngx-moment/out/calendar.pipe.ts","ngx-moment/out/date-format.pipe.ts","ngx-moment/out/difference.pipe.ts","ngx-moment/out/duration.pipe.ts","ngx-moment/out/from-unix.pipe.ts","ngx-moment/out/parse.pipe.ts","ngx-moment/out/subtract.pipe.ts","ngx-moment/out/time-ago.pipe.ts","ngx-moment/out/utc.pipe.ts","ngx-moment/out/from-utc.pipe.ts","ngx-moment/out/local.pipe.ts","ngx-moment/out/locale.pipe.ts","ngx-moment/out/parse-zone.pipe.ts","ngx-moment/out/moment.module.ts"],"names":["momentConstructor","moment.isMoment","moment.duration","moment.unix","moment.isDate","moment.utc","moment.parseZone"],"mappings":"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","sourcesContent":["/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).add(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\r\n  private static refs = 0;\r\n\r\n  private static timer: number | null = null;\r\n  private static midnight: EventEmitter<Date> | null = null;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    const now = momentConstructor();\r\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) { return ''; }\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDifference' })\r\nexport class DifferencePipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment,\r\n            otherValue: Date | moment.Moment,\r\n            unit?: moment.unitOfTime.Diff,\r\n            precision?: boolean): number {\r\n\r\n    const date = momentConstructor(value);\r\n    const date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();\r\n\r\n    return date.diff(date2, unit, precision);\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amDuration' })\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): string {\r\n    if (typeof args === 'undefined' || args.length !== 1) {\r\n      throw new Error('DurationPipe: missing required time unit argument');\r\n    }\r\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUnix' })\r\nexport class FromUnixPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    if (typeof value === 'string') {\r\n      value = +value;\r\n    }\r\n    return moment.unix(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, format: string): moment.Moment {\r\n    return momentConstructor(value, format);\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).subtract(amount, unit);\r\n    }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({name: 'amTimeAgo', pure: false})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private currentTimer: number;\r\n\r\n  private lastTime: Number;\r\n  private lastValue: Date | moment.Moment;\r\n  private lastOmitSuffix: boolean;\r\n  private lastLocale?: string;\r\n  private lastText: string;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, omitSuffix?: boolean): string {\r\n    if (this.hasChanged(value, omitSuffix)) {\r\n      this.lastTime = this.getTime(value);\r\n      this.lastValue = value;\r\n      this.lastOmitSuffix = omitSuffix;\r\n      this.lastLocale = this.getLocale(value);\r\n      this.removeTimer();\r\n      this.createTimer();\r\n      this.lastText = momentConstructor(value).from(momentConstructor(), omitSuffix);\r\n\r\n    } else {\r\n      this.createTimer();\r\n    }\r\n\r\n    return this.lastText;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeTimer();\r\n  }\r\n\r\n\r\n  private createTimer() {\r\n    if (this.currentTimer) {\r\n      return;\r\n    }\r\n    const momentInstance = momentConstructor(this.lastValue);\r\n\r\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return window.setTimeout(() => {\r\n          this.lastText = momentConstructor(this.lastValue).from(momentConstructor(), this.lastOmitSuffix);\r\n\r\n          this.currentTimer = null;\r\n          this.ngZone.run(() => this.cdRef.markForCheck());\r\n        }, timeToUpdate);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private removeTimer() {\r\n    if (this.currentTimer) {\r\n      window.clearTimeout(this.currentTimer);\r\n      this.currentTimer = null;\r\n    }\r\n  }\r\n\r\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\r\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\r\n    if (howOld < 1) {\r\n      return 1;\r\n    } else if (howOld < 60) {\r\n      return 30;\r\n    } else if (howOld < 180) {\r\n      return 300;\r\n    } else {\r\n      return 3600;\r\n    }\r\n  }\r\n\r\n  private hasChanged(value: Date | moment.Moment, omitSuffix?: boolean) {\r\n    return this.getTime(value) !== this.lastTime\r\n      || this.getLocale(value) !== this.lastLocale\r\n      || omitSuffix !== this.lastOmitSuffix;\r\n  }\r\n\r\n  private getTime(value: Date | moment.Moment) {\r\n    if (moment.isDate(value)) {\r\n      return value.getTime();\r\n    } else if (moment.isMoment(value)) {\r\n      return value.valueOf();\r\n    } else {\r\n      return momentConstructor(value).valueOf();\r\n    }\r\n  }\r\n\r\n  private getLocale(value: Date | moment.Moment): string {\r\n    return moment.isMoment(value) ? value.locale() : null;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amUtc' })\r\nexport class UtcPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n    return momentConstructor(value).utc();\r\n  }\r\n}\r\n","/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUtc' })\r\nexport class FromUtcPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    return moment.utc(value);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocal' })\r\nexport class LocalTimePipe implements PipeTransform {\r\n    transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n        return momentConstructor(value).local();\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocale' })\r\nexport class LocalePipe implements PipeTransform {\r\n  transform(value: string, locale: string): moment.Moment {\r\n    return momentConstructor(value).locale(locale);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amParseZone' })\r\nexport class ParseZonePipe implements PipeTransform {\r\n  transform(value: string): moment.Moment {\r\n    return moment.parseZone(value);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AddPipe } from './add.pipe';\r\nimport { CalendarPipe } from './calendar.pipe';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DifferencePipe } from './difference.pipe';\r\nimport { DurationPipe } from './duration.pipe';\r\nimport { FromUnixPipe } from './from-unix.pipe';\r\nimport { ParsePipe } from './parse.pipe';\r\nimport { SubtractPipe } from './subtract.pipe';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { UtcPipe } from './utc.pipe';\r\nimport { FromUtcPipe } from './from-utc.pipe';\r\nimport { LocalTimePipe } from './local.pipe';\r\nimport { LocalePipe } from './locale.pipe';\r\nimport { ParseZonePipe } from './parse-zone.pipe';\r\n\r\nconst ANGULAR_MOMENT_PIPES = [\r\n  AddPipe,\r\n  CalendarPipe,\r\n  DateFormatPipe,\r\n  DifferencePipe,\r\n  DurationPipe,\r\n  FromUnixPipe,\r\n  ParsePipe,\r\n  SubtractPipe,\r\n  TimeAgoPipe,\r\n  UtcPipe,\r\n  FromUtcPipe,\r\n  LocalTimePipe,\r\n  LocalePipe,\r\n  ParseZonePipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ANGULAR_MOMENT_PIPES,\r\n  exports: ANGULAR_MOMENT_PIPES\r\n})\r\nexport class MomentModule { }\r\n"]}