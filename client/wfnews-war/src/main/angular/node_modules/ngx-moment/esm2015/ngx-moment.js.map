{
  "version": 3,
  "file": "ngx-moment.js",
  "sources": [
    "ng://ngx-moment/out/moment.module.ts",
    "ng://ngx-moment/out/parse-zone.pipe.ts",
    "ng://ngx-moment/out/locale.pipe.ts",
    "ng://ngx-moment/out/local.pipe.ts",
    "ng://ngx-moment/out/from-utc.pipe.ts",
    "ng://ngx-moment/out/utc.pipe.ts",
    "ng://ngx-moment/out/time-ago.pipe.ts",
    "ng://ngx-moment/out/subtract.pipe.ts",
    "ng://ngx-moment/out/parse.pipe.ts",
    "ng://ngx-moment/out/from-unix.pipe.ts",
    "ng://ngx-moment/out/duration.pipe.ts",
    "ng://ngx-moment/out/difference.pipe.ts",
    "ng://ngx-moment/out/date-format.pipe.ts",
    "ng://ngx-moment/out/calendar.pipe.ts",
    "ng://ngx-moment/out/add.pipe.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\r\n\r\nimport { AddPipe } from './add.pipe';\r\nimport { CalendarPipe } from './calendar.pipe';\r\nimport { DateFormatPipe } from './date-format.pipe';\r\nimport { DifferencePipe } from './difference.pipe';\r\nimport { DurationPipe } from './duration.pipe';\r\nimport { FromUnixPipe } from './from-unix.pipe';\r\nimport { ParsePipe } from './parse.pipe';\r\nimport { SubtractPipe } from './subtract.pipe';\r\nimport { TimeAgoPipe } from './time-ago.pipe';\r\nimport { UtcPipe } from './utc.pipe';\r\nimport { FromUtcPipe } from './from-utc.pipe';\r\nimport { LocalTimePipe } from './local.pipe';\r\nimport { LocalePipe } from './locale.pipe';\r\nimport { ParseZonePipe } from './parse-zone.pipe';\r\n\r\nconst ANGULAR_MOMENT_PIPES = [\r\n  AddPipe,\r\n  CalendarPipe,\r\n  DateFormatPipe,\r\n  DifferencePipe,\r\n  DurationPipe,\r\n  FromUnixPipe,\r\n  ParsePipe,\r\n  SubtractPipe,\r\n  TimeAgoPipe,\r\n  UtcPipe,\r\n  FromUtcPipe,\r\n  LocalTimePipe,\r\n  LocalePipe,\r\n  ParseZonePipe\r\n];\r\n\r\n@NgModule({\r\n  declarations: ANGULAR_MOMENT_PIPES,\r\n  exports: ANGULAR_MOMENT_PIPES\r\n})\r\nexport class MomentModule { }\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amParseZone' })\r\nexport class ParseZonePipe implements PipeTransform {\r\n  transform(value: string): moment.Moment {\r\n    return moment.parseZone(value);\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// under systemjs, moment is actually exported as the default export, so we account for that\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocale' })\r\nexport class LocalePipe implements PipeTransform {\r\n  transform(value: string, locale: string): moment.Moment {\r\n    return momentConstructor(value).locale(locale);\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amLocal' })\r\nexport class LocalTimePipe implements PipeTransform {\r\n    transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n        return momentConstructor(value).local();\r\n    }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUtc' })\r\nexport class FromUtcPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    return moment.utc(value);\r\n  }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amUtc' })\r\nexport class UtcPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number): moment.Moment {\r\n    return momentConstructor(value).utc();\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, ChangeDetectorRef, PipeTransform, OnDestroy, NgZone} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({name: 'amTimeAgo', pure: false})\r\nexport class TimeAgoPipe implements PipeTransform, OnDestroy {\r\n  private currentTimer: number;\r\n\r\n  private lastTime: Number;\r\n  private lastValue: Date | moment.Moment;\r\n  private lastOmitSuffix: boolean;\r\n  private lastLocale?: string;\r\n  private lastText: string;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, omitSuffix?: boolean): string {\r\n    if (this.hasChanged(value, omitSuffix)) {\r\n      this.lastTime = this.getTime(value);\r\n      this.lastValue = value;\r\n      this.lastOmitSuffix = omitSuffix;\r\n      this.lastLocale = this.getLocale(value);\r\n      this.removeTimer();\r\n      this.createTimer();\r\n      this.lastText = momentConstructor(value).from(momentConstructor(), omitSuffix);\r\n\r\n    } else {\r\n      this.createTimer();\r\n    }\r\n\r\n    return this.lastText;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.removeTimer();\r\n  }\r\n\r\n\r\n  private createTimer() {\r\n    if (this.currentTimer) {\r\n      return;\r\n    }\r\n    const momentInstance = momentConstructor(this.lastValue);\r\n\r\n    const timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\r\n    this.currentTimer = this.ngZone.runOutsideAngular(() => {\r\n      if (typeof window !== 'undefined') {\r\n        return window.setTimeout(() => {\r\n          this.lastText = momentConstructor(this.lastValue).from(momentConstructor(), this.lastOmitSuffix);\r\n\r\n          this.currentTimer = null;\r\n          this.ngZone.run(() => this.cdRef.markForCheck());\r\n        }, timeToUpdate);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private removeTimer() {\r\n    if (this.currentTimer) {\r\n      window.clearTimeout(this.currentTimer);\r\n      this.currentTimer = null;\r\n    }\r\n  }\r\n\r\n  private getSecondsUntilUpdate(momentInstance: moment.Moment) {\r\n    const howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\r\n    if (howOld < 1) {\r\n      return 1;\r\n    } else if (howOld < 60) {\r\n      return 30;\r\n    } else if (howOld < 180) {\r\n      return 300;\r\n    } else {\r\n      return 3600;\r\n    }\r\n  }\r\n\r\n  private hasChanged(value: Date | moment.Moment, omitSuffix?: boolean) {\r\n    return this.getTime(value) !== this.lastTime\r\n      || this.getLocale(value) !== this.lastLocale\r\n      || omitSuffix !== this.lastOmitSuffix;\r\n  }\r\n\r\n  private getTime(value: Date | moment.Moment) {\r\n    if (moment.isDate(value)) {\r\n      return value.getTime();\r\n    } else if (moment.isMoment(value)) {\r\n      return value.valueOf();\r\n    } else {\r\n      return momentConstructor(value).valueOf();\r\n    }\r\n  }\r\n\r\n  private getLocale(value: Date | moment.Moment): string {\r\n    return moment.isMoment(value) ? value.locale() : null;\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amSubtract' })\r\nexport class SubtractPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('SubtractPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).subtract(amount, unit);\r\n    }\r\n}\r\n",
    "import { Pipe, PipeTransform } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amParse' })\r\nexport class ParsePipe implements PipeTransform {\r\n  transform(value: string, format: string): moment.Moment {\r\n    return momentConstructor(value, format);\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amFromUnix' })\r\nexport class FromUnixPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): any {\r\n    if (typeof value === 'string') {\r\n      value = +value;\r\n    }\r\n    return moment.unix(value);\r\n  }\r\n}\r\n",
    "import {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Pipe({ name: 'amDuration' })\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: any, ...args: string[]): string {\r\n    if (typeof args === 'undefined' || args.length !== 1) {\r\n      throw new Error('DurationPipe: missing required time unit argument');\r\n    }\r\n    return moment.duration(value, args[0] as moment.unitOfTime.DurationConstructor).humanize();\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDifference' })\r\nexport class DifferencePipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment,\r\n            otherValue: Date | moment.Moment,\r\n            unit?: moment.unitOfTime.Diff,\r\n            precision?: boolean): number {\r\n\r\n    const date = momentConstructor(value);\r\n    const date2 = (otherValue !== null) ? momentConstructor(otherValue) : momentConstructor();\r\n\r\n    return date.diff(date2, unit, precision);\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amDateFormat' })\r\nexport class DateFormatPipe implements PipeTransform {\r\n  transform(value: Date | moment.Moment | string | number, ...args: any[]): string {\r\n    if (!value) { return ''; }\r\n    return momentConstructor(value).format(args[0]);\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport { Pipe, ChangeDetectorRef, PipeTransform, EventEmitter, OnDestroy, NgZone } from '@angular/core';\r\nimport * as moment from 'moment';\r\nimport { Subscription } from 'rxjs';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amCalendar', pure: false })\r\nexport class CalendarPipe implements PipeTransform, OnDestroy {\r\n\r\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\r\n  private static refs = 0;\r\n\r\n  private static timer: number | null = null;\r\n  private static midnight: EventEmitter<Date> | null = null;\r\n\r\n  private midnightSub: Subscription;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private ngZone: NgZone) {\r\n    // using a single static timer for all instances of this pipe for performance reasons\r\n    CalendarPipe.initTimer(ngZone);\r\n\r\n    CalendarPipe.refs++;\r\n\r\n    // values such as Today will need to be replaced with Yesterday after midnight,\r\n    // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\r\n    this.midnightSub = CalendarPipe.midnight.subscribe(() => {\r\n      this.ngZone.run(() => this.cdRef.markForCheck());\r\n    });\r\n  }\r\n\r\n  transform(value: Date | moment.Moment, ...args: any[]): any {\r\n    let formats: any = null;\r\n    let referenceTime: any = null;\r\n\r\n    for (let i = 0, len = args.length; i < len; i++) {\r\n      if (args[i] !== null) {\r\n        if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\r\n          formats = args[i];\r\n        } else {\r\n          referenceTime = momentConstructor(args[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return momentConstructor(value).calendar(referenceTime, formats);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (CalendarPipe.refs > 0) {\r\n      CalendarPipe.refs--;\r\n    }\r\n\r\n    if (CalendarPipe.refs === 0) {\r\n      CalendarPipe.removeTimer();\r\n    }\r\n\r\n    this.midnightSub.unsubscribe();\r\n  }\r\n\r\n  private static initTimer(ngZone: NgZone) {\r\n    // initialize the timer\r\n    if (!CalendarPipe.midnight) {\r\n      CalendarPipe.midnight = new EventEmitter<Date>();\r\n      if (typeof window !== 'undefined') {\r\n        const timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\r\n        CalendarPipe.timer = ngZone.runOutsideAngular(() => {\r\n          return window.setTimeout(() => {\r\n            // emit the current date\r\n            CalendarPipe.midnight.emit(new Date());\r\n\r\n            // refresh the timer\r\n            CalendarPipe.removeTimer();\r\n            CalendarPipe.initTimer(ngZone);\r\n          }, timeToUpdate);\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  private static removeTimer() {\r\n    if (CalendarPipe.timer) {\r\n      window.clearTimeout(CalendarPipe.timer);\r\n      CalendarPipe.timer = null;\r\n      CalendarPipe.midnight = null;\r\n    }\r\n  }\r\n\r\n  private static _getMillisecondsUntilUpdate() {\r\n    const now = momentConstructor();\r\n    const tomorrow = momentConstructor().startOf('day').add(1, 'days');\r\n    const timeToMidnight = tomorrow.valueOf() - now.valueOf();\r\n    return timeToMidnight + 1000; // 1 second after midnight\r\n  }\r\n}\r\n",
    "/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\nimport {Pipe, PipeTransform} from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nconst momentConstructor = moment;\r\n\r\n@Pipe({ name: 'amAdd' })\r\nexport class AddPipe implements PipeTransform {\r\n    transform(value: any, amount: moment.DurationInputArg1, unit?: moment.DurationInputArg2): any {\r\n        if (typeof amount === 'undefined' || (typeof amount === 'number' && typeof unit === 'undefined')) {\r\n            throw new Error('AddPipe: missing required arguments');\r\n        }\r\n        return momentConstructor(value).add(amount, unit);\r\n    }\r\n}\r\n"
  ],
  "names": [
    "moment.parseZone",
    "momentConstructor",
    "moment.utc",
    "moment.isMoment",
    "moment.isDate",
    "moment.unix",
    "moment.duration"
  ],
  "mappings": "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"
}
