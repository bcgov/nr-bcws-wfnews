import { ChangeDetectorRef, PipeTransform, OnDestroy, NgZone } from '@angular/core';
import * as moment from 'moment';
import * as ɵngcc0 from '@angular/core';
export declare class TimeAgoPipe implements PipeTransform, OnDestroy {
    private cdRef;
    private ngZone;
    private currentTimer;
    private lastTime;
    private lastValue;
    private lastOmitSuffix;
    private lastLocale?;
    private lastText;
    constructor(cdRef: ChangeDetectorRef, ngZone: NgZone);
    transform(value: Date | moment.Moment, omitSuffix?: boolean): string;
    ngOnDestroy(): void;
    private createTimer();
    private removeTimer();
    private getSecondsUntilUpdate(momentInstance);
    private hasChanged(value, omitSuffix?);
    private getTime(value);
    private getLocale(value);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TimeAgoPipe, never>;
    static ɵpipe: ɵngcc0.ɵɵPipeDeclaration<TimeAgoPipe, "amTimeAgo", false>;
}

//# sourceMappingURL=time-ago.pipe.d.ts.map